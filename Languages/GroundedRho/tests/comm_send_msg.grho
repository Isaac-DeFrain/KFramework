// send plus

    new x in {

      x!(@1!(Nil,0,true,"e")) |
      for( @{a!(\b,*c,\d,*e)} <- x ){

           [for( a,@\b <- @{@{\b | \d}!(*a,*c,*e)} & @{c!(\d)},e <- a ){ a!(\b,\d) | c!(*e) }]
      }
    }

/*
Output:
<T>
  <activity>
    <task>
      <k>
        [ for ( @ c ! ( \ d ) , e <- @ 1 & a , @ \ b <- @ ( @ true ) ! ( 1 , 0 , "e" ) ) { a ! ( \ b , \ d ) | c ! ( * e ) } ]
      </k>
    </task>
  </activity>
  <tuplespace>
    <sends>
      .SendCellBag
    </sends>
    <input>
      <recs>
        .RecCellBag
      </recs>
      <sums>
        .SumCellBag
      </sums>
    </input>
  </tuplespace>
  <nextLoc>
    1
  </nextLoc>
  <original>
    new x in { x ! ( ( @ 1 ) ! ( Nil , 0 , true , "e" ) ) | for ( @ ( a ! ( \ b , * c , \ d , * e ) ) <- x ) { [ for ( a , @ \ b <- @ ( @ \ b | \ d ) ! ( * a , * c , * e ) & @ c ! ( \ d ) , e <- a ) { a ! ( \ b , \ d ) | c ! ( * e ) } ] } }
  </original>
  <OGfreevar>
    .Set
  </OGfreevar>
  <OGvarcontexts>
    .Set
  </OGvarcontexts>
  <OGdeBruijn>
    new boundN( 0 ) in { boundN( 0 ) ! ( ( @ 1 ) ! ( Nil , 0 , true , "e" ) ) | for ( @ boundN( 1 ) ! ( boundP( 2 ) , * boundN( 3 ) , boundP( 4 ) , * boundN( 5 ) ) <- boundN( 0 ) ) { [ for ( boundN( 6 ) , @ boundP( 7 ) <- @ @ boundP( 2 ) | boundP( 4 ) ! ( * boundN( 1 ) , * boundN( 3 ) , * boundN( 5 ) ) & @ boundN( 8 ) ! ( boundP( 9 ) ) , boundN( 10 ) <- boundN( 1 ) ) { boundN( 6 ) ! ( boundP( 7 ) , boundP( 9 ) ) | boundN( 8 ) ! ( * boundN( 10 ) ) } ] } }
  </OGdeBruijn>
</T>
*/

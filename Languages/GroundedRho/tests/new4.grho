// New - parallel News

    new x in { x!("private msg for no one") } | new x in { x!("passed private msg",*rtnChan) | for( y,z <- x ){ z!(*y) } } | new x in { x!("private msg for no one") }

/*
Output:
<T>
  <activity>
    .TaskCellBag
  </activity>
  <tuplespace>
    <sends>
      <send>
        <schan>
          @ unforgeable( 1 )
        </schan>
        <msg>
          "private msg for no one"
        </msg>
        <arity>
          1
        </arity>
        <stype>
          0
        </stype>
      </send> <send>
        <schan>
          @ unforgeable( 2 )
        </schan>
        <msg>
          "private msg for no one"
        </msg>
        <arity>
          1
        </arity>
        <stype>
          0
        </stype>
      </send> <send>
        <schan>
          rtnChan
        </schan>
        <msg>
          "passed private msg"
        </msg>
        <arity>
          1
        </arity>
        <stype>
          0
        </stype>
      </send>
    </sends>
    <receives>
      .RecCellBag
    </receives>
  </tuplespace>
  <nextLoc>
    3
  </nextLoc>
  <original>
    new x in { x ! ( "private msg for no one" ) } | new x in { x ! ( "passed private msg" , * rtnChan ) | for ( y , z <- x ) { z ! ( * y ) } } | new x in { x ! ( "private msg for no one" ) }
  </original>
  <OGfreevar>
    SetItem ( rtnChan : name )
  </OGfreevar>
  <OGvarcontexts>
    .Set
  </OGvarcontexts>
  <OGdeBruijn>
    new boundN( 0 ) in { boundN( 0 ) ! ( "private msg for no one" ) } | new boundN( 1 ) in { boundN( 1 ) ! ( "passed private msg" , * rtnChan ) | for ( boundN( 2 ) , boundN( 3 ) <- boundN( 1 ) ) { boundN( 3 ) ! ( * boundN( 2 ) ) } } | new boundN( 4 ) in { boundN( 4 ) ! ( "private msg for no one" ) }
  </OGdeBruijn>
</T>
*/
// New - nested

    new x in { x!(1) | new x in { x!(1) } | new x in { @1!(*x) | for( @[\x,\y] <- x ){ (\x , \y ,) } | x!([1,2]) } }

/*
Output:
<T>
  <activity>
    <task>
      <k>
        ( 1 , 2 ,)
      </k>
    </task>
  </activity>
  <tuplespace>
    <sends>
      <send>
        ( @ 1 ) ! ( unforgeable( 2 ) )
      </send> <send>
        ( @ unforgeable( 0 ) ) ! ( 1 )
      </send> <send>
        { @ unforgeable( 1 ) } ! ( 1 )
      </send>
    </sends>
    <input>
      <recs>
        .RecCellBag
      </recs>
      <sums>
        .SumCellBag
      </sums>
    </input>
  </tuplespace>
  <nextLoc>
    3
  </nextLoc>
  <original>
    new x in { x ! ( 1 ) | new x in { x ! ( 1 ) } | new x in { ( @ 1 ) ! ( * x ) | for ( @ [ \ x , \ y ] <- x ) { ( \ x , \ y ,) } | x ! ( [ 1 , 2 ] ) } }
  </original>
  <OGfreevar>
    .Set
  </OGfreevar>
  <OGvarcontexts>
    SetItem ( x )
  </OGvarcontexts>
  <OGdeBruijn>
    new boundN( 0 ) in { boundN( 0 ) ! ( 1 ) | new boundN( 1 ) in { boundN( 1 ) ! ( 1 ) } | new boundN( 2 ) in { ( @ 1 ) ! ( * boundN( 2 ) ) | for ( @ [ boundP( 3 ) , boundP( 4 ) ] <- boundN( 2 ) ) { ( boundP( 3 ) , boundP( 4 ) ,) } | boundN( 2 ) ! ( [ 1 , 2 ] ) } }
  </OGdeBruijn>
</T>
*/

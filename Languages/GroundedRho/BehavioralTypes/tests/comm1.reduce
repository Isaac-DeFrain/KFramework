// Reduce - one step reductions

  x!(*y) | x!("x") | y!("y") | for( z <- x ){ z!(for( z <- x ){ "hi" }) } | for( z <- y ){ *z } | for( z <- x ){ *z }

/*
  Output:
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        1
      </how>
    </Reaction>
    <Repar>
      "x" | x ! ( * y ) | y ! ( "y" ) | for ( z <- y ) { * z } | for ( z <- x ) { z ! ( for ( z <- x ) { "hi" } ) }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        1
      </how>
    </Reaction>
    <Repar>
      "y" | x ! ( "x" ) | x ! ( * y ) | for ( z <- x ) { * z } | for ( z <- x ) { z ! ( for ( z <- x ) { "hi" } ) }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        1
      </how>
    </Reaction>
    <Repar>
      * y | y ! ( "y" ) | x ! ( "x" ) | for ( z <- y ) { * z } | for ( z <- x ) { z ! ( for ( z <- x ) { "hi" } ) }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        2
      </how>
    </Reaction>
    <Repar>
      "x" | y ! ( "y" ) | y ! ( for ( z <- x ) { "hi" } ) | for ( z <- y ) { * z }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        2
      </how>
    </Reaction>
    <Repar>
      "y" | ( @ "x" ) ! ( for ( z <- x ) { "hi" } ) | x ! ( * y ) | for ( z <- x ) { * z }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        2
      </how>
    </Reaction>
    <Repar>
      "y" | y ! ( for ( z <- x ) { "hi" } ) | x ! ( "x" ) | for ( z <- x ) { * z }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        2
      </how>
    </Reaction>
    <Repar>
      * y | ( @ "x" ) ! ( for ( z <- x ) { "hi" } ) | y ! ( "y" ) | for ( z <- y ) { * z }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        3
      </how>
    </Reaction>
    <Repar>
      "hi" | y ! ( "y" ) | for ( z <- x ) { * z }
    </Repar>
    <Store>
      .
    </Store>
  </T>
#Or
  Result ==K <T>
    <Threads>
      .ThreadCellBag
    </Threads>
    <Tuplespace>
      <Sends>
        .SendCellBag
      </Sends>
      <Receives>
        .RecCellBag
      </Receives>
    </Tuplespace>
    <Reaction>
      <who>
        .
      </who>
      <what>
        .
      </what>
      <where>
        .
      </where>
      <how>
        3
      </how>
    </Reaction>
    <Repar>
      "x" | y ! ( "y" ) | for ( z <- x ) { "hi" }
    </Repar>
    <Store>
      .
    </Store>
  </T>
*/
// Receive scoping

    #deBruijn( 0 ; new a,b in { for( @{a!(\b)} <- @Nil ){ *a | *b } } ; .Map )
  
/*
Output: 

    new boundN( 0 ) , boundN( 1 ) in { for ( @ ( boundN( 2 ) ! ( boundP( 3 ) ) ) <- @ Nil ) { * boundN( 2 ) | * boundN( 1 ) } }

RNode:

    

*/
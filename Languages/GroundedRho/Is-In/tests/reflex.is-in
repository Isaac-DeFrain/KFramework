// Structural type inclusion for pattern-matching - type[#truncate] #isIn type[@Nil]

   type[ "par" ;; type[ "par" ;; type[ "eval" ;; type[ "leaf" ;; "namevar" ;; a ] ;; type[ "leaf" ;; "truncate" ;; #truncate ] ] ;; type[ "eval" ;; type[ "leaf" ;; "namevar" ;; b ] ;; type[ "leaf" ;; "truncate" ;; #truncate ] ] ] ;; type[ "eval" ;; type[ "leaf" ;; "namevar" ;; c ] ;; type[ "leaf" ;; "truncate" ;; #truncate ] ] ]
   #isIn
   type[ "par" ;; type[ "par" ;; type[ "eval" ;; type[ "leaf" ;; "namevar" ;; a ] ;; type[ "leaf" ;; "truncate" ;; #truncate ] ] ;; type[ "eval" ;; type[ "leaf" ;; "namevar" ;; b ] ;; type[ "leaf" ;; "truncate" ;; #truncate ] ] ] ;; type[ "eval" ;; type[ "leaf" ;; "namevar" ;; c ] ;; type[ "leaf" ;; "truncate" ;; #truncate ] ] ]

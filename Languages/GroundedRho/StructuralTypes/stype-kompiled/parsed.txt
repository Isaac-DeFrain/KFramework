module ARRAY$SYNTAX [org.kframework.attributes.Location(Location(86,1,90,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports ARRAY-SYMBOLIC$SYNTAX
endmodule


module ARRAY-IN-K$SYNTAX [org.kframework.attributes.Location(Location(58,1,84,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax List ::= "ensureOffsetList" "(" List "," Int "," KItem ")" [function() klabel(ensureOffsetList)]
  syntax Array ::= "makeArray" "(" Int "," KItem ")" [function() hook(ARRAY.make) klabel(makeArray)]
  syntax Array ::= "arr" "(" List "," Int "," KItem ")" [klabel(arr)]
endmodule


module ARRAY-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(50,1,52,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports ARRAY-IN-K$SYNTAX
endmodule


module ARRAY-SYNTAX [org.kframework.attributes.Location(Location(24,1,38,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports LIST
  imports ARRAY-SYNTAX$SYNTAX
  ModuleComment( Sets a range of indices (given by an index into the array and the number
   of indices to set) to the same value. ,[org.kframework.attributes.Location(Location(33,3,34,43)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module ARRAY-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(24,1,38,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports LIST$SYNTAX
  syntax KItem ::= Array "[" Int "]" [function() hook(ARRAY.lookup)]
  syntax Bool ::= Int "in_keys" "(" Array ")" [function() functional() hook(ARRAY.in_keys)]
  syntax Array [element(_[_<-_]) hook(ARRAY.Array) org.kframework.attributes.Location(Location(27,3,27,69)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) unit(arrayCtor)]
  syntax Array ::= Array "[" Int "<-" KItem "]" [function() hook(ARRAY.update) klabel(_[_<-_]) symbol()]
  syntax Array ::= Array "[" Int "<-" "undef" "]" [function() hook(ARRAY.remove)]
  syntax Array ::= "updateArray" "(" Array "," Int "," List ")" [function() hook(ARRAY.updateAll) klabel(updateArray)]
  syntax Array ::= "fillArray" "(" Array "," Int "," Int "," KItem ")" [function() hook(ARRAY.fill) klabel(fillArray)]
endmodule


module AUTO-CASTS [org.kframework.attributes.Location(Location(169,1,177,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports AUTO-CASTS$SYNTAX
  ModuleComment( this is part of the mechanism that allows concrete user syntax in K,[org.kframework.attributes.Location(Location(176,3,176,73)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(170,3,170,58)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( generates, for all sorts, productions of the form:,[org.kframework.attributes.Location(Location(171,3,171,56)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort ":Sort",[org.kframework.attributes.Location(Location(173,3,173,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort "::Sort",[org.kframework.attributes.Location(Location(172,3,172,29)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Sort  ::= K    ":>Sort",[org.kframework.attributes.Location(Location(175,3,175,29)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( KBott ::= Sort "<:Sort",[org.kframework.attributes.Location(Location(174,3,174,29)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module AUTO-CASTS$SYNTAX [org.kframework.attributes.Location(Location(169,1,177,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
endmodule


module AUTO-FOLLOW [org.kframework.attributes.Location(Location(179,1,190,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports AUTO-FOLLOW$SYNTAX
  ModuleComment( syntax K ::= K K,[org.kframework.attributes.Location(Location(186,3,186,22)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "b",[org.kframework.attributes.Location(Location(184,3,184,22)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "ab",[org.kframework.attributes.Location(Location(185,3,185,23)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "a",[org.kframework.attributes.Location(Location(183,3,183,22)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( of another terminal. This is useful to prevent ambiguities such as:,[org.kframework.attributes.Location(Location(182,3,182,73)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(180,3,180,58)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( generates a follow restriction for every terminal which is a prefix,[org.kframework.attributes.Location(Location(181,3,181,73)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( because it would turn the terminal into the terminal "ab".,[org.kframework.attributes.Location(Location(189,3,189,64)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( In the above example, the terminal "a" is not allowed to be followed by a "b",[org.kframework.attributes.Location(Location(188,3,188,83)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( #parse("ab", "K"),[org.kframework.attributes.Location(Location(187,3,187,23)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module AUTO-FOLLOW$SYNTAX [org.kframework.attributes.Location(Location(179,1,190,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
endmodule


module BASIC-K [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module BASIC-K$SYNTAX [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  syntax KItem [hook(K.KItem) org.kframework.attributes.Location(Location(10,3,10,30)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  syntax KConfigVar [org.kframework.attributes.Location(Location(12,3,12,27)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k)) token()]
  syntax K ::= KItem
endmodule


module BOOL [org.kframework.attributes.Location(Location(311,1,360,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports BOOL-SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K
  rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(325) org.kframework.attributes.Location(Location(325,8,325,29)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(326) org.kframework.attributes.Location(Location(326,8,326,29)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(338) org.kframework.attributes.Location(Location(338,8,338,38)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))=>`notBool_`(`_==Bool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(341) org.kframework.attributes.Location(Location(341,8,341,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(339) org.kframework.attributes.Location(Location(339,8,339,38)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#SemanticCastToBool(B),#SemanticCastToBool(B))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(340) org.kframework.attributes.Location(Location(340,8,340,38)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(348) org.kframework.attributes.Location(Location(348,8,348,33)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(350) org.kframework.attributes.Location(Location(350,8,350,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(349) org.kframework.attributes.Location(Location(349,8,349,33)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#SemanticCastToBool(K),#token("false","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(351) org.kframework.attributes.Location(Location(351,8,351,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(343) org.kframework.attributes.Location(Location(343,8,343,34)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(345) org.kframework.attributes.Location(Location(345,8,345,32)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(344) org.kframework.attributes.Location(Location(344,8,344,34)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(346) org.kframework.attributes.Location(Location(346,8,346,32)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(353) org.kframework.attributes.Location(Location(353,8,353,36)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(354) org.kframework.attributes.Location(Location(354,8,354,40)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(355) org.kframework.attributes.Location(Location(355,8,355,39)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#SemanticCastToBool(B),#token("false","Bool"))=>`notBool_`(#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(356) org.kframework.attributes.Location(Location(356,8,356,45)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(333) org.kframework.attributes.Location(Location(333,8,333,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(335) org.kframework.attributes.Location(Location(335,8,335,36)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(336) org.kframework.attributes.Location(Location(336,8,336,36)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#SemanticCastToBool(K),#token("true","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(334) org.kframework.attributes.Location(Location(334,8,334,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(328) org.kframework.attributes.Location(Location(328,8,328,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(330) org.kframework.attributes.Location(Location(330,8,330,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(331) org.kframework.attributes.Location(Location(331,8,331,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#SemanticCastToBool(B),#token("true","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(329) org.kframework.attributes.Location(Location(329,8,329,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=Bool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))=>`notBool_`(`_==Bool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(358) org.kframework.attributes.Location(Location(358,8,358,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module BOOL$SYNTAX [org.kframework.attributes.Location(Location(311,1,360,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority notBool_ > _andThenBool__BOOL _impliesBool__BOOL _andBool_ _orElseBool__BOOL _orBool__BOOL _xorBool__BOOL > _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _xorBool__BOOL
  syntax associativity left _orElseBool__BOOL
  syntax associativity left _orBool__BOOL
  syntax associativity left _impliesBool__BOOL
  syntax associativity left _andThenBool__BOOL
  syntax associativity left _andBool_
  syntax associativity left _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _==Bool__BOOL
  syntax associativity left _=/=Bool__BOOL
  syntax Bool ::= Bool "xorBool" Bool [boolOperation() function() functional() hook(BOOL.xor) left() smt-hook(xor)]
  syntax Bool ::= Bool "orElseBool" Bool [boolOperation() function() functional() hook(BOOL.orElse) left() smt-hook(or)]
  syntax Bool ::= Bool "orBool" Bool [boolOperation() function() functional() hook(BOOL.or) latex({#1}\vee_{\scriptstyle\it Bool}{#2}) left() smt-hook(or)]
  syntax Bool ::= Bool "impliesBool" Bool [boolOperation() function() functional() hook(BOOL.implies) left() smt-hook(=>)]
  syntax Bool ::= Bool "andThenBool" Bool [boolOperation() function() functional() hook(BOOL.andThen) left() smt-hook(and)]
  syntax Bool ::= Bool "andBool" Bool [boolOperation() function() functional() hook(BOOL.and) klabel(_andBool_) latex({#1}\wedge_{\scriptstyle\it Bool}{#2}) left() smt-hook(and) symbol()]
  syntax Bool ::= Bool "==Bool" Bool [function() functional() hook(BOOL.eq) left() smt-hook(=)]
  syntax Bool ::= Bool "=/=Bool" Bool [function() functional() hook(BOOL.ne) left() smt-hook(distinct)]
  syntax Bool ::= "notBool" Bool [boolOperation() function() functional() hook(BOOL.not) klabel(notBool_) latex(\neg_{\scriptstyle\it Bool}{#1}) smt-hook(not) symbol()]
endmodule


module BOOL-SYNTAX [org.kframework.attributes.Location(Location(305,1,309,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
endmodule


module BOOL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(305,1,309,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Bool [hook(BOOL.Bool) org.kframework.attributes.Location(Location(306,3,306,31)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Bool ::= "true" [token()]
  syntax Bool ::= "false" [token()]
endmodule


module BUILTIN-ID-TOKENS [org.kframework.attributes.Location(Location(20,1,23,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
endmodule


module BUILTIN-ID-TOKENS$SYNTAX [org.kframework.attributes.Location(Location(20,1,23,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*" [prec(2) token()]
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*" [prec(2) token()]
endmodule


module BYTES$SYNTAX [org.kframework.attributes.Location(Location(753,1,766,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports INT$SYNTAX
  imports BYTES-IN-K$SYNTAX
endmodule


module BYTES-IN-K$SYNTAX [org.kframework.attributes.Location(Location(679,1,751,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports STRING-BUFFER$SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  syntax associativity right _+Bytes__BYTES-IN-K
  syntax String ::= "Bytes2String" "(" Bytes "," StringBuffer ")" [function() klabel(Bytes2StringAux)]
  syntax String ::= "Bytes2String" "(" Bytes ")" [function() functional() klabel(Bytes2String)]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes) symbol()]
  syntax Signedness ::= "Signed" [klabel(signedBytes) symbol()]
  syntax Int ::= "lengthBytes" "(" Bytes "," Int ")" [function() klabel(lengthBytesAux) smtlib(lengthBytesAux)]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function() functional() klabel(lengthBytes) smtlib(lengthBytes)]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function() functional() klabel(Bytes2Int)]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes) symbol()]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes) symbol()]
  syntax Bytes ::= Int ":" Bytes
  syntax Bytes ::= Bytes "+Bytes" Bytes [function() functional() right()]
  syntax Bytes ::= "substrBytes" "(" Bytes "," Int "," Int ")" [function() klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes "," Bytes ")" [function() klabel(reverseBytesAux)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function() functional() klabel(reverseBytes)]
  syntax Bytes ::= "replaceAtBytes" "(" Bytes "," Int "," Bytes ")" [function() klabel(replaceAtBytes)]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," Int "," Int ")" [function() klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," Int "," Int ")" [function() klabel(padLeftBytes)]
  syntax Bytes ::= "nilBytes"
  syntax Bytes ::= "String2Bytes" "(" String ")" [function() functional() klabel(String2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Int "," Endianness ")" [function() functional() klabel(Int2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function() functional() klabel(Int2BytesNoLen)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Bytes ")" [function() klabel(Int2BytesAux)]
  syntax Bytes ::= ".Bytes" [function() functional()]
endmodule


module COLLECTIONS [org.kframework.attributes.Location(Location(295,1,303,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports SET
  imports MAP
  imports LIST
  imports COLLECTIONS$SYNTAX
endmodule


module COLLECTIONS$SYNTAX [org.kframework.attributes.Location(Location(295,1,303,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  syntax Set ::= "List2Set" "(" List ")" [function() functional() hook(SET.list2set) klabel(List2Set)]
  syntax List ::= "Set2List" "(" Set ")" [function() hook(SET.set2list) klabel(Set2List)]
endmodule


module CONFIG-CELLS [org.kframework.attributes.Location(Location(124,1,138,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RULE-LISTS
  imports KCELLS
  imports CONFIG-CELLS$SYNTAX
endmodule


module CONFIG-CELLS$SYNTAX [org.kframework.attributes.Location(Location(124,1,138,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">" [klabel(#configCell) symbol()]
  syntax Cell ::= "<" #CellName "/>" [klabel(#externalCell) symbol()]
  syntax #CellProperty ::= #CellName "=" KString [klabel(#cellProperty) symbol()]
  syntax #CellProperties ::= #CellProperty #CellProperties [klabel(#cellPropertyList) symbol()]
  syntax #CellProperties ::= "" [klabel(#cellPropertyListTerminator) symbol()]
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*" [prec(1) token()]
  syntax #CellName ::= #UpperId [token()]
  syntax #CellName ::= #LowerId [token()]
endmodule


module CONFIGURATION-PRIMITIVES [org.kframework.attributes.Location(Location(1367,1,1369,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports CONFIGURATION-PRIMITIVES$SYNTAX
endmodule


module CONFIGURATION-PRIMITIVES$SYNTAX [org.kframework.attributes.Location(Location(1367,1,1369,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax K ::= "#RESTORE_CONFIGURATION" "(" K ")" [klabel(#RESTORE_CONFIGURATION)]
endmodule


module DEFAULT-LAYOUT [org.kframework.attributes.Location(Location(213,1,217,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports DEFAULT-LAYOUT$SYNTAX
endmodule


module DEFAULT-LAYOUT$SYNTAX [org.kframework.attributes.Location(Location(213,1,217,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  syntax #Layout ::= r"(\\/\\/[^\\n\\r]*)"
  syntax #Layout ::= r"(\\/\\*([^\\*]|(\\*+([^\\*\\/])))*\\*+\\/)"
  syntax #Layout ::= r"([\\ \\n\\r\\t])"
endmodule


module DOMAINS [org.kframework.attributes.Location(Location(11,1,22,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING
  imports SET
  imports MAP
  imports LIST
  imports K-REFLECTION
  imports K-IO
  imports INT
  imports DOMAINS-SYNTAX
  imports DOMAINS$SYNTAX
  imports BOOL
  imports BASIC-K
endmodule


module DOMAINS$SYNTAX [org.kframework.attributes.Location(Location(11,1,22,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  imports K-REFLECTION$SYNTAX
  imports K-IO$SYNTAX
  imports INT$SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module DOMAINS-SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports STRING-SYNTAX
  imports ID
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL-SYNTAX
endmodule


module DOMAINS-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  imports STRING-SYNTAX$SYNTAX
  imports ID$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
endmodule


module FLOAT$SYNTAX [org.kframework.attributes.Location(Location(468,1,532,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority --Float__FLOAT > _^Float__FLOAT > _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT > _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _^Float__FLOAT
  syntax associativity left _>Float__FLOAT
  syntax associativity left _>=Float__FLOAT
  syntax associativity left _==Float_
  syntax associativity left _=/=Float__FLOAT
  syntax associativity left _<Float__FLOAT
  syntax associativity left _<=Float__FLOAT
  syntax associativity left _/Float__FLOAT
  syntax associativity left _-Float__FLOAT
  syntax associativity left _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _+Float__FLOAT
  syntax associativity left _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT
  syntax associativity left _*Float__FLOAT
  syntax associativity left _%Float__FLOAT
  syntax MInt ::= "significandFloat" "(" Float ")" [function() hook(FLOAT.significand) klabel(significandFloat)]
  syntax Int ::= "precisionFloat" "(" Float ")" [function() functional() hook(FLOAT.precision) klabel(precisionFloat)]
  syntax Int ::= "exponentFloat" "(" Float ")" [function() functional() hook(FLOAT.exponent) klabel(exponentFloat)]
  syntax Int ::= "exponentBitsFloat" "(" Float ")" [function() functional() hook(FLOAT.exponentBits) klabel(exponentBitsFloat)]
  syntax Int ::= "Float2Int" "(" Float ")" [function() functional() hook(FLOAT.float2int) klabel(Float2Int) latex({\\it{}Float2Int})]
  syntax Float ::= Float "^Float" Float [function() hook(FLOAT.pow) latex({#1}^{#2}) left()]
  syntax Float ::= Float "/Float" Float [function() hook(FLOAT.div) latex({#1}\mathrel{\div_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.div roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "-Float" Float [function() hook(FLOAT.sub) latex({#1}\mathrel{-_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.sub roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "+Float" Float [function() hook(FLOAT.add) latex({#1}\mathrel{+_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.add roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "*Float" Float [function() hook(FLOAT.mul) latex({#1}\mathrel{\ast_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.mul roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "%Float" Float [function() hook(FLOAT.rem) latex({#1}\mathrel{\%_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.rem roundNearestTiesToEven #1 #2))]
  syntax Float ::= "tanFloat" "(" Float ")" [function() hook(FLOAT.tan) klabel(tanFloat)]
  syntax Float ::= "sqrtFloat" "(" Float ")" [function() klabel(sqrtFloat)]
  syntax Float ::= "sinFloat" "(" Float ")" [function() functional() hook(FLOAT.sin) klabel(sinFloat)]
  syntax Float ::= "roundFloat" "(" Float "," Int "," Int ")" [function() hook(FLOAT.round) klabel(roundFloat)]
  syntax Float ::= "rootFloat" "(" Float "," Int ")" [function() hook(FLOAT.root) klabel(rootFloat)]
  syntax Float ::= "minValueFloat" "(" Int "," Int ")" [function() hook(FLOAT.minValue) klabel(minValueFloat)]
  syntax Float ::= "minFloat" "(" Float "," Float ")" [function() hook(FLOAT.min) klabel(minFloat) smt-hook(fp.min)]
  syntax Float ::= "maxValueFloat" "(" Int "," Int ")" [function() hook(FLOAT.maxValue) klabel(maxValueFloat)]
  syntax Float ::= "maxFloat" "(" Float "," Float ")" [function() hook(FLOAT.max) klabel(maxFloat) smt-hook(fp.max)]
  syntax Float ::= "logFloat" "(" Float ")" [function() hook(FLOAT.log) klabel(logFloat)]
  syntax Float ::= "floorFloat" "(" Float ")" [function() functional() hook(FLOAT.floor) klabel(floorFloat)]
  syntax Float ::= "expFloat" "(" Float ")" [function() functional() hook(FLOAT.exp) klabel(expFloat)]
  syntax Float ::= "cosFloat" "(" Float ")" [function() functional() hook(FLOAT.cos) klabel(cosFloat)]
  syntax Float ::= "ceilFloat" "(" Float ")" [function() functional() hook(FLOAT.ceil) klabel(ceilFloat)]
  syntax Float ::= "atanFloat" "(" Float ")" [function() functional() hook(FLOAT.atan) klabel(atanFloat)]
  syntax Float ::= "atan2Float" "(" Float "," Float ")" [function() hook(FLOAT.atan2) klabel(atan2Float)]
  syntax Float ::= "asinFloat" "(" Float ")" [function() hook(FLOAT.asin) klabel(asinFloat)]
  syntax Float ::= "acosFloat" "(" Float ")" [function() hook(FLOAT.acos) klabel(acosFloat)]
  syntax Float ::= "absFloat" "(" Float ")" [function() functional() hook(FLOAT.abs) klabel(absFloat) smt-hook(fp.abs)]
  syntax Float ::= "Int2Float" "(" Int "," Int "," Int ")" [function() hook(FLOAT.int2float) klabel(Int2Float) latex({\\it{}Int2Float})]
  syntax Float ::= "--Float" Float [function() functional() hook(FLOAT.neg) smt-hook(fp.neg)]
  syntax Bool ::= Float ">Float" Float [function() hook(FLOAT.gt) latex({#1}\mathrel{>_{\scriptstyle\it Float}}{#2}) left() smt-hook(fg.gt)]
  syntax Bool ::= Float ">=Float" Float [function() hook(FLOAT.ge) latex({#1}\mathrel{\geq_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.geq)]
  syntax Bool ::= Float "==Float" Float [function() hook(FLOAT.eq) klabel(_==Float_) latex({#1}\mathrel{==_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.eq)]
  syntax Bool ::= Float "=/=Float" Float [function() latex({#1}\mathrel{\neq_{\scriptstyle\it Float}}{#2}) left() smt-hook((not (fp.eq #1 #2)))]
  syntax Bool ::= Float "<Float" Float [function() hook(FLOAT.lt) latex({#1}\mathrel{<_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.lt)]
  syntax Bool ::= Float "<=Float" Float [function() hook(FLOAT.le) latex({#1}\mathrel{\leq_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.leq)]
  syntax Bool ::= "signFloat" "(" Float ")" [function() functional() hook(FLOAT.sign) klabel(signFloat)]
  syntax Bool ::= "isNaN" "(" Float ")" [function() functional() hook(FLOAT.isNaN) klabel(isNaN) smt-hook(fp.isNaN)]
  syntax Bool ::= "isInfinite" "(" Float ")" [function() functional() klabel(isInfinite)]
endmodule


module FLOAT-SYNTAX [org.kframework.attributes.Location(Location(461,1,466,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports FLOAT-SYNTAX$SYNTAX
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(461,1,466,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Float [hook(FLOAT.Float) org.kframework.attributes.Location(Location(462,3,462,34)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1) token()]
endmodule


module ID [org.kframework.attributes.Location(Location(786,1,792,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING
  imports ID-SYNTAX
  imports ID-SYMBOLIC
  imports ID$SYNTAX
  rule freshId(#SemanticCastToInt(I))=>`String2Id`(`_+String__STRING`(#token("\"_\"","String"),`Int2String`(#SemanticCastToInt(I)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(791) org.kframework.attributes.Location(Location(791,8,791,62)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module ID$SYNTAX [org.kframework.attributes.Location(Location(786,1,792,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports ID-SYNTAX$SYNTAX
  imports ID-SYMBOLIC$SYNTAX
endmodule


module ID-PROGRAM-PARSING [org.kframework.attributes.Location(Location(768,1,773,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports ID-PROGRAM-PARSING$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module ID-PROGRAM-PARSING$SYNTAX [org.kframework.attributes.Location(Location(768,1,773,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*" [autoReject() notInRules() prec(1) token()]
  syntax Id ::= #UpperId [autoReject() notInRules() token()]
  syntax Id ::= #LowerId [autoReject() notInRules() token()]
endmodule


module ID-SYMBOLIC [kast() org.kframework.attributes.Location(Location(794,1,798,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports ID-SYNTAX
  imports ID-SYMBOLIC$SYNTAX
  rule `String2Id`(#SemanticCastToString(S))=>`project:Id`(`#parseToken(_,_)_ID-SYMBOLIC`(#token("\"Id\"","String"),#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(797) org.kframework.attributes.Location(Location(797,8,797,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module ID-SYMBOLIC$SYNTAX [kast() org.kframework.attributes.Location(Location(794,1,798,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports ID-SYNTAX$SYNTAX
  syntax KItem ::= "#parseToken" "(" String "," String ")" [function() hook(STRING.parseToken)]
endmodule


module ID-SYNTAX [org.kframework.attributes.Location(Location(775,1,784,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports INT-SYNTAX
  imports ID-SYNTAX$SYNTAX
endmodule


module ID-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(775,1,784,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports INT-SYNTAX$SYNTAX
  syntax String ::= "Id2String" "(" Id ")" [function() functional() hook(STRING.token2string) klabel(Id2String)]
  syntax Id [org.kframework.attributes.Location(Location(779,3,779,19)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) token()]
  syntax Id ::= "freshId" "(" Int ")" [freshGenerator() function() functional() klabel(freshId)]
  syntax Id ::= "String2Id" "(" String ")" [function() functional() hook(STRING.string2token) klabel(String2Id)]
endmodule


module INT [org.kframework.attributes.Location(Location(430,1,459,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports K-EQUAL
  imports INT-COMMON
  imports INT$SYNTAX
  rule signExtendBitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_-Int__INT-COMMON`(`_modInt__INT-COMMON`(`_+Int_`(bitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN)),`_<<Int__INT-COMMON`(#token("1","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("1","Int")))),`_<<Int__INT-COMMON`(#token("1","Int"),#SemanticCastToInt(LEN))),`_<<Int__INT-COMMON`(#token("1","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(437) org.kframework.attributes.Location(Location(437,8,437,164)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule freshInt(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(455) org.kframework.attributes.Location(Location(455,8,455,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule bitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_modInt__INT-COMMON`(`_>>Int__INT-COMMON`(#SemanticCastToInt(I),#SemanticCastToInt(IDX)),`_<<Int__INT-COMMON`(#token("1","Int"),#SemanticCastToInt(LEN))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(435) org.kframework.attributes.Location(Location(435,8,435,85)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `minInt(_,_)_INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I2) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(448) org.kframework.attributes.Location(Location(448,8,448,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `minInt(_,_)_INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I1) requires `_<=Int__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(447) org.kframework.attributes.Location(Location(447,8,447,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_modInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_%Int__INT-COMMON`(`_+Int_`(`_%Int__INT-COMMON`(#SemanticCastToInt(I1),absInt(#SemanticCastToInt(I2))),absInt(#SemanticCastToInt(I2))),absInt(#SemanticCastToInt(I2))) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [concrete() contentStartColumn(5) contentStartLine(442) org.kframework.attributes.Location(Location(442,5,445,23)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_dividesInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==Int_`(`_%Int__INT-COMMON`(#SemanticCastToInt(I2),#SemanticCastToInt(I1)),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(452) org.kframework.attributes.Location(Location(452,8,452,58)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_divInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_/Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(I1),`_modInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))),#SemanticCastToInt(I2)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(439) org.kframework.attributes.Location(Location(439,8,440,23)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==K_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(450) org.kframework.attributes.Location(Location(450,8,450,40)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=Int__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`notBool_`(`_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(451) org.kframework.attributes.Location(Location(451,8,451,53)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module INT$SYNTAX [org.kframework.attributes.Location(Location(430,1,459,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-SYMBOLIC$SYNTAX
  imports INT-COMMON$SYNTAX
  syntax K ::= "srandInt" "(" Int ")" [function() hook(INT.srand) klabel(srandInt)]
  syntax Int ::= "randInt" "(" Int ")" [function() hook(INT.rand) klabel(randInt)]
  syntax Int ::= "freshInt" "(" Int ")" [freshGenerator() function() functional() klabel(freshInt)]
endmodule


module INT-COMMON [org.kframework.attributes.Location(Location(372,1,416,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports INT-SYNTAX
  imports INT-COMMON$SYNTAX
  imports BOOL
  ModuleComment( divInt and modInt implement e-division ,[org.kframework.attributes.Location(Location(385,16,385,59)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( FIXME: translate /Int and %Int into smtlib ,[org.kframework.attributes.Location(Location(381,16,381,63)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( /Int and %Int implement t-division ,[org.kframework.attributes.Location(Location(382,16,382,55)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module INT-COMMON$SYNTAX [org.kframework.attributes.Location(Location(372,1,416,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority ~Int__INT-COMMON > _^Int__INT-COMMON _^%Int___INT-COMMON > _%Int__INT-COMMON _*Int__INT-COMMON _modInt__INT-COMMON _/Int__INT-COMMON _divInt__INT-COMMON > _+Int_ _-Int__INT-COMMON > _<<Int__INT-COMMON _>>Int__INT-COMMON > _&Int__INT-COMMON > _xorInt__INT-COMMON > _|Int__INT-COMMON
  syntax associativity left _|Int__INT-COMMON
  syntax associativity left _xorInt__INT-COMMON
  syntax associativity left _modInt__INT-COMMON
  syntax associativity left _divInt__INT-COMMON
  syntax associativity left _^Int__INT-COMMON _^%Int___INT-COMMON
  syntax associativity left _^Int__INT-COMMON
  syntax associativity left _^%Int___INT-COMMON
  syntax associativity left _>Int__INT-COMMON
  syntax associativity left _>>Int__INT-COMMON
  syntax associativity left _>=Int__INT-COMMON
  syntax associativity left _==Int_
  syntax associativity left _=/=Int__INT-COMMON
  syntax associativity left _<Int__INT-COMMON
  syntax associativity left _<=Int__INT-COMMON
  syntax associativity left _<<Int__INT-COMMON _>>Int__INT-COMMON
  syntax associativity left _<<Int__INT-COMMON
  syntax associativity left _/Int__INT-COMMON
  syntax associativity left _-Int__INT-COMMON
  syntax associativity left _+Int_ _-Int__INT-COMMON
  syntax associativity left _+Int_
  syntax associativity left _*Int__INT-COMMON
  syntax associativity left _&Int__INT-COMMON
  syntax associativity left _%Int__INT-COMMON _*Int__INT-COMMON _modInt__INT-COMMON _/Int__INT-COMMON _divInt__INT-COMMON
  syntax associativity left _%Int__INT-COMMON
  syntax Int ::= Int "|Int" Int [function() functional() hook(INT.or) latex({#1}\mathrel{|_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "xorInt" Int [function() functional() hook(INT.xor) latex({#1}\mathrel{\oplus_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "modInt" Int [function() hook(INT.emod) left() smt-hook(mod)]
  syntax Int ::= Int "divInt" Int [function() hook(INT.ediv) left() smt-hook(div)]
  syntax Int ::= Int "^Int" Int [function() hook(INT.pow) latex({#1}\mathrel{{\char`\^}_{\!\scriptstyle\it Int}}{#2}) left() smt-hook(^)]
  syntax Int ::= Int "^%Int" Int Int [function() hook(INT.powmod) left() smt-hook((mod (^ #1 #2) #3))]
  syntax Int ::= Int ">>Int" Int [function() hook(INT.shr) latex({#1}\mathrel{\gg_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "<<Int" Int [function() hook(INT.shl) latex({#1}\mathrel{\ll_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "/Int" Int [function() hook(INT.tdiv) latex({#1}\mathrel{\div_{\scriptstyle\it Int}}{#2}) left() smt-hook(div)]
  syntax Int ::= Int "-Int" Int [function() functional() hook(INT.sub) latex({#1}\mathrel{-_{\scriptstyle\it Int}}{#2}) left() smt-hook(-)]
  syntax Int ::= Int "+Int" Int [function() functional() hook(INT.add) klabel(_+Int_) latex({#1}\mathrel{+_{\scriptstyle\it Int}}{#2}) left() smt-hook(+) symbol()]
  syntax Int ::= Int "*Int" Int [function() functional() hook(INT.mul) latex({#1}\mathrel{\ast_{\scriptstyle\it Int}}{#2}) left() smt-hook(*)]
  syntax Int ::= Int "&Int" Int [function() functional() hook(INT.and) latex({#1}\mathrel{\&_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "%Int" Int [function() hook(INT.tmod) latex({#1}\mathrel{\%_{\scriptstyle\it Int}}{#2}) left() smt-hook(mod)]
  syntax Int ::= "~Int" Int [function() functional() hook(INT.not) latex(\mathop{\sim_{\scriptstyle\it Int}}{#1})]
  syntax Int ::= "signExtendBitRangeInt" "(" Int "," Int "," Int ")" [function() hook(INT.signExtendBitRange) klabel(signExtendBitRangeInt)]
  syntax Int ::= "minInt" "(" Int "," Int ")" [function() functional() hook(INT.min) smtlib(int_min)]
  syntax Int ::= "maxInt" "(" Int "," Int ")" [function() functional() hook(INT.max) smtlib(int_max)]
  syntax Int ::= "log2Int" "(" Int ")" [function() hook(INT.log2) klabel(log2Int)]
  syntax Int ::= "bitRangeInt" "(" Int "," Int "," Int ")" [function() hook(INT.bitRange) klabel(bitRangeInt)]
  syntax Int ::= "absInt" "(" Int ")" [function() functional() hook(INT.abs) klabel(absInt) smtlib(int_abs)]
  syntax Bool ::= Int "dividesInt" Int [function()]
  syntax Bool ::= Int ">Int" Int [function() functional() hook(INT.gt) latex({#1}\mathrel{>_{\scriptstyle\it Int}}{#2}) left() smt-hook(>)]
  syntax Bool ::= Int ">=Int" Int [function() functional() hook(INT.ge) latex({#1}\mathrel{\geq_{\scriptstyle\it Int}}{#2}) left() smt-hook(>=)]
  syntax Bool ::= Int "==Int" Int [function() functional() hook(INT.eq) klabel(_==Int_) latex({#1}\mathrel{{=}{=}_{\scriptstyle\it Int}}{#2}) left() smt-hook(=)]
  syntax Bool ::= Int "=/=Int" Int [function() functional() hook(INT.ne) latex({#1}\mathrel{{=}{/}{=}_{\scriptstyle\it Int}}{#2}) left() smt-hook(distinct)]
  syntax Bool ::= Int "<Int" Int [function() functional() hook(INT.lt) latex({#1}\mathrel{<_{\scriptstyle\it Int}}{#2}) left() smt-hook(<)]
  syntax Bool ::= Int "<=Int" Int [function() functional() hook(INT.le) latex({#1}\mathrel{\leq_{\scriptstyle\it Int}}{#2}) left() smt-hook(<=)]
endmodule


module INT-SYMBOLIC$SYNTAX [kore() org.kframework.attributes.Location(Location(418,1,428,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports ML-SYNTAX$SYNTAX
  imports INT-COMMON$SYNTAX
endmodule


module INT-SYNTAX [org.kframework.attributes.Location(Location(367,1,370,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports INT-SYNTAX$SYNTAX
endmodule


module INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(367,1,370,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax Int ::= r"[\\+-]?[0-9]+" [prec(2) prefer() token()]
endmodule


module IS-IN [org.kframework.attributes.Location(Location(12,1,270,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))]
  imports MAP
  imports IS-IN-SYNTAX
  imports IS-IN$SYNTAX
  syntax Cell ::= TCell
  syntax Cell ::= KCell
  rule initTCell(Init)=>`<T>`(#noDots(.KList),initKCell(Init),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initKCell(Init)=>`<k>`(#noDots(.KList),#SemanticCastToBool(`project:Bool`(`Map:lookup`(Init,#token("$PGM","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuplepat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(252) org.kframework.attributes.Location(Location(252,8,252,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuple\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Pattern_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(254) org.kframework.attributes.Location(Location(254,8,254,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(253) org.kframework.attributes.Location(Location(253,8,253,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"setpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(251) org.kframework.attributes.Location(Location(251,8,251,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"send\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(167) org.kframework.attributes.Location(Location(167,8,167,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"send\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`Pattern_STYPE-SYNTAX`(.KList))=>`_orBool__BOOL`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Pattern_STYPE-SYNTAX`(.KList)),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Pattern_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(258) org.kframework.attributes.Location(Location(258,8,258,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"receive\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(168) org.kframework.attributes.Location(Location(168,8,168,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"receive\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(B)),`Pattern_STYPE-SYNTAX`(.KList))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Pattern_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(259) org.kframework.attributes.Location(Location(259,8,259,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"quote\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(166) org.kframework.attributes.Location(Location(166,8,166,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"quote\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"name\"","String")))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(188) org.kframework.attributes.Location(Location(188,8,188,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"quote\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(_)),`Name_STYPE-SYNTAX`(.KList))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Process_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(237) org.kframework.attributes.Location(Location(237,8,237,97)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),#SemanticCastToIntermediateType(C)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(D),#SemanticCastToIntermediateType(E)))=>`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(D)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(B),#SemanticCastToIntermediateType(C)),#SemanticCastToIntermediateType(E))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(E)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(B),#SemanticCastToIntermediateType(C)),#SemanticCastToIntermediateType(D)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),#SemanticCastToIntermediateType(D)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(C)),#SemanticCastToIntermediateType(E)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),#SemanticCastToIntermediateType(E)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(C)),#SemanticCastToIntermediateType(D)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),#SemanticCastToIntermediateType(E)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(E)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),#SemanticCastToIntermediateType(D)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(76) org.kframework.attributes.Location(Location(76,8,84,62)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String")),#SemanticCastToIntermediateType(A)),#SemanticCastToType(B))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),#SemanticCastToType(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(88) org.kframework.attributes.Location(Location(88,8,88,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D))),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(E),#SemanticCastToIntermediateType(F)))=>`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),#SemanticCastToIntermediateType(E)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D)),#SemanticCastToIntermediateType(F))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),#SemanticCastToIntermediateType(F)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D)),#SemanticCastToIntermediateType(E)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D))),#SemanticCastToIntermediateType(E)),`_==K_`(#SemanticCastToIntermediateType(F),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D))),#SemanticCastToIntermediateType(F)),`_==K_`(#SemanticCastToIntermediateType(E),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(67) org.kframework.attributes.Location(Location(67,8,73,127)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D))),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(E),#SemanticCastToIntermediateType(F)))=>`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),#SemanticCastToIntermediateType(E)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D)),#SemanticCastToIntermediateType(F))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),#SemanticCastToIntermediateType(F)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D)),#SemanticCastToIntermediateType(E)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D))),#SemanticCastToIntermediateType(E)),`_==K_`(#SemanticCastToIntermediateType(F),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToLeaf(A),#SemanticCastToLeaf(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D))),#SemanticCastToIntermediateType(F)),`_==K_`(#SemanticCastToIntermediateType(E),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))) requires `_=/=String__STRING`(#SemanticCastToString(T),#token("\"par\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(58) org.kframework.attributes.Location(Location(58,8,65,38)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D))),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(E),#SemanticCastToIntermediateType(F)))=>`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),#SemanticCastToIntermediateType(E)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D)),#SemanticCastToIntermediateType(F))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),#SemanticCastToIntermediateType(F)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D)),#SemanticCastToIntermediateType(E)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D))),#SemanticCastToIntermediateType(E)),`_==K_`(#SemanticCastToIntermediateType(F),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToLeaf(C),#SemanticCastToLeaf(D))),#SemanticCastToIntermediateType(F)),`_==K_`(#SemanticCastToIntermediateType(E),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))) requires `_=/=String__STRING`(#SemanticCastToString(S),#token("\"par\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(49) org.kframework.attributes.Location(Location(49,8,56,38)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D))),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(E),#SemanticCastToIntermediateType(F)))=>`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),#SemanticCastToIntermediateType(E)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D)),#SemanticCastToIntermediateType(F))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),#SemanticCastToIntermediateType(F)),`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D)),#SemanticCastToIntermediateType(E)))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D))),#SemanticCastToIntermediateType(E)),`_==K_`(#SemanticCastToIntermediateType(F),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))),`_andBool_`(`_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(T),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D))),#SemanticCastToIntermediateType(F)),`_==K_`(#SemanticCastToIntermediateType(E),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))) requires `_andBool_`(`_=/=String__STRING`(#SemanticCastToString(S),#token("\"par\"","String")),`_=/=String__STRING`(#SemanticCastToString(T),#token("\"par\"","String"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(40) org.kframework.attributes.Location(Location(40,8,47,64)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(165) org.kframework.attributes.Location(Location(165,8,165,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(A),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))),#SemanticCastToType(B))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),#SemanticCastToType(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(87) org.kframework.attributes.Location(Location(87,8,87,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`Pattern_STYPE-SYNTAX`(.KList))=>`_orBool__BOOL`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Pattern_STYPE-SYNTAX`(.KList)),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Pattern_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(257) org.kframework.attributes.Location(Location(257,8,257,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"orpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(172) org.kframework.attributes.Location(Location(172,8,172,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"orpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(248) org.kframework.attributes.Location(Location(248,8,248,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"notpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(170) org.kframework.attributes.Location(Location(170,8,170,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"notpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(249) org.kframework.attributes.Location(Location(249,8,249,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"newuri\"","String"),#SemanticCastToString(_),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"name\"","String")))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(190) org.kframework.attributes.Location(Location(190,8,190,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"new\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(173) org.kframework.attributes.Location(Location(173,8,173,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"mappat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(245) org.kframework.attributes.Location(Location(245,8,245,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"listpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(246) org.kframework.attributes.Location(Location(246,8,246,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"proc\"","String")),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"name\"","String")))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(185) org.kframework.attributes.Location(Location(185,8,185,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"name\"","String")),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"proc\"","String")))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(184) org.kframework.attributes.Location(Location(184,8,184,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"unforgeable\"","String"),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"name\"","String")))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(189) org.kframework.attributes.Location(Location(189,8,189,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`Uri_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"uri\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(159) org.kframework.attributes.Location(Location(159,8,162,27)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`Unforgeable_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"unforgeable\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(153) org.kframework.attributes.Location(Location(153,8,156,35)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`String_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"string\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(141) org.kframework.attributes.Location(Location(141,8,144,30)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`List_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"list\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(123) org.kframework.attributes.Location(Location(123,8,126,28)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`Int_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"int\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(117) org.kframework.attributes.Location(Location(117,8,120,27)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`ByteArray_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"bytearray\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(111) org.kframework.attributes.Location(Location(111,8,114,33)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`Bool_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"bool\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(105) org.kframework.attributes.Location(Location(105,8,108,28)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`Process_STYPE-SYNTAX`(.KList))=>`_andBool_`(`_=/=String__STRING`(#SemanticCastToString(S),#token("\"unforgeable\"","String")),`_=/=String__STRING`(#SemanticCastToString(S),#token("\"wildcard\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(234) org.kframework.attributes.Location(Location(234,8,234,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`Pattern_STYPE-SYNTAX`(.KList))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"wildcard\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(243) org.kframework.attributes.Location(Location(243,8,243,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(_)),`Name_STYPE-SYNTAX`(.KList))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"unforgeable\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(239) org.kframework.attributes.Location(Location(239,8,239,84)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#SemanticCastToString(S),#SemanticCastToLeaf(L)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"proc\"","String")))=>`_=/=String__STRING`(#SemanticCastToString(S),#token("\"unforgeable\"","String")) requires `_=/=String__STRING`(#SemanticCastToString(S),#token("\"wildcard\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(181) org.kframework.attributes.Location(Location(181,8,182,68)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"ifthen\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(B)),`Pattern_STYPE-SYNTAX`(.KList))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Pattern_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(260) org.kframework.attributes.Location(Location(260,8,260,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"eval\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(169) org.kframework.attributes.Location(Location(169,8,169,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"eval\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Pattern_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(255) org.kframework.attributes.Location(Location(255,8,255,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"else\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`Pattern_STYPE-SYNTAX`(.KList))=>`_orBool__BOOL`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Pattern_STYPE-SYNTAX`(.KList)),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Pattern_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(256) org.kframework.attributes.Location(Location(256,8,256,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"andpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(171) org.kframework.attributes.Location(Location(171,8,171,149)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"andpat\"","String"),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`Pattern_STYPE-SYNTAX`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(247) org.kframework.attributes.Location(Location(247,8,247,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`Tuple_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"tuple\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(147) org.kframework.attributes.Location(Location(147,8,150,29)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`Set_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"set\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(135) org.kframework.attributes.Location(Location(135,8,138,27)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(_),#SemanticCastToIntermediateType(_)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),`toString(_)_STYPE-SYNTAX`(`Map_STYPE-SYNTAX`(.KList))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))))=>`_==String__STRING`(#SemanticCastToString(S),#token("\"map\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(129) org.kframework.attributes.Location(Location(129,8,132,27)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"proc\"","String")))=>`_=/=String__STRING`(#SemanticCastToString(S),#token("\"quote\"","String")) requires `_=/=String__STRING`(#SemanticCastToString(S),#token("\"leaf\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(177) org.kframework.attributes.Location(Location(177,8,178,58)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(C),#SemanticCastToIntermediateType(D)))=>`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(C)),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),#SemanticCastToIntermediateType(D))) requires `_andBool_`(`_=/=String__STRING`(#SemanticCastToString(S),#token("\"par\"","String")),`_=/=String__STRING`(#SemanticCastToString(S),#token("\"leaf\"","String"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(34) org.kframework.attributes.Location(Location(34,8,35,92)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(`type[_;;_;;_]_STYPE-SYNTAX`(#SemanticCastToString(S),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)),`Process_STYPE-SYNTAX`(.KList))=>`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_orBool__BOOL`(`_==String__STRING`(#SemanticCastToString(S),#token("\"list\"","String")),`_==String__STRING`(#SemanticCastToString(S),#token("\"map\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"set\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"tuple\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"bundle\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"bundle0\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"bundle+\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"bundle-\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"mult\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"plus\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"minus\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"leq\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"and\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"or\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"not\"","String"))),`_==String__STRING`(#SemanticCastToString(S),#token("\"varref\"","String"))),`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"eval\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Name_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"match\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"method\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"par\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Process_STYPE-SYNTAX`(.KList))),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"send\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Name_STYPE-SYNTAX`(.KList))),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"else\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(A),`Process_STYPE-SYNTAX`(.KList))),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"receive\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"contract\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"new\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Process_STYPE-SYNTAX`(.KList)))),`_andBool_`(`_==String__STRING`(#SemanticCastToString(S),#token("\"ifthen\"","String")),`_#isIn__STYPE-SYNTAX`(#SemanticCastToIntermediateType(B),`Process_STYPE-SYNTAX`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(205) org.kframework.attributes.Location(Location(205,8,231,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList)))=>`_==K_`(#SemanticCastToType(T),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(199) org.kframework.attributes.Location(Location(199,8,199,63)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"orpat\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)))=>`_orBool__BOOL`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),#SemanticCastToIntermediateType(A)),`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),#SemanticCastToIntermediateType(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(194) org.kframework.attributes.Location(Location(194,8,194,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"notpat\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(_)))=>`notBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),#SemanticCastToIntermediateType(A))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(195) org.kframework.attributes.Location(Location(195,8,195,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"uri\"","String"),#SemanticCastToString(S)))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"uri\"","String"),#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(101) org.kframework.attributes.Location(Location(101,8,101,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"unforgeable\"","String"),#SemanticCastToInt(I)))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"unforgeable\"","String"),#SemanticCastToInt(I))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(100) org.kframework.attributes.Location(Location(100,8,100,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),#SemanticCastToString(S)))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(99) org.kframework.attributes.Location(Location(99,8,99,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"procvar\"","String"),#SemanticCastToProcVar(X)))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"procvar\"","String"),#SemanticCastToProcVar(X))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(97) org.kframework.attributes.Location(Location(97,8,97,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String")))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(98) org.kframework.attributes.Location(Location(98,8,98,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"int\"","String"),#SemanticCastToInt(I)))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"int\"","String"),#SemanticCastToInt(I))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(96) org.kframework.attributes.Location(Location(96,8,96,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"bool\"","String"),#SemanticCastToBool(B)))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"bool\"","String"),#SemanticCastToBool(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(95) org.kframework.attributes.Location(Location(95,8,95,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"empty\"","String"),#token("\"method\"","String"),#token("\"args\"","String")))=>`_==K_`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"empty\"","String"),#token("\"method\"","String"),#token("\"args\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(102) org.kframework.attributes.Location(Location(102,8,102,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"andpat\"","String"),#SemanticCastToIntermediateType(A),#SemanticCastToIntermediateType(B)))=>`_andBool_`(`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),#SemanticCastToIntermediateType(A)),`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),#SemanticCastToIntermediateType(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(193) org.kframework.attributes.Location(Location(193,8,193,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),#SemanticCastToType(T))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(27) org.kframework.attributes.Location(Location(27,8,27,30)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(A),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String")),#SemanticCastToIntermediateType(B)))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(A),#SemanticCastToIntermediateType(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(90) org.kframework.attributes.Location(Location(90,8,90,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToType(A),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),#SemanticCastToIntermediateType(B),`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String"))))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(A),#SemanticCastToIntermediateType(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(89) org.kframework.attributes.Location(Location(89,8,89,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#isProc__STYPE-SYNTAX`(#SemanticCastToType(T))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`Process_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(264) org.kframework.attributes.Location(Location(264,8,264,41)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#isPat__STYPE-SYNTAX`(#SemanticCastToType(T))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`Pattern_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(265) org.kframework.attributes.Location(Location(265,8,265,41)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#isName__STYPE-SYNTAX`(#SemanticCastToType(T))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(T),`Name_STYPE-SYNTAX`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(263) org.kframework.attributes.Location(Location(263,8,263,38)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment(rule T:Type #isIn Pattern => notBool (T #isIn Process orBool T #isIn Name),[org.kframework.attributes.Location(Location(268,1,268,77)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(------------------------------------,[org.kframework.attributes.Location(Location(203,1,203,39)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(------------------------------------,[org.kframework.attributes.Location(Location(201,1,201,39)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--------------------------------,[org.kframework.attributes.Location(Location(24,1,24,35)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--------------------------------,[org.kframework.attributes.Location(Location(22,1,22,35)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--- Type Inclusion Semantics ---,[org.kframework.attributes.Location(Location(23,1,23,35)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--- Process Type ---,[org.kframework.attributes.Location(Location(204,1,204,23)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--- Pattern Type ---,[org.kframework.attributes.Location(Location(241,1,241,23)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--- Name, Process, Pattern Types ---,[org.kframework.attributes.Location(Location(202,1,202,39)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--- Name Type ---,[org.kframework.attributes.Location(Location(236,1,236,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--- Logical Connectives ---,[org.kframework.attributes.Location(Location(192,1,192,30)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(--- Leaves ---,[org.kframework.attributes.Location(Location(92,1,92,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( tuple pattern is in Pattern,[org.kframework.attributes.Location(Location(252,96,252,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( tuple is in Process,[org.kframework.attributes.Location(Location(209,92,209,114)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( simpltypes are in Pattern,[org.kframework.attributes.Location(Location(253,96,253,124)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( set pattern is in Pattern,[org.kframework.attributes.Location(Location(251,96,251,124)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( set is in Process,[org.kframework.attributes.Location(Location(208,92,208,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( pattern tuple is in Pattern,[org.kframework.attributes.Location(Location(254,107,254,137)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( not BExp is in Process,[org.kframework.attributes.Location(Location(220,92,220,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( map pattern is in Pattern,[org.kframework.attributes.Location(Location(250,96,250,124)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( map pattern is in Pattern,[org.kframework.attributes.Location(Location(245,96,245,124)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( map is in Process,[org.kframework.attributes.Location(Location(207,92,207,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( logical or is in Pattern,[org.kframework.attributes.Location(Location(248,96,248,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( logical not is in Pattern,[org.kframework.attributes.Location(Location(249,96,249,124)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( logical and is in Pattern,[org.kframework.attributes.Location(Location(247,96,247,124)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( list pattern is in Pattern,[org.kframework.attributes.Location(Location(246,96,246,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( list is in Process,[org.kframework.attributes.Location(Location(206,92,206,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( if...then Proc is in Process,[org.kframework.attributes.Location(Location(231,92,231,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( if...then Proc else Proc is in Process,[org.kframework.attributes.Location(Location(227,92,227,133)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( if...then Pattern is in Pattern,[org.kframework.attributes.Location(Location(260,107,260,141)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( if...then Pattern else Pattern is in Pattern,[org.kframework.attributes.Location(Location(256,130,256,177)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( bundle is in Process,[org.kframework.attributes.Location(Location(213,92,213,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( bundle is in Process,[org.kframework.attributes.Location(Location(212,92,212,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( bundle is in Process,[org.kframework.attributes.Location(Location(211,92,211,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( bundle is in Process,[org.kframework.attributes.Location(Location(210,92,210,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( WildProc matches every ProcOrPat,[org.kframework.attributes.Location(Location(176,1,176,36)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( WildProc matches all leaves except #truncate and WildName,[org.kframework.attributes.Location(Location(180,1,180,61)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( WildName matches any quoted NameOrPat,[org.kframework.attributes.Location(Location(187,1,187,41)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( WildCards,[org.kframework.attributes.Location(Location(175,1,175,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( VarRef is in Process,[org.kframework.attributes.Location(Location(221,92,221,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Transitivity,[org.kframework.attributes.Location(Location(29,1,29,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( This line kompiles, but I'm not sure how to use it...,[org.kframework.attributes.Location(Location(30,1,30,57)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( SimpleTypes,[org.kframework.attributes.Location(Location(93,1,93,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( SendPat is in Pattern,[org.kframework.attributes.Location(Location(258,130,258,154)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Send is in Process,[org.kframework.attributes.Location(Location(226,92,226,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Reflexivity of type inclusion,[org.kframework.attributes.Location(Location(26,1,26,33)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( ReceivePat is in Pattern,[org.kframework.attributes.Location(Location(259,107,259,134)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Receive is in Process,[org.kframework.attributes.Location(Location(228,92,228,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( ParPat is in Pattern,[org.kframework.attributes.Location(Location(257,130,257,153)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Par matches with another Par,[org.kframework.attributes.Location(Location(38,1,38,32)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Par is unordered,[org.kframework.attributes.Location(Location(37,1,37,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Par is in Process,[org.kframework.attributes.Location(Location(225,92,225,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Par Recursion - several pars,[org.kframework.attributes.Location(Location(75,1,75,32)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Only wildcard leaves are in Pattern,[org.kframework.attributes.Location(Location(242,1,242,39)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Only one par,[org.kframework.attributes.Location(Location(39,1,39,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Only LeafType in SimpleType,[org.kframework.attributes.Location(Location(164,1,164,31)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Only #truncate is in #truncate,[org.kframework.attributes.Location(Location(198,1,198,34)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Nil in par is structurally vacuous: P | Nil <=> Nil | P <=> P,[org.kframework.attributes.Location(Location(86,1,86,65)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( New is in Process,[org.kframework.attributes.Location(Location(230,92,230,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( MethodProc is in Process,[org.kframework.attributes.Location(Location(224,92,224,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Matching top-level constructors -> subtype inclusion (excluding Par & Leaf),[org.kframework.attributes.Location(Location(33,1,33,79)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Match is in Process,[org.kframework.attributes.Location(Location(223,92,223,114)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Leaves are in Process except wildcards & unforgeable,[org.kframework.attributes.Location(Location(233,1,233,56)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Exclusivity of Name, Process, & Pattern,[org.kframework.attributes.Location(Location(267,1,267,43)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( EvalPat is in Pattern,[org.kframework.attributes.Location(Location(255,107,255,131)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Eval is in Process,[org.kframework.attributes.Location(Location(222,92,222,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each uri is in Uri,[org.kframework.attributes.Location(Location(158,1,158,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each unforgeable is in Unforgeable,[org.kframework.attributes.Location(Location(152,1,152,38)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each tuple is in Tuple,[org.kframework.attributes.Location(Location(146,1,146,26)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each string is in String,[org.kframework.attributes.Location(Location(140,1,140,28)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each set is in Set,[org.kframework.attributes.Location(Location(134,1,134,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each map is in Map,[org.kframework.attributes.Location(Location(128,1,128,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each list is in List,[org.kframework.attributes.Location(Location(122,1,122,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each integer is in Int,[org.kframework.attributes.Location(Location(116,1,116,26)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each bytearray is in ByteArray,[org.kframework.attributes.Location(Location(110,1,110,34)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each bool, integer, string has only one inhabitant <=> concrete processes,[org.kframework.attributes.Location(Location(94,1,94,77)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Each bool is in Bool,[org.kframework.attributes.Location(Location(104,1,104,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( Contract is in Process,[org.kframework.attributes.Location(Location(229,92,229,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( BExp or  BExp is in Process,[org.kframework.attributes.Location(Location(219,92,219,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( BExp and BExp is in Process,[org.kframework.attributes.Location(Location(218,92,218,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( AExp <= AExp is in Process,[org.kframework.attributes.Location(Location(217,92,217,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( AExp - AExp is in Process,[org.kframework.attributes.Location(Location(216,92,216,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( AExp + AExp is in Process,[org.kframework.attributes.Location(Location(215,92,215,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( AExp * AExp is in Process,[org.kframework.attributes.Location(Location(214,92,214,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( #truncate,[org.kframework.attributes.Location(Location(197,1,197,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment( #isName, #isProc, #isPat syntactic sugar,[org.kframework.attributes.Location(Location(262,1,262,44)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
  ModuleComment(  rule A:Type #isIn C:Type => true when A #isIn ?B:Type andBool ?B #isIn C,[org.kframework.attributes.Location(Location(31,1,31,77)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
endmodule


module IS-IN$SYNTAX [org.kframework.attributes.Location(Location(12,1,270,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))]
  imports MAP$SYNTAX
  imports IS-IN-SYNTAX$SYNTAX
  syntax TCellFragment ::= "<T>-fragment" KCellOpt "</T>-fragment" [cellFragment(TCell)]
  syntax TCell ::= "initTCell" "(" Map ")" [function() initializer() noThread()]
  syntax TCell ::= "<T>" KCell "</T>" [cell() cellName(T) color(teal) contentStartColumn(5) contentStartLine(18) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  syntax KResult ::= Bool
  syntax KCellOpt ::= KCell
  syntax KCellOpt ::= "noKCell" [cellOptAbsent(KCell)]
  syntax KCell ::= "initKCell" "(" Map ")" [function() initializer() noThread()]
  syntax KCell ::= "<k>" K "</k>" [cell() cellName(k) color(purple) contentStartColumn(5) contentStartLine(18) format(%1%i%n%2%d%n%3) maincell() org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  Bubble(config,<T color="teal">
      <k color="purple"> $PGM:Bool </k>
    </T>,[contentStartColumn(5) contentStartLine(18) org.kframework.attributes.Location(Location(17,3,20,8)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))])
endmodule


module IS-IN-SYNTAX [org.kframework.attributes.Location(Location(7,1,10,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))]
  imports STYPE-SYNTAX
  imports IS-IN-SYNTAX$SYNTAX
endmodule


module IS-IN-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(7,1,10,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/Is-In/is-in.k))]
  imports STYPE-SYNTAX$SYNTAX
endmodule


module K [org.kframework.attributes.Location(Location(233,1,250,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-SORT-LATTICE
  imports K$SYNTAX
  imports AUTO-FOLLOW
  imports AUTO-CASTS
  ModuleComment( functions that preserve sorts and can therefore have inner rewrites,[org.kframework.attributes.Location(Location(246,3,246,73)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( functions that do not preserve sort and therefore cannot have inner rewrites,[org.kframework.attributes.Location(Location(248,3,248,82)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module K$SYNTAX [org.kframework.attributes.Location(Location(233,1,250,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
  syntax priority #KRewrite > #withConfig
  syntax associativity non-assoc #KRewrite
  syntax K ::= K "=>" K [klabel(#KRewrite) poly(0, 1, 2) symbol()]
  syntax K ::= K "#as" K [klabel(#KAs) poly(0, 1, 2) symbol()]
  syntax K ::= "#fun" "(" K "=>" K ")" "(" K ")" [klabel(#fun3) poly(0, 2; 1, 3) symbol()]
  syntax K ::= "#fun" "(" K ")" "(" K ")" [klabel(#fun2) poly(0, 1, 2) prefer() symbol()]
endmodule


module K-BOTTOM-SORT [org.kframework.attributes.Location(Location(159,1,162,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-BOTTOM-SORT$SYNTAX [org.kframework.attributes.Location(Location(159,1,162,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott [poly(0)]
endmodule


module K-EQUAL [org.kframework.attributes.Location(Location(800,1,831,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports BOOL
  imports BASIC-K
  rule `_==Bool__BOOL`(#SemanticCastToBool(K1),#SemanticCastToBool(K2))=>`_==K_`(#SemanticCastToBool(K1),#SemanticCastToBool(K2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(824) org.kframework.attributes.Location(Location(824,8,824,43)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2))=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(822) org.kframework.attributes.Location(Location(822,8,822,45)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(C),_,B2)=>B2 requires `notBool_`(#SemanticCastToBool(C)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(829) org.kframework.attributes.Location(Location(829,8,829,67)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(C),B1,_)=>B1 requires #SemanticCastToBool(C) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(828) org.kframework.attributes.Location(Location(828,8,828,59)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  ModuleComment( Set membership over terms. In addition to equality over
      concrete patterns, K also supports computing equality
      between a concrete pattern and a symbolic pattern.
      This is compiled efficiently down to pattern matching,
      and can be used by putting a term with unbound variables
      in the left child of :=K or =/=K. Note that this does not
      bind variables used on the lhs however (although this may
      change in the future).,[org.kframework.attributes.Location(Location(808,3,815,30)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module K-EQUAL$SYNTAX [org.kframework.attributes.Location(Location(800,1,831,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority _:=K_ _=/=K_ _:/=K_ _==K_ > #And _andThenBool__BOOL #Implies #Floor _impliesBool__BOOL #Exists #Ceil _andBool_ _orElseBool__BOOL #Forall #Not #Or notBool_ _orBool__BOOL #Equals _xorBool__BOOL
  syntax associativity left _=/=K_ _==K_
  syntax associativity left _:=K_ _:/=K_
  syntax K ::= "#if" Bool "#then" K "#else" K "#fi" [function() functional() hook(KEQUAL.ite) poly(0, 2, 3) smt-hook(ite)]
  syntax Bool ::= K "==K" K [equalEqualK() function() functional() hook(KEQUAL.eq) klabel(_==K_) latex({#1}\mathrel{=_K}{#2}) smt-hook(=) symbol()]
  syntax Bool ::= K "=/=K" K [function() functional() hook(KEQUAL.ne) klabel(_=/=K_) latex({#1}\mathrel{\neq_K}{#2}) notEqualEqualK() smt-hook(distinct) symbol()]
  syntax Bool ::= K ":=K" K [equalEqualK() function() functional() klabel(_:=K_) symbol()]
  syntax Bool ::= K ":/=K" K [function() functional() klabel(_:/=K_) notEqualEqualK() symbol()]
endmodule


module K-IO [org.kframework.attributes.Location(Location(869,1,999,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING
  imports META
  imports LIST
  imports K-IO$SYNTAX
  rule `#stdout_K-IO`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(972) org.kframework.attributes.Location(Location(972,8,972,20)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#stdin_K-IO`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(971) org.kframework.attributes.Location(Location(971,8,971,19)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#stderr_K-IO`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(973) org.kframework.attributes.Location(Location(973,8,973,20)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#open(_)_K-IO`(#SemanticCastToString(S))=>`#open(_,_)_K-IO`(#SemanticCastToString(S),#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(965) org.kframework.attributes.Location(Location(965,8,965,48)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #projectString(#SemanticCastToString(S))=>#SemanticCastToString(S) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(996) org.kframework.attributes.Location(Location(996,8,996,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #projectInt(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(998) org.kframework.attributes.Location(Location(998,8,998,31)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( stdout ,[org.kframework.attributes.Location(Location(983,71,983,82)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( stderr ,[org.kframework.attributes.Location(Location(983,95,983,106)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( exit code ,[org.kframework.attributes.Location(Location(983,44,983,58)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( executes the given command line with `sh -c cmd:String` on unix or,[org.kframework.attributes.Location(Location(980,3,980,72)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( `cmd /c cmd:String` on windows and returns #systemResult,[org.kframework.attributes.Location(Location(981,3,981,62)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( System,[org.kframework.attributes.Location(Location(978,1,978,10)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Remove a file or empty directory from the disk. Returns .K on success or an IOError on failure.,[org.kframework.attributes.Location(Location(991,3,991,101)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( ------------------------------,[org.kframework.attributes.Location(Location(977,1,977,34)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( #tempFile(path: String, fd: Int),[org.kframework.attributes.Location(Location(989,21,989,56)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( #make safe temp ( prefix:String, suffix:String):IOFile - creates a temporary file in the default system location,[org.kframework.attributes.Location(Location(986,3,986,118)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module K-IO$SYNTAX [org.kframework.attributes.Location(Location(869,1,999,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports META$SYNTAX
  imports LIST$SYNTAX
  syntax String ::= "#projectString" "(" IOString ")" [function() klabel(#projectString)]
  syntax Stream ::= "#buffer" "(" K ")" [klabel(#buffer)]
  syntax KItem ::= "#systemResult" "(" Int "," String "," String ")"
  syntax KItem ::= "#system" "(" String ")" [function() hook(IO.system) impure() klabel(#system)]
  syntax KItem ::= "#stat" "(" String ")" [function() hook(IO.stat) impure()]
  syntax KItem ::= "#opendir" "(" String ")" [function() hook(IO.opendir) impure()]
  syntax KItem ::= "#lstat" "(" String ")" [function() hook(IO.lstat) impure()]
  syntax K ::= "#write" "(" Int "," String ")" [function() hook(IO.write) impure()]
  syntax K ::= "#unlock" "(" Int "," Int ")" [function() hook(IO.unlock) impure()]
  syntax K ::= "#seekEnd" "(" Int "," Int ")" [function() hook(IO.seekEnd) impure()]
  syntax K ::= "#seek" "(" Int "," Int ")" [function() hook(IO.seek) impure()]
  syntax K ::= "#remove" "(" String ")" [function() functional() hook(IO.remove) impure() klabel(#remove)]
  syntax K ::= "#putc" "(" Int "," Int ")" [function() hook(IO.putc) impure()]
  syntax K ::= "#logToFile" "(" String "," String ")" [function() functional() hook(IO.log) impure() klabel(#logToFile) returnsUnit()]
  syntax K ::= "#lock" "(" Int "," Int ")" [function() hook(IO.lock) impure()]
  syntax K ::= "#close" "(" Int ")" [function() hook(IO.close) impure()]
  syntax Int ::= "#stdout" [function() functional()]
  syntax Int ::= "#stdin" [function() functional()]
  syntax Int ::= "#stderr" [function() functional()]
  syntax Int ::= "#projectInt" "(" IOInt ")" [function() klabel(#projectInt)]
  syntax IOString ::= String
  syntax IOString ::= IOError
  syntax IOString ::= "#read" "(" Int "," Int ")" [function() hook(IO.read) impure()]
  syntax IOInt ::= Int
  syntax IOInt ::= IOError
  syntax IOInt ::= "#tell" "(" Int ")" [function() hook(IO.tell) impure()]
  syntax IOInt ::= "#open" "(" String "," String ")" [function() hook(IO.open) impure()]
  syntax IOInt ::= "#open" "(" String ")" [function()]
  syntax IOInt ::= "#getc" "(" Int ")" [function() hook(IO.getc) impure()]
  syntax IOFile ::= IOError
  syntax IOFile ::= "#tempFile" "(" String "," Int ")"
  syntax IOFile ::= "#mkstemp" "(" String "," String ")" [function() hook(IO.mkstemp) impure() klabel(#mkstemp)]
  syntax IOError ::= "#unknownIOError" "(" Int ")" [klabel(#unknownIOError) symbol()]
  syntax IOError ::= "#noparse" [klabel(#noparse) symbol()]
  syntax IOError ::= "#EXDEV" [klabel(#EXDEV) symbol()]
  syntax IOError ::= "#EWOULDBLOCK" [klabel(#EWOULDBLOCK) symbol()]
  syntax IOError ::= "#ETOOMANYREFS" [klabel(#ETOOMANYREFS) symbol()]
  syntax IOError ::= "#ETIMEDOUT" [klabel(#ETIMEDOUT) symbol()]
  syntax IOError ::= "#ESRCH" [klabel(#ESRCH) symbol()]
  syntax IOError ::= "#ESPIPE" [klabel(#ESPIPE) symbol()]
  syntax IOError ::= "#ESOCKTNOSUPPORT" [klabel(#ESOCKTNOSUPPORT) symbol()]
  syntax IOError ::= "#ESHUTDOWN" [klabel(#ESHUTDOWN) symbol()]
  syntax IOError ::= "#EROFS" [klabel(#EROFS) symbol()]
  syntax IOError ::= "#ERANGE" [klabel(#ERANGE) symbol()]
  syntax IOError ::= "#EPROTOTYPE" [klabel(#EPROTOTYPE) symbol()]
  syntax IOError ::= "#EPROTONOSUPPORT" [klabel(#EPROTONOSUPPORT) symbol()]
  syntax IOError ::= "#EPIPE" [klabel(#EPIPE) symbol()]
  syntax IOError ::= "#EPFNOSUPPORT" [klabel(#EPFNOSUPPORT) symbol()]
  syntax IOError ::= "#EPERM" [klabel(#EPERM) symbol()]
  syntax IOError ::= "#EOVERFLOW" [klabel(#EOVERFLOW) symbol()]
  syntax IOError ::= "#EOPNOTSUPP" [klabel(#EOPNOTSUPP) symbol()]
  syntax IOError ::= "#EOF" [klabel(#EOF) symbol()]
  syntax IOError ::= "#ENXIO" [klabel(#ENXIO) symbol()]
  syntax IOError ::= "#ENOTTY" [klabel(#ENOTTY) symbol()]
  syntax IOError ::= "#ENOTSOCK" [klabel(#ENOTSOCK) symbol()]
  syntax IOError ::= "#ENOTEMPTY" [klabel(#ENOTEMPTY) symbol()]
  syntax IOError ::= "#ENOTDIR" [klabel(#ENOTDIR) symbol()]
  syntax IOError ::= "#ENOTCONN" [klabel(#ENOTCONN) symbol()]
  syntax IOError ::= "#ENOSYS" [klabel(#ENOSYS) symbol()]
  syntax IOError ::= "#ENOSPC" [klabel(#ENOSPC) symbol()]
  syntax IOError ::= "#ENOPROTOOPT" [klabel(#ENOPROTOOPT) symbol()]
  syntax IOError ::= "#ENOMEM" [klabel(#ENOMEM) symbol()]
  syntax IOError ::= "#ENOLCK" [klabel(#ENOLCK) symbol()]
  syntax IOError ::= "#ENOEXEC" [klabel(#ENOEXEC) symbol()]
  syntax IOError ::= "#ENOENT" [klabel(#ENOENT) symbol()]
  syntax IOError ::= "#ENODEV" [klabel(#ENODEV) symbol()]
  syntax IOError ::= "#ENOBUFS" [klabel(#ENOBUFS) symbol()]
  syntax IOError ::= "#ENFILE" [klabel(#ENFILE) symbol()]
  syntax IOError ::= "#ENETUNREACH" [klabel(#ENETUNREACH) symbol()]
  syntax IOError ::= "#ENETRESET" [klabel(#ENETRESET) symbol()]
  syntax IOError ::= "#ENETDOWN" [klabel(#ENETDOWN) symbol()]
  syntax IOError ::= "#ENAMETOOLONG" [klabel(#ENAMETOOLONG) symbol()]
  syntax IOError ::= "#EMSGSIZE" [klabel(#EMSGSIZE) symbol()]
  syntax IOError ::= "#EMLINK" [klabel(#EMLINK) symbol()]
  syntax IOError ::= "#EMFILE" [klabel(#EMFILE) symbol()]
  syntax IOError ::= "#ELOOP" [klabel(#ELOOP) symbol()]
  syntax IOError ::= "#EISDIR" [klabel(#EISDIR) symbol()]
  syntax IOError ::= "#EISCONN" [klabel(#EISCONN) symbol()]
  syntax IOError ::= "#EIO" [klabel(#EIO) symbol()]
  syntax IOError ::= "#EINVAL" [klabel(#EINVAL) symbol()]
  syntax IOError ::= "#EINTR" [klabel(#EINTR) symbol()]
  syntax IOError ::= "#EINPROGRESS" [klabel(#EINPROGRESS) symbol()]
  syntax IOError ::= "#EHOSTUNREACH" [klabel(#EHOSTUNREACH) symbol()]
  syntax IOError ::= "#EHOSTDOWN" [klabel(#EHOSTDOWN) symbol()]
  syntax IOError ::= "#EFBIG" [klabel(#EFBIG) symbol()]
  syntax IOError ::= "#EFAULT" [klabel(#EFAULT) symbol()]
  syntax IOError ::= "#EEXIST" [klabel(#EEXIST) symbol()]
  syntax IOError ::= "#EDOM" [klabel(#EDOM) symbol()]
  syntax IOError ::= "#EDESTADDRREQ" [klabel(#EDESTADDRREQ) symbol()]
  syntax IOError ::= "#EDEADLK" [klabel(#EDEADLK) symbol()]
  syntax IOError ::= "#ECONNRESET" [klabel(#ECONNRESET) symbol()]
  syntax IOError ::= "#ECONNREFUSED" [klabel(#ECONNREFUSED) symbol()]
  syntax IOError ::= "#ECONNABORTED" [klabel(#ECONNABORTED) symbol()]
  syntax IOError ::= "#ECHILD" [klabel(#ECHILD) symbol()]
  syntax IOError ::= "#EBUSY" [klabel(#EBUSY) symbol()]
  syntax IOError ::= "#EBADF" [klabel(#EBADF) symbol()]
  syntax IOError ::= "#EALREADY" [klabel(#EALREADY) symbol()]
  syntax IOError ::= "#EAGAIN" [klabel(#EAGAIN) symbol()]
  syntax IOError ::= "#EAFNOSUPPORT" [klabel(#EAFNOSUPPORT) symbol()]
  syntax IOError ::= "#EADDRNOTAVAIL" [klabel(#EADDRNOTAVAIL) symbol()]
  syntax IOError ::= "#EADDRINUSE" [klabel(#EADDRINUSE) symbol()]
  syntax IOError ::= "#EACCES" [klabel(#EACCES) symbol()]
  syntax IOError ::= "#E2BIG" [klabel(#E2BIG) symbol()]
endmodule


module K-REFLECTION [org.kframework.attributes.Location(Location(833,1,849,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING
  imports K-REFLECTION-SYMBOLIC
  imports K-REFLECTION$SYNTAX
  imports BASIC-K
  ModuleComment( undefined,[org.kframework.attributes.Location(Location(846,3,846,15)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( meaningful only for the purposes of compilation to a binary, otherwise,[org.kframework.attributes.Location(Location(845,3,845,76)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module K-REFLECTION$SYNTAX [org.kframework.attributes.Location(Location(833,1,849,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports K-REFLECTION-SYMBOLIC$SYNTAX
  imports BASIC-K$SYNTAX
  syntax String ::= "#sort" "(" K ")" [function() hook(KREFLECTION.sort) klabel(#sort)]
  syntax String ::= "#getenv" "(" String ")" [function() hook(KREFLECTION.getenv) impure() klabel(#getenv)]
  syntax List ::= "#argv" "(" ")" [function() hook(KREFLECTION.argv) klabel(#argv)]
  syntax KItem ::= "getKLabel" "(" K ")" [function() hook(KREFLECTION.getKLabel) klabel(getKLabel)]
  syntax KItem ::= "#fresh" "(" String ")" [function() hook(KREFLECTION.fresh) impure() klabel(#fresh)]
  syntax K ::= "#configuration" [function() hook(KREFLECTION.configuration) impure()]
endmodule


module K-REFLECTION-SYMBOLIC [org.kframework.attributes.Location(Location(851,1,861,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports STRING
  imports K-REFLECTION-SYMBOLIC$SYNTAX
  imports BASIC-K
  ModuleComment( return true if no variable nor unresolved function appears in any subterm,[org.kframework.attributes.Location(Location(858,3,858,79)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( return empty string if the term has no klabel,[org.kframework.attributes.Location(Location(855,3,855,51)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module K-REFLECTION-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(851,1,861,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax String ::= "#getKLabelString" "(" K ")" [function() hook(KREFLECTION.getKLabelString) klabel(#getKLabelString)]
  syntax Bool ::= "#isVariable" "(" K ")" [function() hook(KREFLECTION.isVariable) klabel(#isVariable)]
  syntax Bool ::= "#isConcrete" "(" K ")" [function() hook(KREFLECTION.isConcrete) klabel(#isConcrete)]
endmodule


module K-SORT-LATTICE [org.kframework.attributes.Location(Location(164,1,167,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports K-TOP-SORT
  imports K-SORT-LATTICE$SYNTAX
  imports K-BOTTOM-SORT
endmodule


module K-SORT-LATTICE$SYNTAX [org.kframework.attributes.Location(Location(164,1,167,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports K-TOP-SORT$SYNTAX
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-TERM [org.kframework.attributes.Location(Location(253,1,259,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-TERM$SYNTAX
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TERM$SYNTAX [org.kframework.attributes.Location(Location(253,1,259,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
endmodule


module K-TOP-SORT [org.kframework.attributes.Location(Location(154,1,157,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-TOP-SORT$SYNTAX
endmodule


module K-TOP-SORT$SYNTAX [org.kframework.attributes.Location(Location(154,1,157,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott [poly(1)]
endmodule


module KAST [org.kframework.attributes.Location(Location(30,1,50,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports KSTRING
  imports KAST$SYNTAX
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
  ModuleComment( something that doesn't collide with meta-variables,[org.kframework.attributes.Location(Location(44,24,44,77)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module KAST$SYNTAX [org.kframework.attributes.Location(Location(30,1,50,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports KSTRING$SYNTAX
  imports BUILTIN-ID-TOKENS$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left #KList
  syntax KList ::= KList "," KList [assoc() klabel(#KList) left() prefer() symbol() unit(#EmptyKList)]
  syntax KList ::= K
  syntax KList ::= ".KList" [klabel(#EmptyKList) symbol()]
  syntax KList ::= ".::KList" [klabel(#EmptyKList) symbol()]
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`" [token()]
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*" [autoReject() prec(1) token()]
  syntax KLabel ::= #LowerId [autoReject() token()]
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")" [klabel(#KApply) symbol()]
  syntax KBott ::= "#token" "(" KString "," KString ")" [klabel(#KToken) symbol()]
  syntax KBott ::= "#klabel" "(" KLabel ")" [klabel(#WrappedKLabel) symbol()]
endmodule


module KCELLS [org.kframework.attributes.Location(Location(97,1,110,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports KCELLS$SYNTAX
  imports KAST
endmodule


module KCELLS$SYNTAX [org.kframework.attributes.Location(Location(97,1,110,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports KAST$SYNTAX
  syntax associativity non-assoc #withConfig
  syntax associativity left #cells
  syntax K ::= Bag
  syntax Cell [org.kframework.attributes.Location(Location(100,3,100,13)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag [assoc() klabel(#cells) left() symbol() unit(#cells)]
  syntax Bag ::= ".Bag" [klabel(#cells) symbol()]
  syntax Bag ::= ".::Bag" [klabel(#cells) symbol()]
  syntax Bag ::= "(" Bag ")" [bracket()]
  syntax #RuleBody ::= "[" "[" K "]" "]" Bag [avoid() klabel(#withConfig) symbol()]
endmodule


module KSEQ [org.kframework.attributes.Location(Location(54,1,63,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  imports KAST
  imports K-TOP-SORT
endmodule


module KSEQ$SYNTAX [org.kframework.attributes.Location(Location(54,1,63,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports KAST$SYNTAX
  imports K-TOP-SORT$SYNTAX
  syntax associativity left #KSequence
  syntax K ::= K "~>" K [assoc() klabel(#KSequence) left() symbol() unit(#EmptyK)]
  syntax K ::= ".K" [klabel(#EmptyK) symbol() unparseAvoid()]
  syntax K ::= ".::K" [klabel(#EmptyK) symbol() unparseAvoid()]
  syntax K ::= "." [klabel(#EmptyK) symbol()]
  syntax K ::= "(" K ")" [bracket() poly(0, 1)]
endmodule


module KSEQ-SYMBOLIC [org.kframework.attributes.Location(Location(85,1,95,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports KSEQ
endmodule


module KSEQ-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(85,1,95,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  imports KSEQ$SYNTAX
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\$)([A-Z][A-Za-z0-9'_]*)" [autoReject() token()]
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\!|\\?)?([A-Z][A-Za-z0-9'_]*|_)" [autoReject() prec(1) token()]
  syntax #KVariable ::= #UpperId [autoReject() token()]
endmodule


module KSTRING [org.kframework.attributes.Location(Location(15,1,18,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports KSTRING$SYNTAX
  ModuleComment( optionally qualified strings, like in Scala "abc", i"abc", r"a*bc", etc.,[org.kframework.attributes.Location(Location(17,3,17,78)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module KSTRING$SYNTAX [org.kframework.attributes.Location(Location(15,1,18,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
endmodule


module LIST [org.kframework.attributes.Location(Location(228,1,293,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(268,17,268,24)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(TODO(AndreiS): move the paragraph below,[org.kframework.attributes.Location(Location(244,3,244,44)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( \section{User-Defined Lists} It is very common in \K to define a shorthand
   for lists of user-defined sorts. \K 's builtin way of doing this is to use
   List\{KItem,"Separator"\}, where "Separator" is any valid character or
   sequence of characters used to separate distinct elements.
   For example, after defining \\
   syntax KItem ::= Elt\\
   a user could then define
   syntax Elts ::= List\{Elt,","\} \\
   which would be a comma-separated list whose elements are all of sort Elt. A
   user could just as well define \\
   syntax Elts ::= List\{Elt,"and"\} \\
   which would be a list containing elements of sort Elt that are separated with
   the word "and". If only one argument is given, the separator is asumed to be
   commas. So, \\
   syntax Elts = List\{Elt\} \\
   would define a comma-separated list containing elements of sort Elt.
  ,[org.kframework.attributes.Location(Location(245,3,261,4)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( \section{Description} \K lists are ordered collections that may contain
   duplicate elements. These behave more like lists in functional programming
   languages than arrays in imperative programming languages; there's no
   numerical indexing, but instead specific elements are refered to using the
   Mylist,Mylist construct in combination with the MyListItem construct. It's
   worth noting that \K lists aren't exactly like lists in functional languages;
   they're associative, which means that it's easy to access elements at both
   ends of the lists and concatenate them. For example, L:Mylist,E accesses
   element E at the end of a list. ,[org.kframework.attributes.Location(Location(234,3,242,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Remove elements from the beginning and the end of the List. ,[org.kframework.attributes.Location(Location(285,3,285,68)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get the list length ,[org.kframework.attributes.Location(Location(291,3,291,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get an element form the List by index. Positive indices mean from the
   beginning (0 is the first element), and negative indices mean from the end
   (-1 is the last element). ,[org.kframework.attributes.Location(Location(272,3,274,31)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct an empty List: ,[org.kframework.attributes.Location(Location(266,3,266,33)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct a singleton List (a list with only  one element) ,[org.kframework.attributes.Location(Location(269,3,269,67)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct a new List as the concatenation of two Lists. This is similar to
   the append "@" operation in many functional programming languages. ,[org.kframework.attributes.Location(Location(263,3,264,72)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Check element membership in the given list ,[org.kframework.attributes.Location(Location(288,3,288,51)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module LIST$SYNTAX [org.kframework.attributes.Location(Location(228,1,293,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _List_
  syntax List [hook(LIST.List) org.kframework.attributes.Location(Location(232,3,232,31)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax List ::= List List [assoc() element(ListItem) format(%1%n%2) function() functional() hook(LIST.concat) klabel(_List_) left() smtlib(smt_seq_concat) symbol() unit(.List)]
  syntax List ::= List "[" Int "<-" KItem "]" [function() hook(LIST.update) klabel(List:set)]
  syntax List ::= "updateList" "(" List "," Int "," List ")" [function() hook(LIST.updateAll) klabel(updateList)]
  syntax List ::= "range" "(" List "," Int "," Int ")" [function() hook(LIST.range) klabel(List:range) symbol()]
  syntax List ::= "makeList" "(" Int "," KItem ")" [function() hook(LIST.make) klabel(makeList)]
  syntax List ::= "fillList" "(" List "," Int "," Int "," KItem ")" [function() hook(LIST.fill) klabel(fillList)]
  syntax List ::= "ListItem" "(" KItem ")" [function() functional() hook(LIST.element) klabel(ListItem) smtlib(smt_seq_elem) symbol()]
  syntax List ::= ".List" [function() functional() hook(LIST.unit) klabel(.List) latex(\dotCt{List}) smtlib(smt_seq_nil) symbol()]
  syntax KItem ::= List "[" Int "]" [function() hook(LIST.get) klabel(List:get) symbol()]
  syntax Int ::= "size" "(" List ")" [function() functional() hook(LIST.size) klabel(sizeList) smtlib(smt_seq_len)]
  syntax Bool ::= KItem "in" List [function() functional() hook(LIST.in) klabel(_inList_)]
endmodule


module MAP [org.kframework.attributes.Location(Location(92,1,156,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports SET
  imports MAP$SYNTAX
  imports LIST
  ModuleComment(| "."                            [function, hook(MAP.unit)],[org.kframework.attributes.Location(Location(108,16,108,77)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(\section{Description} The Map represents a generalized associative array.
   Each key can be paired with an arbitrary value, and can be used to reference
   its associated value. Multiple bindings for the same key are not allowed. ,[org.kframework.attributes.Location(Location(98,3,100,79)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( breaks klabel uniqueness,[org.kframework.attributes.Location(Location(107,16,107,43)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Update the first map by adding all key/value pairs in the second map. If a
   key in the first map exists also in the second map, its associated value will
   be overwritten by the value from the second map. ,[org.kframework.attributes.Location(Location(131,3,133,54)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Update the Map by removing all key/value pairs with the key in the Set. ,[org.kframework.attributes.Location(Location(136,3,136,80)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Update a Map in form of  of keys and values: ,[org.kframework.attributes.Location(Location(121,3,121,53)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Retrieve the value associated with the given key ,[org.kframework.attributes.Location(Location(116,3,116,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Remove key/value pair associated with the key from map? ,[org.kframework.attributes.Location(Location(124,3,124,64)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get the difference of two maps interpreted as sets of entries
   ($M_1 \setminus M2$) ,[org.kframework.attributes.Location(Location(127,3,128,26)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get the Map size (number of key/value pairs) ,[org.kframework.attributes.Location(Location(148,3,148,53)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen key of the Map  ,[org.kframework.attributes.Location(Location(154,3,154,50)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get a Set consisting of all keys in the Map:,[org.kframework.attributes.Location(Location(139,3,139,52)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get a List consisting of all values in the Map: ,[org.kframework.attributes.Location(Location(145,3,145,56)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Map (a Map with only one key/value pair). The key
   is on the left and the value is on the right ,[org.kframework.attributes.Location(Location(109,3,110,50)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct a new Map consisting of key/value pairs of two Maps (the keys of
   the two Maps are assumed disjoint) ,[org.kframework.attributes.Location(Location(102,3,103,40)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Check map inclusion ,[org.kframework.attributes.Location(Location(151,3,151,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(  Construct an empty Map ,[org.kframework.attributes.Location(Location(105,3,105,32)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module MAP$SYNTAX [org.kframework.attributes.Location(Location(92,1,156,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports LIST$SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")" [function() functional() hook(MAP.keys) klabel(keys)]
  syntax Map [hook(MAP.Map) org.kframework.attributes.Location(Location(96,3,96,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Map ::= Map Map [assoc() comm() element(_|->_) format(%1%n%2) function() hook(MAP.concat) index(0) klabel(_Map_) left() symbol() unit(.Map)]
  syntax Map ::= Map "[" KItem "<-" KItem "]" [function() functional() hook(MAP.update) prefer()]
  syntax Map ::= Map "[" KItem "<-" "undef" "]" [function() functional() hook(MAP.remove) klabel(_[_<-undef]) symbol()]
  syntax Map ::= Map "-Map" Map [function() functional() hook(MAP.difference) latex({#1}-_{\it Map}{#2})]
  syntax Map ::= KItem "|->" KItem [function() functional() hook(MAP.element) klabel(_|->_) latex({#1}\mapsto{#2}) symbol()]
  syntax Map ::= "updateMap" "(" Map "," Map ")" [function() functional() hook(MAP.updateAll) klabel(updateMap)]
  syntax Map ::= "removeAll" "(" Map "," Set ")" [function() functional() hook(MAP.removeAll) klabel(removeAll)]
  syntax Map ::= ".Map" [function() functional() hook(MAP.unit) klabel(.Map) latex(\dotCt{Map}) symbol()]
  syntax List ::= "values" "(" Map ")" [function() hook(MAP.values) klabel(values)]
  syntax List ::= "keys_list" "(" Map ")" [function() hook(MAP.keys_list)]
  syntax KItem ::= Map "[" KItem "]" [function() hook(MAP.lookup) klabel(Map:lookup) symbol()]
  syntax KItem ::= Map "[" KItem "]" "orDefault" KItem [function() functional() hook(MAP.lookupOrDefault) klabel(Map:lookupOrDefault)]
  syntax KItem ::= "choice" "(" Map ")" [function() hook(MAP.choice) klabel(Map:choice)]
  syntax Int ::= "size" "(" Map ")" [function() functional() hook(MAP.size) klabel(sizeMap)]
  syntax Bool ::= Map "<=Map" Map [function() functional() hook(MAP.inclusion)]
  syntax Bool ::= KItem "in_keys" "(" Map ")" [function() functional() hook(MAP.in_keys)]
endmodule


module MAP-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(158,1,182,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports MAP$SYNTAX
  imports K-EQUAL$SYNTAX
endmodule


module META [org.kframework.attributes.Location(Location(863,1,867,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports META$SYNTAX
  ModuleComment( Takes as input a string and returns a K term,[org.kframework.attributes.Location(Location(865,3,865,50)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module META$SYNTAX [org.kframework.attributes.Location(Location(863,1,867,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  syntax KItem ::= "#parseKAST" "(" String ")" [function() hook(META.parseKAST) klabel(#parseKAST) poly(0)]
endmodule


module MINT$SYNTAX [org.kframework.attributes.Location(Location(1173,1,1365,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  syntax MInt [hook(MINT.MInt) org.kframework.attributes.Location(Location(1178,3,1178,31)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax MInt ::= "xorMInt" "(" MInt "," MInt ")" [function() hook(MINT.xor) klabel(xorMInt) smt-hook(bvxor)]
  syntax MInt ::= "uremMInt" "(" MInt "," MInt ")" [function() hook(MINT.urem) klabel(uremMInt) smt-hook(bvurem)]
  syntax MInt ::= "udivMInt" "(" MInt "," MInt ")" [function() hook(MINT.udiv) klabel(udivMInt) smt-hook(bvudiv)]
  syntax MInt ::= "subMInt" "(" MInt "," MInt ")" [function() hook(MINT.sub) klabel(subMInt) smt-hook(bvsub)]
  syntax MInt ::= "shlMInt" "(" MInt "," Int ")" [function() hook(MINT.shl) klabel(shlMInt) smt-hook(bvshl)]
  syntax MInt ::= "sMinMInt" "(" MInt "," MInt ")" [function() klabel(sMinMInt) smt-hook((ite (bvslt #1 #2) #1 #2))]
  syntax MInt ::= "sMaxMInt" "(" MInt "," MInt ")" [function() klabel(sMaxMInt) smt-hook((ite (bvslt #1 #2) #2 #1))]
  syntax MInt ::= "orMInt" "(" MInt "," MInt ")" [function() hook(MINT.or) klabel(orMInt) smt-hook(bvor)]
  syntax MInt ::= "negMInt" "(" MInt ")" [function() functional() klabel(negMInt)]
  syntax MInt ::= "mulMInt" "(" MInt "," MInt ")" [function() hook(MINT.mul) klabel(mulMInt) smt-hook(bvmul)]
  syntax MInt ::= "miMInt" "(" List ")" [function() klabel(miMInt)]
  syntax MInt ::= "mi" "(" Int "," Int ")" [function() hook(MINT.constructor) klabel(mi)]
  syntax MInt ::= "mIntOfDigits" "(" List ")" [function() hook(MINT.fromDigits) klabel(mIntOfDigits)]
  syntax MInt ::= "lshrMInt" "(" MInt "," Int ")" [function() hook(MINT.lshr) klabel(lshrMInt) smt-hook(bvlshr)]
  syntax MInt ::= "extractMInt" "(" MInt "," Int "," Int ")" [function() hook(MINT.extract) klabel(extractMInt) smt-hook(extract)]
  syntax MInt ::= "concatenateMInt" "(" MInt "," MInt ")" [function() hook(MINT.concatenate) klabel(concatenateMInt) smtlib((concat #2 #1))]
  syntax MInt ::= "ashrMInt" "(" MInt "," Int ")" [function() hook(MINT.ashr) klabel(ashrMInt)]
  syntax MInt ::= "andMInt" "(" MInt "," MInt ")" [function() hook(MINT.and) klabel(andMInt) smt-hook(bvand)]
  syntax MInt ::= "addMInt" "(" MInt "," MInt ")" [function() hook(MINT.add) klabel(addMInt) smt-hook(bvadd)]
  syntax List ::= "usubMInt" "(" MInt "," MInt ")" [function() hook(MINT.usub) klabel(usubMInt)]
  syntax List ::= "umulMInt" "(" MInt "," MInt ")" [function() hook(MINT.umul) klabel(umulMInt)]
  syntax List ::= "uaddMInt" "(" MInt "," MInt ")" [function() hook(MINT.uadd) klabel(uaddMInt)]
  syntax List ::= "ssubMInt" "(" MInt "," MInt ")" [function() hook(MINT.ssub) klabel(ssubMInt)]
  syntax List ::= "sremMInt" "(" MInt "," MInt ")" [function() hook(MINT.srem) klabel(sremMInt)]
  syntax List ::= "smulMInt" "(" MInt "," MInt ")" [function() hook(MINT.smul) klabel(smulMInt)]
  syntax List ::= "sdivMInt" "(" MInt "," MInt ")" [function() hook(MINT.sdiv) klabel(sdivMInt)]
  syntax List ::= "saddMInt" "(" MInt "," MInt ")" [function() hook(MINT.sadd) klabel(saddMInt)]
  syntax List ::= "digitsOfMInt" "(" MInt "," Int "," Int ")" [function() hook(MINT.toDigits) klabel(digitsOfMInt)]
  syntax Int ::= "uvalueMInt" "(" MInt ")" [function() functional() hook(MINT.uvalue) klabel(uvalueMInt) smt-hook(bv2int)]
  syntax Int ::= "uminMInt" "(" Int ")" [function() klabel(uminMInt)]
  syntax Int ::= "umaxMInt" "(" Int ")" [function() klabel(umaxMInt)]
  syntax Int ::= "svalueMInt" "(" MInt ")" [function() functional() hook(MINT.svalue) klabel(svalueMInt)]
  syntax Int ::= "sminMInt" "(" Int ")" [function() klabel(sminMInt)]
  syntax Int ::= "smaxMInt" "(" Int ")" [function() klabel(smaxMInt)]
  syntax Int ::= "bitwidthMInt" "(" MInt ")" [function() functional() hook(MINT.bitwidth) klabel(bitwidthMInt)]
  syntax Bool ::= "zeroMInt" "(" MInt ")" [function() functional() hook(MINT.zero) klabel(zeroMInt)]
  syntax Bool ::= "uoverflowMInt" "(" Int "," Int ")" [function() klabel(uoverflowMInt)]
  syntax Bool ::= "ultMInt" "(" MInt "," MInt ")" [function() hook(MINT.ult) klabel(ultMInt) smt-hook(bvult)]
  syntax Bool ::= "uleMInt" "(" MInt "," MInt ")" [function() hook(MINT.ule) klabel(uleMInt) smt-hook(bvule)]
  syntax Bool ::= "ugtMInt" "(" MInt "," MInt ")" [function() hook(MINT.ugt) klabel(ugtMInt) smt-hook(bvugt)]
  syntax Bool ::= "ugeMInt" "(" MInt "," MInt ")" [function() hook(MINT.uge) klabel(ugeMInt) smt-hook(bvuge)]
  syntax Bool ::= "soverflowMInt" "(" Int "," Int ")" [function() klabel(soverflowMInt)]
  syntax Bool ::= "sltMInt" "(" MInt "," MInt ")" [function() hook(MINT.slt) klabel(sltMInt) smt-hook(bvslt)]
  syntax Bool ::= "sleMInt" "(" MInt "," MInt ")" [function() hook(MINT.sle) klabel(sleMInt) smt-hook(bvsle)]
  syntax Bool ::= "sgtMInt" "(" MInt "," MInt ")" [function() hook(MINT.sgt) klabel(sgtMInt) smt-hook(bvsgt)]
  syntax Bool ::= "sgeMInt" "(" MInt "," MInt ")" [function() hook(MINT.sge) klabel(sgeMInt) smt-hook(bvsge)]
  syntax Bool ::= "overflowMInt" "(" List ")" [function() klabel(overflowMInt)]
  syntax Bool ::= "neMInt" "(" MInt "," MInt ")" [function() hook(MINT.ne) klabel(neMInt) smt-hook(distinct)]
  syntax Bool ::= "eqMInt" "(" MInt "," MInt ")" [function() hook(MINT.eq) klabel(eqMInt) smt-hook(=)]
endmodule


module ML-SYNTAX [org.kframework.attributes.Location(Location(66,1,82,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-K
  imports ML-SYNTAX$SYNTAX
endmodule


module ML-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(66,1,82,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax priority #True #Floor #Ceil #Not #False > #Equals > #And > #Or > #Implies > #Exists #Forall
  syntax associativity left #Or
  syntax associativity left #And
  syntax K ::= K "#Or" K [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#Or) left() mlOp() poly(0, 1, 2) symbol() unit(#False)]
  syntax K ::= K "#Implies" K [format(%i%1%d%n%2%n%i%3%d) klabel(#Implies) mlOp() poly(0, 1, 2) symbol()]
  syntax K ::= K "#And" K [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#And) left() mlOp() poly(0, 1, 2) symbol() unit(#True)]
  syntax K ::= "{" K "#Equals" K "}" [format(%1%i%n%2%d%n%3%i%n%4%d%n%5) klabel(#Equals) mlOp() poly(1, 2; 0) symbol()]
  syntax K ::= "#True" [klabel(#True) poly(0) symbol()]
  syntax K ::= "#Not" "(" K ")" [klabel(#Not) mlOp() poly(0, 1) symbol()]
  syntax K ::= "#Forall" #KVariable "." K [klabel(#Forall) mlOp() poly(0, 2) symbol()]
  syntax K ::= "#Floor" "(" K ")" [klabel(#Floor) mlOp() poly(1; 0) symbol()]
  syntax K ::= "#False" [klabel(#False) poly(0) symbol()]
  syntax K ::= "#Exists" #KVariable "." K [klabel(#Exists) mlOp() poly(0, 2) symbol()]
  syntax K ::= "#Ceil" "(" K ")" [klabel(#Ceil) mlOp() poly(1; 0) symbol()]
  syntax #KVariable [org.kframework.attributes.Location(Location(69,3,69,19)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
endmodule


module PROGRAM-LISTS [org.kframework.attributes.Location(Location(192,1,204,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-K
  imports PROGRAM-LISTS$SYNTAX
  ModuleComment( replaces the default productions for lists:,[org.kframework.attributes.Location(Location(195,3,195,49)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( into a series of productions more suitable for programs:,[org.kframework.attributes.Location(Location(198,3,198,62)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(194,3,194,58)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Ne#Es ::= E "," Ne#Es     [klabel('_,_)],[org.kframework.attributes.Location(Location(200,3,200,46)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Es#Terminator ::= ""      [klabel('.Es)],[org.kframework.attributes.Location(Location(199,3,199,46)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Es ::= Ne#Es,[org.kframework.attributes.Location(Location(202,3,202,18)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Es ::= E "," Es [userList("*"), klabel('_,_)],[org.kframework.attributes.Location(Location(196,3,196,51)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment(      | Es#Terminator      // if the list is *,[org.kframework.attributes.Location(Location(203,3,203,51)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment(      | ".Es"    [userList("*"), klabel('.Es)],[org.kframework.attributes.Location(Location(197,3,197,51)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment(         | E Es#Terminator [klabel('_,_)],[org.kframework.attributes.Location(Location(201,3,201,46)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module PROGRAM-LISTS$SYNTAX [org.kframework.attributes.Location(Location(192,1,204,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
endmodule


module RECORD-PRODUCTIONS [org.kframework.attributes.Location(Location(225,1,230,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  ModuleComment( will be able to be parsed with don't-care variables according,[org.kframework.attributes.Location(Location(228,3,228,67)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( to their nonterminal's names,[org.kframework.attributes.Location(Location(229,3,229,34)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( syntax Sort ::= name(Args),[org.kframework.attributes.Location(Location(227,3,227,32)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( if this module is imported, prefix productions of the form,[org.kframework.attributes.Location(Location(226,3,226,64)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module RECORD-PRODUCTIONS$SYNTAX [org.kframework.attributes.Location(Location(225,1,230,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
endmodule


module REQUIRES-ENSURES [org.kframework.attributes.Location(Location(141,1,152,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports BASIC-K
endmodule


module REQUIRES-ENSURES$SYNTAX [org.kframework.attributes.Location(Location(141,1,152,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports BASIC-K$SYNTAX
  syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]
  syntax #RuleContent ::= #RuleBody "when" K [klabel(#ruleRequires) symbol()]
  syntax #RuleContent ::= #RuleBody "when" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]
  syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]
  syntax #RuleContent ::= #RuleBody "requires" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]
  syntax #RuleContent ::= #RuleBody "ensures" K [klabel(#ruleEnsures) symbol()]
  syntax #RuleBody ::= K
endmodule


module RULE-CELLS [org.kframework.attributes.Location(Location(112,1,122,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RULE-LISTS
  imports RULE-CELLS$SYNTAX
  imports KCELLS
  ModuleComment(syntax Cell ::= "<top>" #OptionalDots K #OptionalDots "</top>" [klabel(<top>)],[org.kframework.attributes.Location(Location(118,3,118,83)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(115,3,115,58)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( generates, for all productions that have the attribute 'cell' or 'maincell',,[org.kframework.attributes.Location(Location(116,3,116,82)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( a production like below:,[org.kframework.attributes.Location(Location(117,3,117,30)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module RULE-CELLS$SYNTAX [org.kframework.attributes.Location(Location(112,1,122,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax #OptionalDots ::= "..." [klabel(#dots) symbol()]
  syntax #OptionalDots ::= "" [klabel(#noDots) symbol()]
endmodule


module RULE-LISTS [org.kframework.attributes.Location(Location(206,1,211,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(207,3,207,58)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( adds the subsort production to the parsing module only:,[org.kframework.attributes.Location(Location(208,3,208,61)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
  ModuleComment( Es ::= E        [userList("*")],[org.kframework.attributes.Location(Location(209,3,209,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))])
endmodule


module RULE-LISTS$SYNTAX [org.kframework.attributes.Location(Location(206,1,211,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
endmodule


module RULE-TAG-SYNTAX [org.kframework.attributes.Location(Location(1381,1,1386,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports RULE-TAG-SYNTAX$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module RULE-TAG-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(1381,1,1386,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax #RuleTag ::= #UpperId [token()]
  syntax #RuleTag ::= #LowerId [token()]
endmodule


module SET [org.kframework.attributes.Location(Location(184,1,226,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(197,16,197,23)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(rule S:Set -Set .Set => S,[org.kframework.attributes.Location(Location(225,3,225,30)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(rule S1:Set -Set (SetItem(K:K) S2:Set) => S1 -Set S2,[org.kframework.attributes.Location(Location(223,3,223,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(requires notBool(K in S1),[org.kframework.attributes.Location(Location(224,3,224,30)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( set difference axioms ,[org.kframework.attributes.Location(Location(221,3,221,29)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( \section{Description} The Set represents a mathematical set (a collection
   of unique items). ,[org.kframework.attributes.Location(Location(190,3,191,23)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( TODO(AndreiS): remove this if not used,[org.kframework.attributes.Location(Location(222,3,222,44)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get the intersection of two sets ($A \cap B$) ,[org.kframework.attributes.Location(Location(203,3,203,54)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get the difference of two sets ($A \setminus B$),[org.kframework.attributes.Location(Location(206,3,206,56)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get the cardinality of a set ($|A|$) ,[org.kframework.attributes.Location(Location(215,3,215,45)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen element of the Set ,[org.kframework.attributes.Location(Location(218,3,218,53)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct an empty Set ,[org.kframework.attributes.Location(Location(195,3,195,31)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Set (a Set with only one element $\{ a \}$). To add
   an element $a$ to a set $A$, construct the union of the singleton set
   $\{ a \}$ and $A$ ($\{ a \} \cup A$). ,[org.kframework.attributes.Location(Location(198,3,200,43)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Construct a new Set as the union of two different sets ($A \cup B$) ,[org.kframework.attributes.Location(Location(193,3,193,76)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Check set inclusion ($A \subseteq B$) ,[org.kframework.attributes.Location(Location(212,3,212,46)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Check element membership in a set ($a \in A$) ,[org.kframework.attributes.Location(Location(209,3,209,54)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module SET$SYNTAX [org.kframework.attributes.Location(Location(184,1,226,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _Set_
  syntax Set [hook(SET.Set) org.kframework.attributes.Location(Location(188,3,188,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Set ::= Set Set [assoc() comm() element(SetItem) format(%1%n%2) function() functional() hook(SET.concat) idem() klabel(_Set_) left() symbol() unit(.Set)]
  syntax Set ::= Set "-Set" Set [function() functional() hook(SET.difference) klabel(Set:difference) latex({#1}-_{\it Set}{#2}) symbol()]
  syntax Set ::= "intersectSet" "(" Set "," Set ")" [function() functional() hook(SET.intersection) klabel(intersectSet)]
  syntax Set ::= "SetItem" "(" KItem ")" [function() functional() hook(SET.element) klabel(SetItem) symbol()]
  syntax Set ::= ".Set" [function() functional() hook(SET.unit) klabel(.Set) latex(\dotCt{Set}) symbol()]
  syntax KItem ::= "choice" "(" Set ")" [function() hook(SET.choice) klabel(Set:choice)]
  syntax Int ::= "size" "(" Set ")" [function() functional() hook(SET.size) klabel(size)]
  syntax Bool ::= Set "<=Set" Set [function() functional() hook(SET.inclusion)]
  syntax Bool ::= KItem "in" Set [function() functional() hook(SET.in) klabel(Set:in) symbol()]
endmodule


module SORT-K [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  syntax K [hook(K.K) org.kframework.attributes.Location(Location(5,3,5,22)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
endmodule


module SORT-KBOTT [org.kframework.attributes.Location(Location(25,1,28,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports SORT-K
endmodule


module SORT-KBOTT$SYNTAX [org.kframework.attributes.Location(Location(25,1,28,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KBott [org.kframework.attributes.Location(Location(27,3,27,14)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/kast.k))]
endmodule


module STDIN-STREAM [org.kframework.attributes.Location(Location(1007,1,1101,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STDIN-STREAM$SYNTAX
  imports META
  imports MAP
  imports K-IO
  syntax Cell ::= StdinCell
  rule initStdinCell(Init)=>`<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#buffer(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$STDIN","KConfigVar")))))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(#istream(`#stdin_K-IO`(.KList)))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(_),#SemanticCastToString(Delimiters))),`ListItem`(#buffer(#SemanticCastToString(S)=>`_+String__STRING`(#SemanticCastToString(S),chrChar(#projectInt(`#getc(_)_K-IO`(#SemanticCastToInt(N)))))))),`ListItem`(#token("\"on\"","String"))),`ListItem`(#istream(#SemanticCastToInt(N)))),#noDots(.KList)) requires `_==Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1018) label(STDIN-STREAM.stdinGetc) org.kframework.attributes.Location(Location(1018,8,1024,49)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#token("\"String\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(#SemanticCastToString(S)),`ListItem`(#buffer(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1029) label(STDIN-STREAM.stdinParseString) org.kframework.attributes.Location(Location(1029,8,1034,50)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#token("\"Int\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(`String2Int`(substrString(#SemanticCastToString(S),#token("0","Int"),findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int"))))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),`_+Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("1","Int")),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_>Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1039) label(STDIN-STREAM.stdinParseInt) org.kframework.attributes.Location(Location(1039,8,1046,38)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(Sort),#SemanticCastToString(Delimiters)))=>`ListItem`(#parseKAST(substrString(#SemanticCastToString(S),#token("0","Int"),findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int"))))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),`_+Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("1","Int")),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_andBool_`(`_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_==String__STRING`(#SemanticCastToString(Sort),#token("\"K\"","String"))),`_>Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1050) label(STDIN-STREAM.stdinParseArbitrarySort) org.kframework.attributes.Location(Location(1050,8,1058,38)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(Sort),#SemanticCastToString(Delimiters))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),#token("1","Int"),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_andBool_`(`_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_=/=String__STRING`(#SemanticCastToString(Sort),#token("\"String\"","String"))),`_<=Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1062) label(STDIN-STREAM.stdinTrim) org.kframework.attributes.Location(Location(1062,8,1069,39)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`.List`(.KList)=>`ListItem`(#parseInput(#SemanticCastToString(?Sort),#SemanticCastToString(?Delimiters))),`ListItem`(#buffer(#SemanticCastToString(_)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1087) label(STDIN-STREAM.stdinUnblock) org.kframework.attributes.Location(Location(1087,8,1091,16)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) unblock()]
  ModuleComment(,[org.kframework.attributes.Location(Location(1083,3,1083,5)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( when we reach whitespace, if it parses create a ListItem,[org.kframework.attributes.Location(Location(1027,3,1027,62)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( when necessary according to user-defined rules, since otherwise it will,[org.kframework.attributes.Location(Location(1073,3,1073,77)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( way will get stuck in concrete execution mode with real IO enabled (i.e.,,[org.kframework.attributes.Location(Location(1079,3,1079,79)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( under `--io on` option), while they will still work in symbolic execution,[org.kframework.attributes.Location(Location(1080,3,1080,79)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( read one character at a time until we read whitespace,[org.kframework.attributes.Location(Location(1016,3,1016,59)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( off`, `--search`, or `--debug` options).,[org.kframework.attributes.Location(Location(1082,3,1082,46)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( mode or concrete execution mode with real IO disabled (i.e., under `--io,[org.kframework.attributes.Location(Location(1081,3,1081,78)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( lead to a diverging (i.e., non-terminating) transition system definition.,[org.kframework.attributes.Location(Location(1074,3,1074,79)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( input stream cell, e.g.,,[org.kframework.attributes.Location(Location(1076,3,1076,30)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( have a way to specify such patterns.,[org.kframework.attributes.Location(Location(1085,3,1085,42)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( a hack: handle the case when we read integers without the help of the IO server,[org.kframework.attributes.Location(Location(1037,3,1037,85)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1069,40,1069,50)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1058,39,1058,49)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1046,39,1046,49)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1034,51,1034,61)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1024,50,1024,60)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( TODO: More patterns need to be supported as well. In that case, we need to,[org.kframework.attributes.Location(Location(1084,3,1084,80)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Non-supported rules that refer to the input stream cell in a sophisticated,[org.kframework.attributes.Location(Location(1078,3,1078,80)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( NOTE: This unblocking rule will be instantiated and inserted carefully,[org.kframework.attributes.Location(Location(1072,3,1072,76)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Currently, it supports only a simple pattern matching on the top of the,[org.kframework.attributes.Location(Location(1075,3,1075,77)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(   rule <k> read() => V ... </k> <in> ListItem(V:Int) => .List ...  </in>,[org.kframework.attributes.Location(Location(1077,3,1077,78)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(
  syntax Stream ::= "#noIO"

  rule ListItem(#buffer(_))
       (ListItem(#noIO) ListItem(#istream(_:Int)) => .List) [stdin]
  ,[org.kframework.attributes.Location(Location(1094,3,1099,4)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module STDIN-STREAM$SYNTAX [org.kframework.attributes.Location(Location(1007,1,1101,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports META$SYNTAX
  imports MAP$SYNTAX
  imports K-IO$SYNTAX
  syntax Stream ::= "#parseInput" "(" String "," String ")" [klabel(#parseInput)]
  syntax Stream ::= "#istream" "(" Int ")" [klabel(#istream)]
  syntax StdinCell ::= "initStdinCell" "(" Map ")" [function() initializer() noThread()]
  syntax StdinCell ::= "<stdin>" List "</stdin>" [cell() cellName(stdin) contentStartColumn(17) contentStartLine(1014) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  Bubble(config,<stdin> ListItem(#buffer($STDIN:String)) ListItem($IO:String) ListItem(#istream(#stdin)) </stdin>,[contentStartColumn(17) contentStartLine(1014) org.kframework.attributes.Location(Location(1014,3,1014,113)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module STDOUT-STREAM [org.kframework.attributes.Location(Location(1103,1,1171,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STDOUT-STREAM$SYNTAX
  imports MAP
  imports K-IO
  syntax Cell ::= StdoutCell
  rule initStdoutCell(Init)=>`<stdout>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#ostream(`#stdout_K-IO`(.KList))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(#buffer(#token("\"\"","String")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING`(#SemanticCastToString(Buffer),`Int2String`(#SemanticCastToInt(I)))))),`ListItem`(#SemanticCastToInt(I))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1122) label(STDOUT-STREAM.stdoutBufferInt) org.kframework.attributes.Location(Location(1122,8,1128,17)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) stream()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING`(#SemanticCastToString(Buffer),`Float2String`(#SemanticCastToFloat(F)))))),`ListItem`(#SemanticCastToFloat(F))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1112) label(STDOUT-STREAM.stdoutBufferFloat) org.kframework.attributes.Location(Location(1112,8,1118,17)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) stream()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING`(#SemanticCastToString(Buffer),#SemanticCastToString(S))))),`ListItem`(#SemanticCastToString(S))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1132) label(STDOUT-STREAM.stdoutBufferString) org.kframework.attributes.Location(Location(1132,8,1138,17)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) stream()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(N)=>`project:Int`(`#write(_,_)_K-IO`(#SemanticCastToInt(N),#SemanticCastToString(S))~>#SemanticCastToInt(N)))),`ListItem`(#token("\"on\"","String"))),`ListItem`(#buffer(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=String__STRING`(#SemanticCastToString(S),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1144) label(STDOUT-STREAM.stdoutWrite) org.kframework.attributes.Location(Location(1144,8,1150,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  ModuleComment(configuration <stderr> ListItem(#ostream(#stderr)) ListItem($IO:String) ListItem(#buffer("")) </stderr>,[org.kframework.attributes.Location(Location(1109,1,1109,106)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1150,29,1150,48)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1139,8,1139,27)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1129,8,1129,27)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1119,8,1119,27)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Send first char from the buffer to the server,[org.kframework.attributes.Location(Location(1142,3,1142,51)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(
  syntax Stream ::= "#noIO"

  rule ListItem(#buffer(Buffer:String => Buffer +String Float2String(F)))
       (ListItem(F:Float) => .List)
       _:List [stdout, stderr]
  rule ListItem(#buffer(Buffer:String => Buffer +String Int2String(I)))
       (ListItem(I:Int) => .List)
       _:List [stdout, stderr]
  rule ListItem(#buffer(Buffer:String => Buffer +String S))
       (ListItem(S:String) => .List)
       _:List [stdout, stderr]

  rule (ListItem(#ostream(_:Int)) ListItem(#noIO) => .List)
       ListItem(#buffer(_))
       _:List [stdout, stderr]
  ,[org.kframework.attributes.Location(Location(1153,3,1169,4)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module STDOUT-STREAM$SYNTAX [org.kframework.attributes.Location(Location(1103,1,1171,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports MAP$SYNTAX
  imports K-IO$SYNTAX
  syntax Stream ::= "#ostream" "(" Int ")" [klabel(#ostream)]
  syntax StdoutCell ::= "initStdoutCell" "(" Map ")" [function() initializer() noThread()]
  syntax StdoutCell ::= "<stdout>" List "</stdout>" [cell() cellName(stdout) contentStartColumn(17) contentStartLine(1108) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  Bubble(config,<stdout> ListItem(#ostream(#stdout)) ListItem($IO:String) ListItem(#buffer("")) </stdout>,[contentStartColumn(17) contentStartLine(1108) org.kframework.attributes.Location(Location(1108,3,1108,105)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module STRING [org.kframework.attributes.Location(Location(547,1,623,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  rule rfindChar(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(602) org.kframework.attributes.Location(Location(602,8,602,33)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule rfindChar(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`maxInt(_,_)_INT-COMMON`(rfindString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),rfindChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I))) requires `_=/=String__STRING`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(601) org.kframework.attributes.Location(Location(601,8,601,182)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule findChar(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(600) org.kframework.attributes.Location(Location(600,8,600,32)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule findChar(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),#token("-1","Int")),findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I)),`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I)),#token("-1","Int")),findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),`minInt(_,_)_INT-COMMON`(findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I))))) requires `_=/=String__STRING`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(599) org.kframework.attributes.Location(Location(599,8,599,431)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceFirst(_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(_))=>#SemanticCastToString(Source) requires `_<Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(612) org.kframework.attributes.Location(Location(612,8,613,57)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceFirst(_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`_+String__STRING`(`_+String__STRING`(substrString(#SemanticCastToString(Source),#token("0","Int"),findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),lengthString(#SemanticCastToString(ToReplace))),lengthString(#SemanticCastToString(Source)))) requires `_>=Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(609) org.kframework.attributes.Location(Location(609,8,611,66)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceAll(_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`replace(_,_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`countAllOccurrences(_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(621) org.kframework.attributes.Location(Location(621,8,621,154)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `replace(_,_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(_),#SemanticCastToString(_),#token("0","Int"))=>#SemanticCastToString(Source) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(620) org.kframework.attributes.Location(Location(620,8,620,49)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `replace(_,_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),#SemanticCastToInt(Count))=>`_+String__STRING`(`_+String__STRING`(substrString(#SemanticCastToString(Source),#token("0","Int"),findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),`replace(_,_,_,_)_STRING`(substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),lengthString(#SemanticCastToString(ToReplace))),lengthString(#SemanticCastToString(Source))),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`_-Int__INT-COMMON`(#SemanticCastToInt(Count),#token("1","Int")))) requires `_>Int__INT-COMMON`(#SemanticCastToInt(Count),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(616) org.kframework.attributes.Location(Location(616,8,619,30)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `countAllOccurrences(_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING`(substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),lengthString(#SemanticCastToString(ToCount))),lengthString(#SemanticCastToString(Source))),#SemanticCastToString(ToCount))) requires `_>=Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(606) org.kframework.attributes.Location(Location(606,8,607,60)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `countAllOccurrences(_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>#token("0","Int") requires `_<Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(604) org.kframework.attributes.Location(Location(604,8,605,59)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_>String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_<String__STRING`(#SemanticCastToString(S2),#SemanticCastToString(S1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(596) org.kframework.attributes.Location(Location(596,8,596,52)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_>=String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(597) org.kframework.attributes.Location(Location(597,8,597,63)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_==String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_==K_`(#SemanticCastToString(S1),#SemanticCastToString(S2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(583) org.kframework.attributes.Location(Location(583,8,583,49)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_==String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(582) org.kframework.attributes.Location(Location(582,8,582,65)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<=String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING`(#SemanticCastToString(S2),#SemanticCastToString(S1))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(595) org.kframework.attributes.Location(Location(595,8,595,63)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module STRING$SYNTAX [org.kframework.attributes.Location(Location(547,1,623,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  syntax associativity left _==String__STRING
  syntax associativity left _=/=String__STRING
  syntax associativity left _+String__STRING
  syntax String ::= String "+String" String [function() functional() hook(STRING.concat) latex({#1}+_{\scriptstyle\it String}{#2}) left()]
  syntax String ::= "substrString" "(" String "," Int "," Int ")" [function() functional() hook(STRING.substr) klabel(substrString)]
  syntax String ::= "replaceFirst" "(" String "," String "," String ")" [function() functional() hook(STRING.replaceFirst)]
  syntax String ::= "replaceAll" "(" String "," String "," String ")" [function() functional() hook(STRING.replaceAll)]
  syntax String ::= "replace" "(" String "," String "," String "," Int ")" [function() hook(STRING.replace)]
  syntax String ::= "newUUID" [function() hook(STRING.uuid) impure()]
  syntax String ::= "directionalityChar" "(" String ")" [function() hook(STRING.directionality) klabel(directionalityChar)]
  syntax String ::= "chrChar" "(" Int ")" [function() hook(STRING.chr) klabel(chrChar)]
  syntax String ::= "categoryChar" "(" String ")" [function() hook(STRING.category) klabel(categoryChar)]
  syntax String ::= "Int2String" "(" Int ")" [function() functional() hook(STRING.int2string) klabel(Int2String)]
  syntax String ::= "Float2String" "(" Float "," String ")" [function() hook(STRING.floatFormat) klabel(FloatFormat)]
  syntax String ::= "Float2String" "(" Float ")" [function() functional() hook(STRING.float2string) klabel(Float2String)]
  syntax String ::= "Base2String" "(" Int "," Int ")" [function() hook(STRING.base2string) klabel(Base2String)]
  syntax Int ::= "rfindString" "(" String "," String "," Int ")" [function() hook(STRING.rfind) klabel(rfindString)]
  syntax Int ::= "rfindChar" "(" String "," String "," Int ")" [function() hook(STRING.rfindChar) klabel(rfindChar)]
  syntax Int ::= "ordChar" "(" String ")" [function() hook(STRING.ord) klabel(ordChar)]
  syntax Int ::= "lengthString" "(" String ")" [function() functional() hook(STRING.length) klabel(lengthString)]
  syntax Int ::= "findString" "(" String "," String "," Int ")" [function() hook(STRING.find) klabel(findString)]
  syntax Int ::= "findChar" "(" String "," String "," Int ")" [function() hook(STRING.findChar) klabel(findChar)]
  syntax Int ::= "countAllOccurrences" "(" String "," String ")" [function() functional() hook(STRING.countAllOccurrences)]
  syntax Int ::= "String2Int" "(" String ")" [function() hook(STRING.string2int) klabel(String2Int)]
  syntax Int ::= "String2Base" "(" String "," Int ")" [function() hook(STRING.string2base) klabel(String2Base)]
  syntax Float ::= "String2Float" "(" String ")" [function() hook(STRING.string2float) klabel(String2Float)]
  syntax Bool ::= String ">String" String [function() functional() hook(STRING.gt)]
  syntax Bool ::= String ">=String" String [function() functional() hook(STRING.ge)]
  syntax Bool ::= String "==String" String [function() functional() hook(STRING.eq) left()]
  syntax Bool ::= String "=/=String" String [function() functional() hook(STRING.ne) left()]
  syntax Bool ::= String "<String" String [function() functional() hook(STRING.lt)]
  syntax Bool ::= String "<=String" String [function() functional() hook(STRING.le)]
endmodule


module STRING-BUFFER$SYNTAX [org.kframework.attributes.Location(Location(649,1,652,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-BUFFER-IN-K$SYNTAX
endmodule


module STRING-BUFFER-IN-K$SYNTAX [org.kframework.attributes.Location(Location(625,1,637,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k)) symbolic()]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _+String__STRING-BUFFER-IN-K
  syntax StringBuffer ::= StringBuffer "+String" String [avoid() function() functional() left()]
  syntax StringBuffer ::= String
  syntax StringBuffer ::= ".StringBuffer" [function() functional()]
  syntax String ::= "StringBuffer2String" "(" StringBuffer ")" [function() functional() klabel(StringBuffer2String)]
endmodule


module STRING-SYNTAX [org.kframework.attributes.Location(Location(534,1,545,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  ModuleComment( StringChar ::= ~[\"\n\r\\] // anything except for Newline, DoubleQuote and Backslash,[org.kframework.attributes.Location(Location(537,3,537,90)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( DoubleQuote StringChar* DoubleQuote,[org.kframework.attributes.Location(Location(536,3,536,41)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment( Double Quoted Strings are of the form:,[org.kframework.attributes.Location(Location(535,3,535,44)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(              | [\\][x] 2*Hex // "\xFF"       Backslash 'x' followed by two   hexadecimal characters,[org.kframework.attributes.Location(Location(539,3,539,105)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(              | [\\][u] 4*Hex // "\uFFFF"     Backslash 'u' followed by four  hexadecimal characters,[org.kframework.attributes.Location(Location(540,3,540,105)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(              | [\\][nrtf\"\\] // Backslash followed by either 'nrtf', DoubleQuote or Backslash,[org.kframework.attributes.Location(Location(538,3,538,100)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(              | [\\][U] 8*Hex // "\UFFffFFff" Backslash 'U' followed by eight hexadecimal characters,[org.kframework.attributes.Location(Location(541,3,541,105)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
  ModuleComment(                              // the code must not be in the range [0xdfff, 0xd800] or exceed 0x10ffff,[org.kframework.attributes.Location(Location(542,3,542,107)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))])
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(534,1,545,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(543,3,543,37)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
endmodule


module STYPE [org.kframework.attributes.Location(Location(461,1,697,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))]
  imports STYPE-SYNTAX
  imports STYPE$SYNTAX
  imports MAP
  imports IS-IN
  syntax Cell ::= TCell
  syntax Cell ::= KCell
  rule initTCell(Init)=>`<T>`(#noDots(.KList),initKCell(Init),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initKCell(Init)=>`<k>`(#noDots(.KList),#SemanticCastToType(`project:Type`(`Map:lookup`(Init,#token("$PGM","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `type[_]_STYPE-SYNTAX`(tuplen(#SemanticCastToProc(P),#SemanticCastToProcs(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuple\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcs(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(638) org.kframework.attributes.Location(Location(638,8,638,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(tuple2(#SemanticCastToProc(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuple\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(637) org.kframework.attributes.Location(Location(637,8,637,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(tuple1(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuple\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(636) org.kframework.attributes.Location(Location(636,8,636,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(patn(#SemanticCastToProcPat(P),#SemanticCastToProcPats(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuple\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPats(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(646) org.kframework.attributes.Location(Location(646,8,646,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(pat2(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuple\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(645) org.kframework.attributes.Location(Location(645,8,645,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(pat1(#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuple\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(644) org.kframework.attributes.Location(Location(644,8,644,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(namepat(#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"quote\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(510) org.kframework.attributes.Location(Location(510,8,510,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(name(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"quote\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(509) org.kframework.attributes.Location(Location(509,8,509,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(bind(#SemanticCastToBindNamePat(B),#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"pbind\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBindNamePat(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(537) org.kframework.attributes.Location(Location(537,8,537,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`~__STYPE-SYNTAX`(#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"notpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(590) org.kframework.attributes.Location(Location(590,8,590,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`~__STYPE-SYNTAX`(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"notpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(589) org.kframework.attributes.Location(Location(589,8,589,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`{_}_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q))))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"map\"","String"),`type[_]_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(618) org.kframework.attributes.Location(Location(618,8,618,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`{_}_STYPE-SYNTAX`(`_:_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q),#SemanticCastToRhoKVPairs(S))))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"map\"","String"),`type[_]_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q))),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoKVPairs(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(619) org.kframework.attributes.Location(Location(619,8,619,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`{_}_STYPE-SYNTAX`(#SemanticCastToProcOrPat(P)))=>`type[_]_STYPE-SYNTAX`(#SemanticCastToProcOrPat(P)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(679) org.kframework.attributes.Location(Location(679,8,679,42)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`{_,..._:_}_STYPE-SYNTAX`(#SemanticCastToRhoKVPat(R),#SemanticCastToProcVar(U),#SemanticCastToProcVar(V)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"mappat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoKVPat(R)),`type[_]_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProcVar(U),#SemanticCastToProcVar(V)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(625) org.kframework.attributes.Location(Location(625,8,625,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`uri(_)_STYPE-SYNTAX`(#SemanticCastToString(S)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"uri\"","String"),#SemanticCastToString(S)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(498) org.kframework.attributes.Location(Location(498,8,498,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`unforgeable(_)_STYPE-SYNTAX`(#SemanticCastToInt(I)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"unforgeable\"","String"),#SemanticCastToInt(I)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(495) org.kframework.attributes.Location(Location(495,8,495,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`not__STYPE-SYNTAX`(#SemanticCastToBExp(A)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"not\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBExp(A)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(676) org.kframework.attributes.Location(Location(676,8,676,91)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`new_in{_}_STYPE-SYNTAX`(#SemanticCastToNames(N),#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"new\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNames(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(7) contentStartLine(557) org.kframework.attributes.Location(Location(557,7,557,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`new_in{_}_STYPE-SYNTAX`(#SemanticCastToNames(N),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"new\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNames(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(7) contentStartLine(555) org.kframework.attributes.Location(Location(555,7,555,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`new_in{_}_STYPE-SYNTAX`(#SemanticCastToName(N),#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"new\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(7) contentStartLine(556) org.kframework.attributes.Location(Location(556,7,556,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`new_in{_}_STYPE-SYNTAX`(#SemanticCastToName(N),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"new\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(7) contentStartLine(554) org.kframework.attributes.Location(Location(554,7,554,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`match_{_}_STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToMatchCases(M)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"match\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToMatchCases(M))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(569) org.kframework.attributes.Location(Location(569,8,569,86)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`match_{_}_STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToMatchCase(M)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"match\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToMatchCase(M))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(568) org.kframework.attributes.Location(Location(568,8,568,86)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`if(_)then__STYPE-SYNTAX`(#SemanticCastToBExp(B),#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"ifthen\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBExp(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(594) org.kframework.attributes.Location(Location(594,8,594,86)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`if(_)then__STYPE-SYNTAX`(#SemanticCastToBExp(B),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"ifthen\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBExp(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(593) org.kframework.attributes.Location(Location(593,8,593,86)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`for(_){_}_STYPE-SYNTAX`(#SemanticCastToBinds(B),#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"receives\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBinds(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(545) org.kframework.attributes.Location(Location(545,8,545,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`for(_){_}_STYPE-SYNTAX`(#SemanticCastToBinds(B),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"receives\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBinds(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(544) org.kframework.attributes.Location(Location(544,8,544,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`for(_){_}_STYPE-SYNTAX`(#SemanticCastToBind(B),#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"receive\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBind(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(543) org.kframework.attributes.Location(Location(543,8,543,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`for(_){_}_STYPE-SYNTAX`(#SemanticCastToBind(B),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"receive\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBind(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(542) org.kframework.attributes.Location(Location(542,8,542,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`contract_(_)={_}_STYPE-SYNTAX`(#SemanticCastToName(X),#SemanticCastToBindNamePats(Y),#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"contract\"","String"),`type[_]_STYPE-SYNTAX`(`_<=__STYPE-SYNTAX`(#SemanticCastToBindNamePats(Y),#SemanticCastToName(X))),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(551) org.kframework.attributes.Location(Location(551,8,551,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`contract_(_)={_}_STYPE-SYNTAX`(#SemanticCastToName(X),#SemanticCastToBindNamePats(Y),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"contract\"","String"),`type[_]_STYPE-SYNTAX`(`_<=__STYPE-SYNTAX`(#SemanticCastToBindNamePats(Y),#SemanticCastToName(X))),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(549) org.kframework.attributes.Location(Location(549,8,549,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`contract_(_)={_}_STYPE-SYNTAX`(#SemanticCastToName(X),#SemanticCastToBindNamePat(Y),#SemanticCastToProcPat(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"contract\"","String"),`type[_]_STYPE-SYNTAX`(bind(#SemanticCastToBindNamePat(Y),#SemanticCastToName(X))),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(550) org.kframework.attributes.Location(Location(550,8,550,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`contract_(_)={_}_STYPE-SYNTAX`(#SemanticCastToName(X),#SemanticCastToBindNamePat(Y),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"contract\"","String"),`type[_]_STYPE-SYNTAX`(bind(#SemanticCastToBindNamePat(Y),#SemanticCastToName(X))),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(548) org.kframework.attributes.Location(Location(548,8,548,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`bundle{_}_STYPE-SYNTAX`(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"bundle\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(603) org.kframework.attributes.Location(Location(603,8,603,85)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`bundle0{_}_STYPE-SYNTAX`(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"bundle0\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(602) org.kframework.attributes.Location(Location(602,8,602,85)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`bundle-{_}_STYPE-SYNTAX`(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"bundle-\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(601) org.kframework.attributes.Location(Location(601,8,601,85)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`bundle+{_}_STYPE-SYNTAX`(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"bundle+\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(600) org.kframework.attributes.Location(Location(600,8,600,85)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_|__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(565) org.kframework.attributes.Location(Location(565,8,565,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_|__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(564) org.kframework.attributes.Location(Location(564,8,564,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_|__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(563) org.kframework.attributes.Location(Location(563,8,563,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_|__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"par\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(562) org.kframework.attributes.Location(Location(562,8,562,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_or__STYPE-SYNTAX`(#SemanticCastToBExp(A),#SemanticCastToBExp(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"or\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBExp(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToBExp(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(675) org.kframework.attributes.Location(Location(675,8,675,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_else__STYPE-SYNTAX`(#SemanticCastToIfThenPat(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"else\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToIfThenPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(597) org.kframework.attributes.Location(Location(597,8,597,85)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_else__STYPE-SYNTAX`(#SemanticCastToIfThen(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"else\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToIfThen(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(596) org.kframework.attributes.Location(Location(596,8,596,85)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_and__STYPE-SYNTAX`(#SemanticCastToBExp(A),#SemanticCastToBExp(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"and\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBExp(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToBExp(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(674) org.kframework.attributes.Location(Location(674,8,674,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`___STYPE-SYNTAX`(#SemanticCastToMatchCase(M),#SemanticCastToMatchCases(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"cases\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToMatchCase(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToMatchCases(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(573) org.kframework.attributes.Location(Location(573,8,573,86)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`___STYPE-SYNTAX`(#SemanticCastToMatchCase(M),#SemanticCastToMatchCase(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"cases\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToMatchCase(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToMatchCase(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(572) org.kframework.attributes.Location(Location(572,8,572,86)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_\\/__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"orpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(587) org.kframework.attributes.Location(Location(587,8,587,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_\\/__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"orpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(586) org.kframework.attributes.Location(Location(586,8,586,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_\\/__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"orpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(585) org.kframework.attributes.Location(Location(585,8,585,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_\\/__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"orpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(584) org.kframework.attributes.Location(Location(584,8,584,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_STYPE-SYNTAX`(.KList))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"empty\"","String"),#token("\"method\"","String"),#token("\"arg\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(486) org.kframework.attributes.Location(Location(486,8,486,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_<=__STYPE-SYNTAX`(#SemanticCastToBindNamePats(B),#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"pbind\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBindNamePats(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(538) org.kframework.attributes.Location(Location(538,8,538,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_<=__STYPE-SYNTAX`(#SemanticCastToAExp(A),#SemanticCastToAExp(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leq\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(673) org.kframework.attributes.Location(Location(673,8,673,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_<-__STYPE-SYNTAX`(#SemanticCastToBindNamePats(B),#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"lbind\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBindNamePats(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(528) org.kframework.attributes.Location(Location(528,8,528,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_<-__STYPE-SYNTAX`(#SemanticCastToBindNamePat(B),#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"lbind\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBindNamePat(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(527) org.kframework.attributes.Location(Location(527,8,527,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_<!__STYPE-SYNTAX`(#SemanticCastToBindNamePats(B),#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"peek\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBindNamePats(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(533) org.kframework.attributes.Location(Location(533,8,533,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_<!__STYPE-SYNTAX`(#SemanticCastToBindNamePat(B),#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"peek\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToBindNamePat(B)),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(532) org.kframework.attributes.Location(Location(532,8,532,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_;__STYPE-SYNTAX`(#SemanticCastToRbind(A),#SemanticCastToRbinds(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"pbinds\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToRbind(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToRbinds(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(540) org.kframework.attributes.Location(Location(540,8,540,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_;__STYPE-SYNTAX`(#SemanticCastToRbind(A),#SemanticCastToRbind(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"pbinds\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToRbind(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToRbind(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(539) org.kframework.attributes.Location(Location(539,8,539,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_;__STYPE-SYNTAX`(#SemanticCastToPbind(A),#SemanticCastToPbinds(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"peeks\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToPbind(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToPbinds(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(535) org.kframework.attributes.Location(Location(535,8,535,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_;__STYPE-SYNTAX`(#SemanticCastToPbind(A),#SemanticCastToPbind(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"peeks\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToPbind(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToPbind(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(534) org.kframework.attributes.Location(Location(534,8,534,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_;__STYPE-SYNTAX`(#SemanticCastToLbind(A),#SemanticCastToLbinds(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"lbinds\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToLbind(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToLbinds(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(530) org.kframework.attributes.Location(Location(530,8,530,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_;__STYPE-SYNTAX`(#SemanticCastToLbind(A),#SemanticCastToLbind(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"lbinds\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToLbind(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToLbind(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(529) org.kframework.attributes.Location(Location(529,8,529,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"kvpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(622) org.kframework.attributes.Location(Location(622,8,622,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"kvpair\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(615) org.kframework.attributes.Location(Location(615,8,615,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_:_,__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q),#SemanticCastToRhoKVPat(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"kvpats\"","String"),`type[_]_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q))),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoKVPat(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(623) org.kframework.attributes.Location(Location(623,8,623,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_:_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q),#SemanticCastToRhoKVPairs(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"kvpairs\"","String"),`type[_]_STYPE-SYNTAX`(`_:__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q))),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoKVPairs(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(616) org.kframework.attributes.Location(Location(616,8,616,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_:=>__STYPE-SYNTAX`(#SemanticCastToProcPat(M),#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"case\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(571) org.kframework.attributes.Location(Location(571,8,571,86)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_/\\__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"andpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(582) org.kframework.attributes.Location(Location(582,8,582,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_/\\__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"andpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(581) org.kframework.attributes.Location(Location(581,8,581,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_/\\__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"andpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(580) org.kframework.attributes.Location(Location(580,8,580,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_/\\__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"andpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(579) org.kframework.attributes.Location(Location(579,8,579,94)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_.__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToMethodAndArgs(M)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"method\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToMethodAndArgs(M))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(650) org.kframework.attributes.Location(Location(650,8,650,96)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_.__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToMethodAndArgs(M)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"method\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToMethodAndArgs(M))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(649) org.kframework.attributes.Location(Location(649,8,649,96)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_-__STYPE-SYNTAX`(#SemanticCastToAExp(A),#SemanticCastToAExp(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"minus\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(670) org.kframework.attributes.Location(Location(670,8,670,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPats(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"procpats\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPats(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(665) org.kframework.attributes.Location(Location(665,8,665,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"procpats\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(664) org.kframework.attributes.Location(Location(664,8,664,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProcs(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"procs\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcs(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(662) org.kframework.attributes.Location(Location(662,8,662,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"procs\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(661) org.kframework.attributes.Location(Location(661,8,661,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToNamePat(M),#SemanticCastToNamePats(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"namepats\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePats(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(658) org.kframework.attributes.Location(Location(658,8,658,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToNamePat(M),#SemanticCastToNamePat(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"namepats\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(657) org.kframework.attributes.Location(Location(657,8,657,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToName(M),#SemanticCastToNames(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"names\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToNames(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(655) org.kframework.attributes.Location(Location(655,8,655,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToName(M),#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"names\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(654) org.kframework.attributes.Location(Location(654,8,654,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_+__STYPE-SYNTAX`(#SemanticCastToAExp(A),#SemanticCastToAExp(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"plus\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(669) org.kframework.attributes.Location(Location(669,8,669,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_*__STYPE-SYNTAX`(#SemanticCastToAExp(A),#SemanticCastToAExp(B)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"mult\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(A)),`type[_]_STYPE-SYNTAX`(#SemanticCastToAExp(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(668) org.kframework.attributes.Location(Location(668,8,668,83)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_(_)_STYPE-SYNTAX`(#SemanticCastToMethod(M),#SemanticCastToMethodArgs(A)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"methodandargs\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToMethod(M)),`type[_]_STYPE-SYNTAX`(#SemanticCastToMethodArgs(A))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(651) org.kframework.attributes.Location(Location(651,8,651,96)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!__STYPE-SYNTAX`(#SemanticCastToNamePat(N),#SemanticCastToRhoTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"send\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(519) org.kframework.attributes.Location(Location(519,8,519,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!__STYPE-SYNTAX`(#SemanticCastToNamePat(N),#SemanticCastToPatTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"send\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToPatTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(520) org.kframework.attributes.Location(Location(520,8,520,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!__STYPE-SYNTAX`(#SemanticCastToName(N),#SemanticCastToRhoTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"send\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(517) org.kframework.attributes.Location(Location(517,8,517,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!__STYPE-SYNTAX`(#SemanticCastToName(N),#SemanticCastToPatTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"send\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToPatTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(518) org.kframework.attributes.Location(Location(518,8,518,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!!__STYPE-SYNTAX`(#SemanticCastToNamePat(N),#SemanticCastToRhoTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"psend\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(523) org.kframework.attributes.Location(Location(523,8,523,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!!__STYPE-SYNTAX`(#SemanticCastToNamePat(N),#SemanticCastToPatTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"psend\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToPatTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(524) org.kframework.attributes.Location(Location(524,8,524,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!!__STYPE-SYNTAX`(#SemanticCastToName(N),#SemanticCastToRhoTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"psend\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToRhoTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(521) org.kframework.attributes.Location(Location(521,8,521,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`_!!__STYPE-SYNTAX`(#SemanticCastToName(N),#SemanticCastToPatTuple(R)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"psend\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N)),`type[_]_STYPE-SYNTAX`(#SemanticCastToPatTuple(R))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(522) org.kframework.attributes.Location(Location(522,8,522,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProcs(Q))))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"list\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcs(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(609) org.kframework.attributes.Location(Location(609,8,609,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`[_]_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q))))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"list\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(608) org.kframework.attributes.Location(Location(608,8,608,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"list\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(607) org.kframework.attributes.Location(Location(607,8,607,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`[_,..._]_STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcVar(V)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"listpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcVar(V))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(612) org.kframework.attributes.Location(Location(612,8,612,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`WildProc_STYPE-SYNTAX`(.KList))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"proc\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(501) org.kframework.attributes.Location(Location(501,8,501,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`WildName_STYPE-SYNTAX`(.KList))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"wildcard\"","String"),#token("\"name\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(502) org.kframework.attributes.Location(Location(502,8,502,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`Set(_,..._)_STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcVar(V)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"setpat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcVar(V))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(633) org.kframework.attributes.Location(Location(633,8,633,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`Set(_)_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProcs(Q))))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"set\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcs(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(630) org.kframework.attributes.Location(Location(630,8,630,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`Set(_)_STYPE-SYNTAX`(`_,__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q))))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"set\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(629) org.kframework.attributes.Location(Location(629,8,629,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`Set(_)_STYPE-SYNTAX`(#SemanticCastToProc(P)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"set\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProc(P)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(628) org.kframework.attributes.Location(Location(628,8,628,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`Nil_STYPE-SYNTAX`(.KList))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"nil\"","String"),#token("\"Nil\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(489) org.kframework.attributes.Location(Location(489,8,489,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`@_(_)_STYPE-SYNTAX`(#SemanticCastToProcVar(V),#SemanticCastToUri(U)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"newuri\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcVar(V)),`type[_]_STYPE-SYNTAX`(#SemanticCastToUri(U))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(7) contentStartLine(559) org.kframework.attributes.Location(Location(559,7,559,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`=:__STYPE-SYNTAX`(#SemanticCastToProcVar(V)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"varref\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcVar(V)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(576) org.kframework.attributes.Location(Location(576,8,576,80)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`*__STYPE-SYNTAX`(#SemanticCastToNamePat(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"eval\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToNamePat(N)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(514) org.kframework.attributes.Location(Location(514,8,514,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`*__STYPE-SYNTAX`(#SemanticCastToName(N)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"eval\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToName(N)),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(513) org.kframework.attributes.Location(Location(513,8,513,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(`(_,..._)_STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcVar(V)))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"tuplepat\"","String"),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`type[_]_STYPE-SYNTAX`(#SemanticCastToProcVar(V))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(641) org.kframework.attributes.Location(Location(641,8,641,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(#SemanticCastToString(S))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"string\"","String"),#SemanticCastToString(S)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(482) org.kframework.attributes.Location(Location(482,8,482,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(#SemanticCastToSimpleType(ST))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"simpletype\"","String"),`type[_]_STYPE-SYNTAX`(`toString(_)_STYPE-SYNTAX`(#SemanticCastToSimpleType(ST))),`type[_]_STYPE-SYNTAX`(`#truncate_STYPE-SYNTAX`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(506) org.kframework.attributes.Location(Location(506,8,506,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(#SemanticCastToProcVar(V))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"procvar\"","String"),#SemanticCastToProcVar(V)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(492) org.kframework.attributes.Location(Location(492,8,492,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(#SemanticCastToMethod(M))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"method\"","String"),#SemanticCastToMethod(M)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(485) org.kframework.attributes.Location(Location(485,8,485,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(#SemanticCastToInt(I))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"int\"","String"),#SemanticCastToInt(I)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(481) org.kframework.attributes.Location(Location(481,8,481,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `type[_]_STYPE-SYNTAX`(#SemanticCastToBool(B))=>`type[_;;_;;_]_STYPE-SYNTAX`(#token("\"leaf\"","String"),#token("\"bool\"","String"),#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(480) org.kframework.attributes.Location(Location(480,8,480,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isin__STYPE-SYNTAX`(#SemanticCastToType(A),#SemanticCastToType(B))=>`_#isIn__STYPE-SYNTAX`(#SemanticCastToType(A),#SemanticCastToType(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(685) org.kframework.attributes.Location(Location(685,8,685,40)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToProcPat(_),#SemanticCastToProc(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(690) org.kframework.attributes.Location(Location(690,8,690,42)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToProcPat(P),#SemanticCastToProcPat(Q))=>`_#isin__STYPE-SYNTAX`(`#type(_)_STYPE-SYNTAX`(#SemanticCastToProcPat(P)),`#type(_)_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(689) org.kframework.attributes.Location(Location(689,8,689,60)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProcPat(Q))=>`_#isin__STYPE-SYNTAX`(`#type(_)_STYPE-SYNTAX`(#SemanticCastToProc(P)),`#type(_)_STYPE-SYNTAX`(#SemanticCastToProcPat(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(688) org.kframework.attributes.Location(Location(688,8,688,60)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToProc(P),#SemanticCastToProc(Q))=>`_#isin__STYPE-SYNTAX`(`#type(_)_STYPE-SYNTAX`(#SemanticCastToProc(P)),`#type(_)_STYPE-SYNTAX`(#SemanticCastToProc(Q))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(687) org.kframework.attributes.Location(Location(687,8,687,60)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToNamePat(_),#SemanticCastToName(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(695) org.kframework.attributes.Location(Location(695,8,695,42)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToNamePat(M),#SemanticCastToNamePat(N))=>`_#isin__STYPE-SYNTAX`(`#type(_)_STYPE-SYNTAX`(#SemanticCastToNamePat(M)),`#type(_)_STYPE-SYNTAX`(#SemanticCastToNamePat(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(694) org.kframework.attributes.Location(Location(694,8,694,60)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToName(M),#SemanticCastToNamePat(N))=>`_#isin__STYPE-SYNTAX`(`#type(_)_STYPE-SYNTAX`(#SemanticCastToName(M)),`#type(_)_STYPE-SYNTAX`(#SemanticCastToNamePat(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(693) org.kframework.attributes.Location(Location(693,8,693,60)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_#isIn__STYPE-SYNTAX`(#SemanticCastToName(M),#SemanticCastToName(N))=>`_#isin__STYPE-SYNTAX`(`#type(_)_STYPE-SYNTAX`(#SemanticCastToName(M)),`#type(_)_STYPE-SYNTAX`(#SemanticCastToName(N))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(692) org.kframework.attributes.Location(Location(692,8,692,60)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#type(_)_STYPE-SYNTAX`(#SemanticCastToProcOrPat(P))=>`type[_]_STYPE-SYNTAX`(#SemanticCastToProcOrPat(P)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(475) org.kframework.attributes.Location(Location(475,8,475,39)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#type(_)_STYPE-SYNTAX`(#SemanticCastToNameOrPat(N))=>`type[_]_STYPE-SYNTAX`(#SemanticCastToNameOrPat(N)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(476) org.kframework.attributes.Location(Location(476,8,476,39)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment(----------------------,[org.kframework.attributes.Location(Location(683,1,683,25)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(----------------------,[org.kframework.attributes.Location(Location(681,1,681,25)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(---------------------,[org.kframework.attributes.Location(Location(474,1,474,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(---------------------,[org.kframework.attributes.Location(Location(472,1,472,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(--- Type function ---,[org.kframework.attributes.Location(Location(473,1,473,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(--- Type Inclusion ---,[org.kframework.attributes.Location(Location(682,1,682,25)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(*** Nodes ***,[org.kframework.attributes.Location(Location(504,1,504,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(*** Leaves ***,[org.kframework.attributes.Location(Location(478,1,478,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( variable reference,[org.kframework.attributes.Location(Location(576,82,576,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( tuple pattern,[org.kframework.attributes.Location(Location(641,103,641,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( subtraction,[org.kframework.attributes.Location(Location(670,85,670,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( singleton set,[org.kframework.attributes.Location(Location(628,106,628,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( singleton list,[org.kframework.attributes.Location(Location(607,105,607,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( single process set,[org.kframework.attributes.Location(Location(636,106,636,127)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( single key-value pair,[org.kframework.attributes.Location(Location(622,112,622,136)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( single key-value pair,[org.kframework.attributes.Location(Location(615,112,615,136)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( set pattern,[org.kframework.attributes.Location(Location(633,106,633,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( quoted process,[org.kframework.attributes.Location(Location(509,101,509,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( quoted process pattern,[org.kframework.attributes.Location(Location(510,101,510,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( pattern N-tuple, N > 2,[org.kframework.attributes.Location(Location(646,103,646,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( pattern 2-tuple,[org.kframework.attributes.Location(Location(645,103,645,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( pattern 1-tuple,[org.kframework.attributes.Location(Location(644,103,644,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( new uri name declaration,[org.kframework.attributes.Location(Location(559,91,559,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( new bindings,[org.kframework.attributes.Location(Location(555,91,555,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( new bindings pattern,[org.kframework.attributes.Location(Location(557,91,557,114)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( new binding,[org.kframework.attributes.Location(Location(554,91,554,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( new binding pattern,[org.kframework.attributes.Location(Location(556,91,556,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( multiplication,[org.kframework.attributes.Location(Location(668,85,668,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( map pattern,[org.kframework.attributes.Location(Location(625,112,625,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical or,[org.kframework.attributes.Location(Location(587,96,587,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical or,[org.kframework.attributes.Location(Location(586,96,586,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical or,[org.kframework.attributes.Location(Location(585,96,585,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical or,[org.kframework.attributes.Location(Location(584,96,584,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical negation,[org.kframework.attributes.Location(Location(590,96,590,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical negation,[org.kframework.attributes.Location(Location(589,96,589,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical and,[org.kframework.attributes.Location(Location(582,96,582,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical and,[org.kframework.attributes.Location(Location(581,96,581,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical and,[org.kframework.attributes.Location(Location(580,96,580,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( logical and,[org.kframework.attributes.Location(Location(579,96,579,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( list pattern,[org.kframework.attributes.Location(Location(612,105,612,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( leq,[org.kframework.attributes.Location(Location(673,85,673,91)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if true/false then P,[org.kframework.attributes.Location(Location(594,88,594,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if true/false then P,[org.kframework.attributes.Location(Location(593,88,593,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if true/false then P else Q,[org.kframework.attributes.Location(Location(597,87,597,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if true/false then P else Q,[org.kframework.attributes.Location(Location(596,87,596,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( contract, N names declared, N > 1,[org.kframework.attributes.Location(Location(549,119,549,155)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( contract, 1 name declared,[org.kframework.attributes.Location(Location(548,119,548,147)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( contract pattern, N names declared, N > 1,[org.kframework.attributes.Location(Location(551,119,551,163)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( contract pattern, 1 name declared,[org.kframework.attributes.Location(Location(550,119,550,155)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bundle0,[org.kframework.attributes.Location(Location(602,87,602,97)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bundle-,[org.kframework.attributes.Location(Location(601,87,601,97)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bundle,[org.kframework.attributes.Location(Location(603,87,603,96)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bundle+,[org.kframework.attributes.Location(Location(600,87,600,97)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bracketed ProcOrPat type resolution,[org.kframework.attributes.Location(Location(679,44,679,82)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bool or,[org.kframework.attributes.Location(Location(675,85,675,95)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bool not,[org.kframework.attributes.Location(Location(676,93,676,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( bool and,[org.kframework.attributes.Location(Location(674,85,674,96)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( addition,[org.kframework.attributes.Location(Location(669,85,669,96)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Wildcards,[org.kframework.attributes.Location(Location(500,1,500,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( WildProc =============> Leaf,[org.kframework.attributes.Location(Location(501,92,501,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( WildName =============> Leaf,[org.kframework.attributes.Location(Location(502,92,502,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( VarRef,[org.kframework.attributes.Location(Location(575,1,575,10)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Uri,[org.kframework.attributes.Location(Location(497,1,497,7)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Uri ==================> Leaf,[org.kframework.attributes.Location(Location(498,92,498,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Unforgeable Integers,[org.kframework.attributes.Location(Location(494,1,494,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Unforgeable ==========> Leaf,[org.kframework.attributes.Location(Location(495,92,495,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( String ===============> Leaf,[org.kframework.attributes.Location(Location(482,92,482,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( SimpleType,[org.kframework.attributes.Location(Location(505,1,505,14)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Several Procs/Pats,[org.kframework.attributes.Location(Location(660,1,660,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Several Names/Pats,[org.kframework.attributes.Location(Location(653,1,653,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( SendOrPat,[org.kframework.attributes.Location(Location(516,1,516,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send,[org.kframework.attributes.Location(Location(521,101,521,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send,[org.kframework.attributes.Location(Location(517,101,517,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send pattern,[org.kframework.attributes.Location(Location(524,101,524,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send pattern,[org.kframework.attributes.Location(Location(523,101,523,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send pattern,[org.kframework.attributes.Location(Location(522,101,522,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send pattern,[org.kframework.attributes.Location(Location(520,101,520,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send pattern,[org.kframework.attributes.Location(Location(519,101,519,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send pattern,[org.kframework.attributes.Location(Location(518,101,518,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoTuplePat,[org.kframework.attributes.Location(Location(640,1,640,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoTuple,[org.kframework.attributes.Location(Location(635,1,635,12)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoSetPat,[org.kframework.attributes.Location(Location(632,1,632,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoSet,[org.kframework.attributes.Location(Location(627,1,627,10)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoMapPat,[org.kframework.attributes.Location(Location(621,1,621,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoMap,[org.kframework.attributes.Location(Location(614,1,614,10)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoListPat,[org.kframework.attributes.Location(Location(611,1,611,14)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoList,[org.kframework.attributes.Location(Location(606,1,606,11)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Resolving brackets,[org.kframework.attributes.Location(Location(678,1,678,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Relation to #isIn predicate,[org.kframework.attributes.Location(Location(684,1,684,31)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( ReceiveOrPat/Bind(s),[org.kframework.attributes.Location(Location(526,1,526,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Receive,[org.kframework.attributes.Location(Location(544,101,544,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Receive,[org.kframework.attributes.Location(Location(542,101,542,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Receive pattern,[org.kframework.attributes.Location(Location(545,101,545,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Receive pattern,[org.kframework.attributes.Location(Location(543,101,543,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Quote,[org.kframework.attributes.Location(Location(508,1,508,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Process Variable,[org.kframework.attributes.Location(Location(491,1,491,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( ProcVar ==============> Leaf,[org.kframework.attributes.Location(Location(492,92,492,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Persistent bind,[org.kframework.attributes.Location(Location(538,101,538,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Persistent bind,[org.kframework.attributes.Location(Location(537,101,537,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Peek bind,[org.kframework.attributes.Location(Location(533,101,533,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Peek bind,[org.kframework.attributes.Location(Location(532,101,532,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( PatTuple,[org.kframework.attributes.Location(Location(643,1,643,12)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( ParOrPat,[org.kframework.attributes.Location(Location(561,1,561,12)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Par,[org.kframework.attributes.Location(Location(562,91,562,97)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Par pattern,[org.kframework.attributes.Location(Location(565,91,565,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Par pattern,[org.kframework.attributes.Location(Location(564,91,564,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Par pattern,[org.kframework.attributes.Location(Location(563,91,563,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Nil,[org.kframework.attributes.Location(Location(488,1,488,7)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Nil ==================> Leaf,[org.kframework.attributes.Location(Location(489,92,489,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( New and Pattern,[org.kframework.attributes.Location(Location(553,1,553,19)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N processes, N > 2,[org.kframework.attributes.Location(Location(662,85,662,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N process set, N > 2,[org.kframework.attributes.Location(Location(638,106,638,129)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N process patterns, N > 2,[org.kframework.attributes.Location(Location(665,85,665,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N process list, N > 2,[org.kframework.attributes.Location(Location(609,105,609,129)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N persistent binds, N > 2,[org.kframework.attributes.Location(Location(540,101,540,129)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N peek binds, N > 2,[org.kframework.attributes.Location(Location(535,101,535,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N names, N > 2,[org.kframework.attributes.Location(Location(655,85,655,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N name patterns, N > 2,[org.kframework.attributes.Location(Location(658,85,658,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N match cases, N > 2,[org.kframework.attributes.Location(Location(573,88,573,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N linear binds, N > 2,[org.kframework.attributes.Location(Location(530,101,530,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N key-value pairs, N > 2,[org.kframework.attributes.Location(Location(623,112,623,139)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N key-value pairs, N > 2,[org.kframework.attributes.Location(Location(616,112,616,139)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N key-value pairs map,[org.kframework.attributes.Location(Location(619,112,619,136)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N element set, N > 2,[org.kframework.attributes.Location(Location(630,106,630,129)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Method,[org.kframework.attributes.Location(Location(649,98,649,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Method,[org.kframework.attributes.Location(Location(484,1,484,10)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Method pattern,[org.kframework.attributes.Location(Location(650,98,650,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Method and Pattern,[org.kframework.attributes.Location(Location(648,1,648,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Method and Args,[org.kframework.attributes.Location(Location(651,98,651,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Method ===============> Leaf,[org.kframework.attributes.Location(Location(485,92,485,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Match,[org.kframework.attributes.Location(Location(567,1,567,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Match against several cases,[org.kframework.attributes.Location(Location(569,88,569,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Match against one case,[org.kframework.attributes.Location(Location(568,88,568,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Logical Patterns,[org.kframework.attributes.Location(Location(578,1,578,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Linear bind,[org.kframework.attributes.Location(Location(528,101,528,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Linear bind,[org.kframework.attributes.Location(Location(527,101,527,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Int ==================> Leaf,[org.kframework.attributes.Location(Location(481,92,481,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Ground,[org.kframework.attributes.Location(Location(479,1,479,10)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( EvalOrPat,[org.kframework.attributes.Location(Location(512,1,512,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Eval,[org.kframework.attributes.Location(Location(513,101,513,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Eval pattern,[org.kframework.attributes.Location(Location(514,101,514,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Contract and Pattern,[org.kframework.attributes.Location(Location(547,1,547,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Conditionals and Patterns,[org.kframework.attributes.Location(Location(592,1,592,29)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Collections and Patterns,[org.kframework.attributes.Location(Location(605,1,605,28)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Bundles,[org.kframework.attributes.Location(Location(599,1,599,11)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Boolean,[org.kframework.attributes.Location(Location(672,1,672,11)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Bool, Int, String types,[org.kframework.attributes.Location(Location(506,110,506,136)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Bool =================> Leaf,[org.kframework.attributes.Location(Location(480,92,480,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Arithmetic,[org.kframework.attributes.Location(Location(667,1,667,14)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 processes,[org.kframework.attributes.Location(Location(661,85,661,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 process set,[org.kframework.attributes.Location(Location(637,106,637,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 process patterns,[org.kframework.attributes.Location(Location(664,85,664,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 process list,[org.kframework.attributes.Location(Location(608,105,608,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 persistent binds,[org.kframework.attributes.Location(Location(539,101,539,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 peek binds,[org.kframework.attributes.Location(Location(534,101,534,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 names,[org.kframework.attributes.Location(Location(654,85,654,95)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 name patterns,[org.kframework.attributes.Location(Location(657,85,657,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 match cases,[org.kframework.attributes.Location(Location(572,88,572,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 linear binds,[org.kframework.attributes.Location(Location(529,101,529,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 element set,[org.kframework.attributes.Location(Location(629,106,629,122)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1 match case,[org.kframework.attributes.Location(Location(571,88,571,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1 key-value pair map,[org.kframework.attributes.Location(Location(618,112,618,135)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  =====================> Leaf,[org.kframework.attributes.Location(Location(486,92,486,123)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
endmodule


module STYPE$SYNTAX [org.kframework.attributes.Location(Location(461,1,697,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))]
  imports STYPE-SYNTAX$SYNTAX
  imports MAP$SYNTAX
  imports IS-IN$SYNTAX
  syntax KResult ::= TerminalType
  syntax KCellOpt ::= KCell
  syntax Cell ::= TCell
  syntax Cell ::= KCell
  Bubble(config,<T color="teal">
      <k color="purple"> $PGM:Type </k>
    </T>,[contentStartColumn(5) contentStartLine(466) org.kframework.attributes.Location(Location(465,3,468,8)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
endmodule


module STYPE-SYNTAX [org.kframework.attributes.Location(Location(7,1,458,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))]
  imports STYPE-SYNTAX$SYNTAX
  imports DOMAINS
  ModuleComment(ConditionalPat < ProcPat,[org.kframework.attributes.Location(Location(290,86,290,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(Conditional < Proc,[org.kframework.attributes.Location(Location(76,86,76,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(------------------------,[org.kframework.attributes.Location(Location(245,1,245,27)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(------------------------,[org.kframework.attributes.Location(Location(243,1,243,27)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(----------------------,[org.kframework.attributes.Location(Location(440,1,440,25)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(----------------------,[org.kframework.attributes.Location(Location(438,1,438,25)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(-----------------,[org.kframework.attributes.Location(Location(54,1,54,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(-----------------,[org.kframework.attributes.Location(Location(52,1,52,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(-------------,[org.kframework.attributes.Location(Location(16,1,16,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(-------------,[org.kframework.attributes.Location(Location(14,1,14,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(--- toString function ---,[org.kframework.attributes.Location(Location(427,1,427,28)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(--- Type Inclusion ---,[org.kframework.attributes.Location(Location(439,1,439,25)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(--- Process Patterns ---,[org.kframework.attributes.Location(Location(244,1,244,27)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(--- PROCESSES ---,[org.kframework.attributes.Location(Location(53,1,53,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(--- NAMES ---,[org.kframework.attributes.Location(Location(15,1,15,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(******************************,[org.kframework.attributes.Location(Location(372,1,372,33)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(******************************,[org.kframework.attributes.Location(Location(370,1,370,33)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(***************************************************,[org.kframework.attributes.Location(Location(12,1,12,54)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(***************************************************,[org.kframework.attributes.Location(Location(10,1,10,54)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(*** STRUCTURAL TYPE SYNTAX ***,[org.kframework.attributes.Location(Location(371,1,371,33)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(*** Grounded Rho-Calculus with Process Patterns ***,[org.kframework.attributes.Location(Location(11,1,11,54)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( {_}: Procs ----------> Procs,[org.kframework.attributes.Location(Location(239,86,239,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( {_}: ProcPat --------------> ProcPat,[org.kframework.attributes.Location(Location(280,86,280,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( {_}: Proc -> Proc,[org.kframework.attributes.Location(Location(60,86,60,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( {_}: OrPat ---> OrPat,[org.kframework.attributes.Location(Location(362,86,362,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( {_,..._:_}: RhoKVPat x ProcVar x ProcVar ---> RhoMapPat,[org.kframework.attributes.Location(Location(330,86,330,144)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( write-only bundle,[org.kframework.attributes.Location(Location(161,86,161,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( uri(_): String ---> Uri,[org.kframework.attributes.Location(Location(133,86,133,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( unforgeable(_): Int ---> Name,[org.kframework.attributes.Location(Location(25,86,25,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: RhoKVPat --------> InitialType,[org.kframework.attributes.Location(Location(412,86,412,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: RhoKVPairs ------> InitialType,[org.kframework.attributes.Location(Location(411,86,411,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: OrPats ----------> OrPatOrLeafType,[org.kframework.attributes.Location(Location(394,86,394,132)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: OrPat -----------> OrPatOrLeafType,[org.kframework.attributes.Location(Location(393,86,393,132)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: MethodArgs ------> InitialType,[org.kframework.attributes.Location(Location(409,86,409,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: MethodAndArgs ---> InitialType,[org.kframework.attributes.Location(Location(410,86,410,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: MatchCases ------> InitialType,[org.kframework.attributes.Location(Location(408,86,408,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: MatchCase -------> InitialType,[org.kframework.attributes.Location(Location(407,86,407,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: Leaf ------------> OrPatOrLeafType,[org.kframework.attributes.Location(Location(395,86,395,132)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: IfThenPat -------> InitialType,[org.kframework.attributes.Location(Location(404,86,404,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: IfThen ----------> InitialType,[org.kframework.attributes.Location(Location(403,86,403,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: ElsePat ---------> InitialType,[org.kframework.attributes.Location(Location(406,86,406,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: Else ------------> InitialType,[org.kframework.attributes.Location(Location(405,86,405,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: Binds -----------> InitialType,[org.kframework.attributes.Location(Location(400,86,400,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: BindNamePat -----> InitialType,[org.kframework.attributes.Location(Location(402,86,402,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: BindNamePat -----> InitialType,[org.kframework.attributes.Location(Location(401,86,401,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( type[_]: Bind ------------> InitialType,[org.kframework.attributes.Location(Location(399,86,399,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( truncate,[org.kframework.attributes.Location(Location(425,86,425,97)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( toString(_): Type ----> String,[org.kframework.attributes.Location(Location(429,86,429,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( toString(_): OrPat ---> String,[org.kframework.attributes.Location(Location(428,86,428,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( syntactic sugar => for( BindNamePats <= Name ){ Proc },[org.kframework.attributes.Location(Location(233,86,233,143)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( syntactic sugar => for( BindNamePat  <= Name ){ Proc },[org.kframework.attributes.Location(Location(232,86,232,143)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( still not in interpreter? semantics?,[org.kframework.attributes.Location(Location(199,86,199,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( slice of list, map, or set,[org.kframework.attributes.Location(Location(198,86,198,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( single process set,[org.kframework.attributes.Location(Location(152,86,152,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( single process list,[org.kframework.attributes.Location(Location(142,86,142,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( single key-value pair,[org.kframework.attributes.Location(Location(148,86,148,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( set?,[org.kframework.attributes.Location(Location(194,86,194,93)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( return set of keys of a map,[org.kframework.attributes.Location(Location(195,86,195,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( read/write bundle,[org.kframework.attributes.Location(Location(164,86,164,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( read-only bundle,[org.kframework.attributes.Location(Location(162,86,162,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( process tuple,[org.kframework.attributes.Location(Location(139,86,139,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( process set,[org.kframework.attributes.Location(Location(138,86,138,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( process map,[org.kframework.attributes.Location(Location(146,86,146,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( process map,[org.kframework.attributes.Location(Location(137,86,137,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( process list,[org.kframework.attributes.Location(Location(136,86,136,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( number of elements in list, map, set, tuple,[org.kframework.attributes.Location(Location(196,86,196,132)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( nth element in list, tuple?, set,[org.kframework.attributes.Location(Location(184,86,184,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( not_: BExp ----------> BExp,[org.kframework.attributes.Location(Location(219,86,219,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( no bundle,[org.kframework.attributes.Location(Location(163,86,163,98)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( map, set difference?,[org.kframework.attributes.Location(Location(188,86,188,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( list?, map, set union,[org.kframework.attributes.Location(Location(187,86,187,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( length of list, tuple - different from size?,[org.kframework.attributes.Location(Location(197,86,197,133)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( input? -> bytearray,[org.kframework.attributes.Location(Location(185,86,185,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ...,[org.kframework.attributes.Location(Location(312,86,312,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ...,[org.kframework.attributes.Location(Location(309,86,309,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ...,[org.kframework.attributes.Location(Location(227,86,227,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ...,[org.kframework.attributes.Location(Location(224,86,224,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ... else,[org.kframework.attributes.Location(Location(310,86,310,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ... else,[org.kframework.attributes.Location(Location(225,86,225,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ... else ...,[org.kframework.attributes.Location(Location(314,86,314,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( if ... then ... else ...,[org.kframework.attributes.Location(Location(229,86,229,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( hex -> bytes,[org.kframework.attributes.Location(Location(186,86,186,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( getOrElse?,[org.kframework.attributes.Location(Location(193,86,193,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( get?,[org.kframework.attributes.Location(Location(192,86,192,93)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( for(_){_}: Binds x ProcPat ---> ProcPat ,[org.kframework.attributes.Location(Location(257,86,257,129)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( for(_){_}: Binds x Proc ---> Receive,[org.kframework.attributes.Location(Location(84,86,84,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( for(_){_}: Bind  x ProcPat ---> ProcPat  // requires ProcPat[Name / BindNamePat] to be a process pattern?,[org.kframework.attributes.Location(Location(256,86,256,194)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( for(_){_}: Bind  x Proc ---> Receive,[org.kframework.attributes.Location(Location(83,86,83,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( delete element from ,[org.kframework.attributes.Location(Location(190,86,190,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( corresponds to the leaves in the structural binary tree - type[_;;_;;_]: String x Leaf x Leaf ---> LeafType,[org.kframework.attributes.Location(Location(423,1,423,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( contract_(_)={_}: Name x BindNamePats x ProcPat ---> ContractPat,[org.kframework.attributes.Location(Location(344,89,344,156)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( contract_(_)={_}: Name x BindNamePat  x ProcPat ---> ContractPat,[org.kframework.attributes.Location(Location(343,89,343,156)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( contains predicate -> applied to what?,[org.kframework.attributes.Location(Location(191,86,191,127)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( concat list?,[org.kframework.attributes.Location(Location(189,86,189,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _|_: ProcPat x ProcPat ------> ParPat,[org.kframework.attributes.Location(Location(250,86,250,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _|_: ProcPat x Proc ---------> ParPat,[org.kframework.attributes.Location(Location(249,86,249,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _|_: Proc x ProcPat ---------> ParPat,[org.kframework.attributes.Location(Location(248,86,248,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _|_: Proc x Proc ----------> Par,[org.kframework.attributes.Location(Location(80,86,80,121)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _\/_: ProcPat x ProcPat ---> ProcPat,[org.kframework.attributes.Location(Location(302,86,302,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _\/_: ProcPat x Proc ------> ProcPat,[org.kframework.attributes.Location(Location(301,86,301,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _\/_: Proc x ProcPat ------> ProcPat,[org.kframework.attributes.Location(Location(300,86,300,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _\/_: Proc x Proc ---------> ProcPat,[org.kframework.attributes.Location(Location(299,86,299,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _<=_: BindNamePats x Name ---> Rbind,[org.kframework.attributes.Location(Location(115,86,115,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _<=_: BindNamePat  x Name ---> Rbind ,[org.kframework.attributes.Location(Location(114,86,114,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _<=_: AExp x AExp ---> BExp,[org.kframework.attributes.Location(Location(218,86,218,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _<-_: BindNamePats x Name ---> Lbind,[org.kframework.attributes.Location(Location(101,86,101,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _<-_: BindNamePat  x Name ---> Lbind ,[org.kframework.attributes.Location(Location(100,86,100,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _<!_: BindNamePats x Name ---> Pbind,[org.kframework.attributes.Location(Location(108,86,108,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _<!_: BindNamePat  x Name ---> Pbind ,[org.kframework.attributes.Location(Location(107,86,107,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _:_: ProcPat x ProcPat ----------------> RhoKVPat,[org.kframework.attributes.Location(Location(327,86,327,138)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _:_,_: ProcPat x ProcPat x RhoKVPat ---> RhoKVPat,[org.kframework.attributes.Location(Location(328,86,328,138)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _:=>_: ProcPat x Proc ----------> MatchCase,[org.kframework.attributes.Location(Location(174,86,174,132)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _/\_: ProcPat x ProcPat ---> ProcPat,[org.kframework.attributes.Location(Location(298,86,298,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _/\_: ProcPat x Proc ------> ProcPat,[org.kframework.attributes.Location(Location(297,86,297,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _/\_: Proc x ProcPat ------> ProcPat,[org.kframework.attributes.Location(Location(296,86,296,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _/\_: Proc x Proc ---------> ProcPat,[org.kframework.attributes.Location(Location(295,86,295,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _._: ProcPat x MethodAndArgs ---> MethodPat,[org.kframework.attributes.Location(Location(347,86,347,132)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _._(_): Proc x MethodAndArgs ---> MethodProc,[org.kframework.attributes.Location(Location(180,86,180,133)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _-_: AExp x AExp ---> AExp,[org.kframework.attributes.Location(Location(212,86,212,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: ProcPats x ProcPat ---> ProcPats,[org.kframework.attributes.Location(Location(351,86,351,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: ProcPat  x ProcPat ---> ProcPats,[org.kframework.attributes.Location(Location(350,86,350,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: Proc x Procs ---> Procs,[org.kframework.attributes.Location(Location(241,86,241,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: Proc x Proc  ---> Procs,[org.kframework.attributes.Location(Location(240,86,240,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: Names x Name ---> Names,[org.kframework.attributes.Location(Location(40,86,40,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: NamePats x NamePat ---> NamePats,[org.kframework.attributes.Location(Location(45,86,45,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: NamePat  x NamePat ---> NamePats,[org.kframework.attributes.Location(Location(44,86,44,126)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _,_: Name  x Name ---> Names,[org.kframework.attributes.Location(Location(39,86,39,117)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _+_: AExp x AExp ---> AExp,[org.kframework.attributes.Location(Location(211,86,211,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _*_: AExp x AExp ---> AExp,[org.kframework.attributes.Location(Location(210,86,210,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _(_): Method x MethodArgs ------> MethodAndArgs,[org.kframework.attributes.Location(Location(182,86,182,136)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _!!(_): NamePat x RhoTuple ---> SendPat,[org.kframework.attributes.Location(Location(267,86,267,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _!!(_): NamePat x PatTuple ---> SendPat,[org.kframework.attributes.Location(Location(268,86,268,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _!!(_): Name x RhoTuple ------> Send,[org.kframework.attributes.Location(Location(122,86,122,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _!!(_): Name    x PatTuple ---> SendPat,[org.kframework.attributes.Location(Location(266,86,266,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _ _: MatchCase x MatchCases ----> MatchCases,[org.kframework.attributes.Location(Location(177,86,177,133)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( _ _: MatchCase x MatchCase -----> MatchCase,[org.kframework.attributes.Location(Location(176,86,176,132)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( [_,..._]: ProcPat x ProcVar ------> RhoListPat,[org.kframework.attributes.Location(Location(324,86,324,135)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Variable Refernces - Makes it so we _don't_ shadow the variable referenced,[org.kframework.attributes.Location(Location(235,1,235,78)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Unforgeable name,[org.kframework.attributes.Location(Location(24,1,24,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Typical input for type rewrites,[org.kframework.attributes.Location(Location(392,1,392,35)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( The type inclusion predicate,[org.kframework.attributes.Location(Location(441,1,441,32)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( TerminalType < IntermediateType,[org.kframework.attributes.Location(Location(416,86,416,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( TUple Pattern,[org.kframework.attributes.Location(Location(335,1,335,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( String < Ground,[org.kframework.attributes.Location(Location(130,86,130,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( String < BExp,[org.kframework.attributes.Location(Location(217,86,217,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( String < AExp (S1 + S2 => S1 +String S2),[org.kframework.attributes.Location(Location(209,86,209,129)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Simple Types - types of ground terms,[org.kframework.attributes.Location(Location(380,1,380,40)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Several Processes,[org.kframework.attributes.Location(Location(238,1,238,21)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Several Process Patterns,[org.kframework.attributes.Location(Location(349,1,349,28)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Several Names,[org.kframework.attributes.Location(Location(37,1,37,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Several Name Patterns,[org.kframework.attributes.Location(Location(42,1,42,25)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Set(_,..._): ProcPat x ProcVar ---> RhoSetPat,[org.kframework.attributes.Location(Location(333,86,333,134)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Set Pattern,[org.kframework.attributes.Location(Location(332,1,332,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( SendPat < SendOrPat,[org.kframework.attributes.Location(Location(271,86,271,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send,[org.kframework.attributes.Location(Location(120,1,120,8)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Send Pattern,[org.kframework.attributes.Location(Location(262,1,262,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( RhoTuplePat < CollectionPat,[org.kframework.attributes.Location(Location(320,86,320,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( ReceivePat < ReciveOrPat,[org.kframework.attributes.Location(Location(260,86,260,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Receive,[org.kframework.attributes.Location(Location(82,1,82,11)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Receive Pattern,[org.kframework.attributes.Location(Location(255,1,255,19)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Rbinds < Binds,[org.kframework.attributes.Location(Location(92,86,92,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Rbind < Bind, repeated,[org.kframework.attributes.Location(Location(88,86,88,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Processes,[org.kframework.attributes.Location(Location(59,1,59,13)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Process tuples,[org.kframework.attributes.Location(Location(155,1,155,18)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Process sets,[org.kframework.attributes.Location(Location(151,1,151,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Process maps,[org.kframework.attributes.Location(Location(145,1,145,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Process lists,[org.kframework.attributes.Location(Location(141,1,141,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Process Variable,[org.kframework.attributes.Location(Location(56,1,56,20)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Process Pattern,[org.kframework.attributes.Location(Location(279,1,279,19)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( ProcPat < ProcOrPat,[org.kframework.attributes.Location(Location(356,86,356,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Proc or ProcPat,[org.kframework.attributes.Location(Location(353,1,353,19)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Pbinds < Binds,[org.kframework.attributes.Location(Location(91,86,91,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Pbind < Bind, peek,[org.kframework.attributes.Location(Location(87,86,87,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Pattern Tuple,[org.kframework.attributes.Location(Location(338,1,338,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Par,[org.kframework.attributes.Location(Location(79,1,79,7)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Par Pattern,[org.kframework.attributes.Location(Location(247,1,247,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( New,[org.kframework.attributes.Location(Location(166,1,166,7)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( New Pattern,[org.kframework.attributes.Location(Location(304,1,304,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Names,[org.kframework.attributes.Location(Location(18,1,18,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Names, NamePats, Procs, or ProcPats,[org.kframework.attributes.Location(Location(366,1,366,39)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( NamePats < NameOrPats,[org.kframework.attributes.Location(Location(50,86,50,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( NamePat < NameOrPat,[org.kframework.attributes.Location(Location(35,86,35,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( NamePat < BindNamePat,[org.kframework.attributes.Location(Location(95,86,95,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Name, Process, Pattern types for #isName, #isProc, #isPat predicates,[org.kframework.attributes.Location(Location(453,1,453,72)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Name, NamePat, Proc, or ProcPat,[org.kframework.attributes.Location(Location(361,1,361,35)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Name or Name Pattern,[org.kframework.attributes.Location(Location(47,1,47,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Name or Name Pattern,[org.kframework.attributes.Location(Location(32,1,32,24)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Name Patterns,[org.kframework.attributes.Location(Location(27,1,27,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N-tuple, N > 1,[org.kframework.attributes.Location(Location(158,86,158,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N-tuple, N > 1,[org.kframework.attributes.Location(Location(157,86,157,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N-tuple pattern, N > 2,[org.kframework.attributes.Location(Location(341,86,341,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N repeated binds, N > 2,[org.kframework.attributes.Location(Location(118,86,118,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N process set, N > 1,[org.kframework.attributes.Location(Location(153,86,153,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N process list, N > 1,[org.kframework.attributes.Location(Location(143,86,143,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N peek binds, N > 2,[org.kframework.attributes.Location(Location(111,86,111,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N match cases, N > 1,[org.kframework.attributes.Location(Location(172,86,172,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N linear binds, N > 2,[org.kframework.attributes.Location(Location(104,86,104,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N key-value pairs, N > 1,[org.kframework.attributes.Location(Location(149,86,149,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N arguments, N > 2,[org.kframework.attributes.Location(Location(203,86,203,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N > 1 name declarations,[org.kframework.attributes.Location(Location(306,86,306,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( N > 1 name declarations,[org.kframework.attributes.Location(Location(168,86,168,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Methods,[org.kframework.attributes.Location(Location(179,1,179,11)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( MethodProc < Proc,[org.kframework.attributes.Location(Location(68,86,68,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Method Pattern,[org.kframework.attributes.Location(Location(346,1,346,18)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Match,[org.kframework.attributes.Location(Location(170,1,170,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Map Pattern,[org.kframework.attributes.Location(Location(326,1,326,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Logical connectives,[org.kframework.attributes.Location(Location(292,29,292,51)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( List Pattern,[org.kframework.attributes.Location(Location(323,1,323,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Leaves,[org.kframework.attributes.Location(Location(431,1,431,10)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( LeafType < TerminalType,[org.kframework.attributes.Location(Location(421,86,421,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Lbinds < Binds,[org.kframework.attributes.Location(Location(90,86,90,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Lbind < Bind, linear,[org.kframework.attributes.Location(Location(86,86,86,109)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Id < ProcVar,[org.kframework.attributes.Location(Location(57,86,57,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Ground terms,[org.kframework.attributes.Location(Location(127,1,127,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Expressions,[org.kframework.attributes.Location(Location(205,1,205,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( EvalPat < EvalOrPat,[org.kframework.attributes.Location(Location(277,86,277,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Eval,[org.kframework.attributes.Location(Location(124,1,124,8)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Eval Pattern,[org.kframework.attributes.Location(Location(273,1,273,16)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Contract,[org.kframework.attributes.Location(Location(231,1,231,12)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Conditional,[org.kframework.attributes.Location(Location(223,1,223,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Conditional Pattern,[org.kframework.attributes.Location(Location(308,1,308,23)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Collections,[org.kframework.attributes.Location(Location(135,1,135,15)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( CollectionPat < ProcPat,[org.kframework.attributes.Location(Location(284,86,284,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Collection Pattern,[org.kframework.attributes.Location(Location(316,1,316,22)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Collection < Proc,[org.kframework.attributes.Location(Location(64,86,64,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( Bundles,[org.kframework.attributes.Location(Location(160,1,160,11)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( @_(_): ProcVar x Uri ---> Name,[org.kframework.attributes.Location(Location(22,86,22,119)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( @: ProcPat ---> NamePat,[org.kframework.attributes.Location(Location(29,86,29,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( @: Proc -----> Name,[org.kframework.attributes.Location(Location(20,86,20,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2-tuple pattern,[org.kframework.attributes.Location(Location(340,86,340,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 repeated binds,[org.kframework.attributes.Location(Location(117,86,117,105)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 peek binds,[org.kframework.attributes.Location(Location(110,86,110,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 2 linear binds,[org.kframework.attributes.Location(Location(103,86,103,103)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1-tuple,[org.kframework.attributes.Location(Location(156,86,156,96)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1-tuple pattern,[org.kframework.attributes.Location(Location(339,86,339,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1 name declaration,[org.kframework.attributes.Location(Location(305,86,305,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1 name declaration,[org.kframework.attributes.Location(Location(167,86,167,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1 match case,[org.kframework.attributes.Location(Location(171,86,171,101)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 1 argument,[org.kframework.attributes.Location(Location(202,86,202,99)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( 0 arguments,[org.kframework.attributes.Location(Location(201,86,201,100)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( ,[org.kframework.attributes.Location(Location(98,86,98,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( ,[org.kframework.attributes.Location(Location(97,86,97,89)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( *: NamePat ----------------> EvalPat,[org.kframework.attributes.Location(Location(274,86,274,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( *: Name ----------------------> Eval,[org.kframework.attributes.Location(Location(125,86,125,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( (_,..._): ProcPat x ProcVar ---> RhoTuplePat,[org.kframework.attributes.Location(Location(336,86,336,133)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( #type(_): ProcOrPat -> Type,[org.kframework.attributes.Location(Location(373,86,373,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( #type(_): NameOrPat -> Type,[org.kframework.attributes.Location(Location(374,86,374,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment( "Unforgeable" < SimpleType,[org.kframework.attributes.Location(Location(389,86,389,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  and: BExp ----------> BExp,[org.kframework.attributes.Location(Location(220,86,220,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  _!(_): NamePat x RhoTuple ---> SendPat,[org.kframework.attributes.Location(Location(264,86,264,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  _!(_): NamePat x PatTuple ---> SendPat,[org.kframework.attributes.Location(Location(265,86,265,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  _!(_): Name x RhoTuple ------> Send,[org.kframework.attributes.Location(Location(121,86,121,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  _!(_): Name    x PatTuple ---> SendPat,[org.kframework.attributes.Location(Location(263,86,263,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  Unforgeable < Name,[org.kframework.attributes.Location(Location(21,86,21,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  Terminal type - type[_;;_;;_]: String x TerminalType x TerminalType ---> TerminalType,[org.kframework.attributes.Location(Location(419,1,419,90)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  RhoListPat < CollectionPat,[org.kframework.attributes.Location(Location(317,86,317,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  ParPat < ParOrPat,[org.kframework.attributes.Location(Location(253,86,253,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  Intermediate type - type[_;;_;;_]: String x IntermediateType x IntermediateType ---> IntermediateType,[org.kframework.attributes.Location(Location(414,1,414,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  InitialType < IntermediateType,[org.kframework.attributes.Location(Location(417,86,417,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  Initial type,[org.kframework.attributes.Location(Location(397,1,397,17)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  =:_: ProcVar -------> VarRef,[org.kframework.attributes.Location(Location(236,86,236,118)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(  (_): BExp ----------> BExp,[org.kframework.attributes.Location(Location(214,86,214,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   ~_: ProcPat -------------> ProcPat,[org.kframework.attributes.Location(Location(294,86,294,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   ~_: Proc ----------------> ProcPat,[org.kframework.attributes.Location(Location(293,86,293,125)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   or: BExp ----------> BExp,[org.kframework.attributes.Location(Location(221,86,221,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   RhoSetPat < CollectionPat,[org.kframework.attributes.Location(Location(319,86,319,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   RhoMapPat < CollectionPat,[org.kframework.attributes.Location(Location(318,86,318,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   Eval < BExp,[org.kframework.attributes.Location(Location(216,86,216,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   Eval < AExp , for interesting message passing, e.g. for( y <- x ){ *y + 5 },[org.kframework.attributes.Location(Location(208,86,208,166)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   ContractPat < ProcPat,[org.kframework.attributes.Location(Location(287,86,287,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   Contract < Proc,[org.kframework.attributes.Location(Location(73,86,73,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   Bool < Ground,[org.kframework.attributes.Location(Location(128,86,128,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   Bool < BExp,[org.kframework.attributes.Location(Location(215,86,215,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(   "ByteArray" < SimpleType,[org.kframework.attributes.Location(Location(382,86,382,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Uri < Ground,[org.kframework.attributes.Location(Location(131,86,131,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Send < SendOrPat,[org.kframework.attributes.Location(Location(270,86,270,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    ReceivePat < ProcPat,[org.kframework.attributes.Location(Location(288,86,288,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Receive < ReciveOrPat,[org.kframework.attributes.Location(Location(259,86,259,113)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Receive < Proc,[org.kframework.attributes.Location(Location(74,86,74,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    ProcVar < Proc,[org.kframework.attributes.Location(Location(65,86,65,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    ProcVar < Leaf,[org.kframework.attributes.Location(Location(433,86,433,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Proc < ProcOrPat,[org.kframework.attributes.Location(Location(355,86,355,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    PatTuple < CollectionPat,[org.kframework.attributes.Location(Location(321,86,321,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Names < NameOrPats,[org.kframework.attributes.Location(Location(49,86,49,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Name < NameOrPat,[org.kframework.attributes.Location(Location(34,86,34,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Name < BindNamePat,[org.kframework.attributes.Location(Location(94,86,94,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Int < Ground,[org.kframework.attributes.Location(Location(129,86,129,104)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Int < AExp,[org.kframework.attributes.Location(Location(207,86,207,102)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(    Eval < EvalOrPat,[org.kframework.attributes.Location(Location(276,86,276,108)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     VarRef < Proc,[org.kframework.attributes.Location(Location(66,86,66,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     SimplType < ProcPat,[org.kframework.attributes.Location(Location(283,86,283,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     ProcOrPats < OrPat,[org.kframework.attributes.Location(Location(367,86,367,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     ProcOrPat < OrPat,[org.kframework.attributes.Location(Location(363,86,363,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     Par < ParOrPat,[org.kframework.attributes.Location(Location(252,86,252,107)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     NameOrPats < OrPat,[org.kframework.attributes.Location(Location(368,86,368,111)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     NameOrPat < OrPat,[org.kframework.attributes.Location(Location(364,86,364,110)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     MethodPat < ProcPat,[org.kframework.attributes.Location(Location(286,86,286,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     Method < Leaf,[org.kframework.attributes.Location(Location(434,86,434,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     IntermediateType < Type,[org.kframework.attributes.Location(Location(376,86,376,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     Ground < Proc,[org.kframework.attributes.Location(Location(63,86,63,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     Ground < Leaf,[org.kframework.attributes.Location(Location(432,86,432,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     Bundle < Proc,[org.kframework.attributes.Location(Location(75,86,75,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(     (_): AExp ------> AExp,[org.kframework.attributes.Location(Location(206,86,206,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(      {_}: ProcOrPat -------> ProcOrPat,[org.kframework.attributes.Location(Location(354,86,354,127)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(      WildProc < ProcPat,[org.kframework.attributes.Location(Location(282,86,282,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(      WildName < NamePat,[org.kframework.attributes.Location(Location(30,86,30,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(      Match < Proc,[org.kframework.attributes.Location(Location(71,86,71,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(      "String" < SimpleType,[org.kframework.attributes.Location(Location(387,86,387,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(       SendPat < ProcPat,[org.kframework.attributes.Location(Location(289,86,289,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(       Send < Proc,[org.kframework.attributes.Location(Location(72,86,72,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(       EvalPat < ProcPat,[org.kframework.attributes.Location(Location(285,86,285,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(       Eval < Proc,[org.kframework.attributes.Location(Location(67,86,67,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(       BExp < Proc,[org.kframework.attributes.Location(Location(70,86,70,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(       AExp < Proc,[org.kframework.attributes.Location(Location(69,86,69,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(       "Tuple" < SimpleType,[org.kframework.attributes.Location(Location(388,86,388,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(        ParPat < ProcPat,[org.kframework.attributes.Location(Location(291,86,291,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(        Par < Proc,[org.kframework.attributes.Location(Location(77,86,77,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(        Nil < Proc,[org.kframework.attributes.Location(Location(62,86,62,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(        NewPat < ProcPat,[org.kframework.attributes.Location(Location(281,86,281,112)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(        New < Proc,[org.kframework.attributes.Location(Location(61,86,61,106)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(        "List" < SimpleType,[org.kframework.attributes.Location(Location(384,86,384,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(        "Bool" < SimpleType,[org.kframework.attributes.Location(Location(381,86,381,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(         TerminalType < Type,[org.kframework.attributes.Location(Location(377,86,377,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(         "Uri" < SimpleType,[org.kframework.attributes.Location(Location(390,86,390,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(         "Set" < SimpleType,[org.kframework.attributes.Location(Location(386,86,386,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(         "Map" < SimpleType,[org.kframework.attributes.Location(Location(385,86,385,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(         "Int" < SimpleType,[org.kframework.attributes.Location(Location(383,86,383,115)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(          InitialType < Type,[org.kframework.attributes.Location(Location(375,86,375,116)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(           ProcPats < ProcOrPats,[org.kframework.attributes.Location(Location(359,86,359,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(           OrPatOrLeafType < InitialType,[org.kframework.attributes.Location(Location(398,86,398,128)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
  ModuleComment(              Procs < ProcOrPats,[org.kframework.attributes.Location(Location(358,86,358,120)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))])
endmodule


module STYPE-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(7,1,458,9)) org.kframework.attributes.Source(Source(/home/isaac/Documents/KFramework/Git/Languages/GroundedRho/StructuralTypes/stype.k))]
  imports DOMAINS$SYNTAX
  syntax priority {_}_STYPE-SYNTAX >  > WildProc_STYPE-SYNTAX >  >  >  >  >  > ~__STYPE-SYNTAX > _/\__STYPE-SYNTAX > _\/__STYPE-SYNTAX
  syntax priority {_}_STYPE-SYNTAX > 
  syntax priority  > namepat WildName_STYPE-SYNTAX
  syntax priority  > name @_(_)_STYPE-SYNTAX
  syntax priority  > _<=__STYPE-SYNTAX > not__STYPE-SYNTAX > _and__STYPE-SYNTAX > _or__STYPE-SYNTAX
  syntax priority  > _,__STYPE-SYNTAX
  syntax priority  >  > _*__STYPE-SYNTAX > _+__STYPE-SYNTAX _-__STYPE-SYNTAX
  syntax priority  >  > Nil_STYPE-SYNTAX >  >  >  >  >  >  >  >  > 
  syntax priority  > 
  syntax associativity left _|__STYPE-SYNTAX
  syntax VarRef ::= "=:" ProcVar
  syntax Uri ::= "uri(" String ")"
  syntax Unforgeable ::= "unforgeable(" Int ")"
  syntax Type ::= TerminalType
  syntax Type ::= IntermediateType
  syntax Type ::= InitialType
  syntax Type ::= Bool
  syntax Type ::= "Process"
  syntax Type ::= "Pattern"
  syntax Type ::= "Name"
  syntax Type ::= "#type(" ProcOrPat ")" [function()]
  syntax Type ::= "#type(" NameOrPat ")" [function()]
  syntax Truncate ::= "#truncate"
  syntax TerminalType ::= LeafType
  syntax TerminalType ::= "type[" String ";;" TerminalType ";;" TerminalType "]"
  syntax String ::= "toString(" Type ")"
  syntax String ::= "toString(" OrPat ")"
  syntax SimpleType ::= "Uri"
  syntax SimpleType ::= "Unforgeable"
  syntax SimpleType ::= "Tuple"
  syntax SimpleType ::= "String"
  syntax SimpleType ::= "Set"
  syntax SimpleType ::= "Map"
  syntax SimpleType ::= "List"
  syntax SimpleType ::= "Int"
  syntax SimpleType ::= "ByteArray"
  syntax SimpleType ::= "Bool"
  syntax SendPat ::= NamePat "!" RhoTuple
  syntax SendPat ::= NamePat "!" PatTuple
  syntax SendPat ::= NamePat "!!" RhoTuple
  syntax SendPat ::= NamePat "!!" PatTuple
  syntax SendPat ::= Name "!" PatTuple
  syntax SendPat ::= Name "!!" PatTuple
  syntax SendOrPat ::= SendPat
  syntax SendOrPat ::= Send
  syntax Send ::= Name "!" RhoTuple
  syntax Send ::= Name "!!" RhoTuple
  syntax RhoTuplePat ::= "(" ProcPat "," "..." ProcVar ")"
  syntax RhoTuple ::= "(" Proc "," Procs ")" [klabel(tuplen)]
  syntax RhoTuple ::= "(" Proc "," Proc ")" [klabel(tuple2)]
  syntax RhoTuple ::= "(" Proc ")" [klabel(tuple1)]
  syntax RhoSetPat ::= "Set" "(" ProcPat "," "..." ProcVar ")"
  syntax RhoSet ::= "Set" "(" Procs ")"
  syntax RhoSet ::= "Set" "(" Proc ")"
  syntax RhoMapPat ::= "{" RhoKVPat "," "..." ProcVar ":" ProcVar "}"
  syntax RhoMap ::= "{" RhoKVPairs "}"
  syntax RhoListPat ::= "[" ProcPat "," "..." ProcVar "]"
  syntax RhoList ::= "[" Procs "]"
  syntax RhoList ::= "[" Proc "]"
  syntax RhoKVPat ::= ProcPat ":" ProcPat "," RhoKVPat
  syntax RhoKVPat ::= ProcPat ":" ProcPat
  syntax RhoKVPairs ::= Proc ":" Proc "," RhoKVPairs
  syntax RhoKVPairs ::= Proc ":" Proc
  syntax ReceivePat ::= "for" "(" Binds ")" "{" ProcPat "}"
  syntax ReceivePat ::= "for" "(" Bind ")" "{" ProcPat "}"
  syntax ReceiveOrPat ::= ReceivePat
  syntax ReceiveOrPat ::= Receive
  syntax Receive ::= "for" "(" Binds ")" "{" Proc "}"
  syntax Receive ::= "for" "(" Bind ")" "{" Proc "}"
  syntax Rbinds ::= Rbind ";" Rbinds
  syntax Rbinds ::= Rbind ";" Rbind
  syntax Rbind ::= BindNamePats "<=" Name
  syntax Rbind ::= BindNamePat "<=" Name [klabel(bind)]
  syntax Procs ::= Proc "," Procs
  syntax Procs ::= Proc "," Proc
  syntax Procs ::= "{" Procs "}" [bracket()]
  syntax ProcVar ::= Id
  syntax ProcPats ::= ProcPat "," ProcPats
  syntax ProcPats ::= ProcPat "," ProcPat
  syntax ProcPat ::= SimpleType
  syntax ProcPat ::= SendPat
  syntax ProcPat ::= ReceivePat
  syntax ProcPat ::= ProcPat "\\/" ProcPat
  syntax ProcPat ::= ProcPat "\\/" Proc
  syntax ProcPat ::= ProcPat "/\\" ProcPat
  syntax ProcPat ::= ProcPat "/\\" Proc
  syntax ProcPat ::= Proc "\\/" ProcPat
  syntax ProcPat ::= Proc "\\/" Proc
  syntax ProcPat ::= Proc "/\\" ProcPat
  syntax ProcPat ::= Proc "/\\" Proc
  syntax ProcPat ::= ParPat
  syntax ProcPat ::= NewPat
  syntax ProcPat ::= MethodPat
  syntax ProcPat ::= EvalPat
  syntax ProcPat ::= ContractPat
  syntax ProcPat ::= ConditionalPat
  syntax ProcPat ::= CollectionPat
  syntax ProcPat ::= "~" ProcPat
  syntax ProcPat ::= "~" Proc
  syntax ProcPat ::= "{" ProcPat "}"
  syntax ProcPat ::= "WildProc"
  syntax ProcOrPats ::= Procs
  syntax ProcOrPats ::= ProcPats
  syntax ProcOrPat ::= ProcPat
  syntax ProcOrPat ::= Proc
  syntax ProcOrPat ::= "{" ProcOrPat "}"
  syntax Proc ::= VarRef
  syntax Proc ::= Send
  syntax Proc ::= Receive
  syntax Proc ::= ProcVar
  syntax Proc ::= Par
  syntax Proc ::= New
  syntax Proc ::= MethodProc
  syntax Proc ::= Match
  syntax Proc ::= Ground
  syntax Proc ::= Eval
  syntax Proc ::= Contract
  syntax Proc ::= Conditional
  syntax Proc ::= Collection
  syntax Proc ::= Bundle
  syntax Proc ::= BExp
  syntax Proc ::= AExp
  syntax Proc ::= "{" Proc "}" [bracket()]
  syntax Proc ::= "Nil"
  syntax Pbinds ::= Pbind ";" Pbinds
  syntax Pbinds ::= Pbind ";" Pbind
  syntax Pbind ::= BindNamePats "<!" Name
  syntax Pbind ::= BindNamePat "<!" Name
  syntax PatTuple ::= "(" ProcPat "," ProcPats ")" [klabel(patn)]
  syntax PatTuple ::= "(" ProcPat "," ProcPat ")" [klabel(pat2)]
  syntax PatTuple ::= "(" ProcPat ")" [klabel(pat1)]
  syntax ParPat ::= ProcPat "|" ProcPat [left()]
  syntax ParPat ::= ProcPat "|" Proc [left()]
  syntax ParPat ::= Proc "|" ProcPat [left()]
  syntax ParOrPat ::= ParPat
  syntax ParOrPat ::= Par
  syntax Par ::= Proc "|" Proc [left()]
  syntax OrPats ::= ProcOrPats
  syntax OrPats ::= NameOrPats
  syntax OrPatOrLeafType ::= "type[" OrPats "]"
  syntax OrPatOrLeafType ::= "type[" OrPat "]"
  syntax OrPatOrLeafType ::= "type[" Leaf "]"
  syntax OrPat ::= ProcOrPat
  syntax OrPat ::= NameOrPat
  syntax OrPat ::= "{" OrPat "}"
  syntax NewPat ::= "new" Names "in" "{" ProcPat "}" [binder()]
  syntax NewPat ::= "new" Name "in" "{" ProcPat "}" [binder()]
  syntax New ::= "new" Names "in" "{" Proc "}" [binder()]
  syntax New ::= "new" Name "in" "{" Proc "}" [binder()]
  syntax Names ::= Name "," Names
  syntax Names ::= Name "," Name
  syntax Names ::= "{" Names "}" [bracket()]
  syntax NamePats ::= NamePat "," NamePats
  syntax NamePats ::= NamePat "," NamePat
  syntax NamePats ::= "{" NamePats "}" [bracket()]
  syntax NamePat ::= "{" NamePat "}" [bracket()]
  syntax NamePat ::= "WildName"
  syntax NamePat ::= "@" ProcPat [klabel(namepat)]
  syntax NameOrPats ::= Names
  syntax NameOrPats ::= NamePats
  syntax NameOrPats ::= "{" NameOrPats "}" [bracket()]
  syntax NameOrPat ::= NamePat
  syntax NameOrPat ::= Name
  syntax NameOrPat ::= "{" NameOrPat "}" [bracket()]
  syntax Name ::= Unforgeable
  syntax Name ::= "{" Name "}" [bracket()]
  syntax Name ::= "@" ProcVar "(" Uri ")"
  syntax Name ::= "@" Proc [klabel(name)]
  syntax MethodProc ::= Proc "." MethodAndArgs
  syntax MethodPat ::= ProcPat "." MethodAndArgs
  syntax MethodArgs ::= Procs
  syntax MethodArgs ::= Proc
  syntax MethodArgs ::= ""
  syntax MethodAndArgs ::= Method "(" MethodArgs ")"
  syntax Method ::= "union"
  syntax Method ::= "toByteArray"
  syntax Method ::= "slice"
  syntax Method ::= "size"
  syntax Method ::= "set"
  syntax Method ::= "nth"
  syntax Method ::= "length"
  syntax Method ::= "keys"
  syntax Method ::= "hexToBytes"
  syntax Method ::= "getOrElse"
  syntax Method ::= "get"
  syntax Method ::= "diff"
  syntax Method ::= "delete"
  syntax Method ::= "contains"
  syntax Method ::= "confine"
  syntax Method ::= "add"
  syntax MatchCases ::= MatchCase MatchCases
  syntax MatchCases ::= MatchCase MatchCase
  syntax MatchCase ::= ProcPat ":=>" Proc
  syntax Match ::= "match" Proc "{" MatchCases "}"
  syntax Match ::= "match" Proc "{" MatchCase "}"
  syntax LeafType ::= "type[" Truncate "]"
  syntax LeafType ::= "type[" String ";;" Leaf ";;" Leaf "]"
  syntax Leaf ::= ProcVar
  syntax Leaf ::= Method
  syntax Leaf ::= Ground
  syntax Lbinds ::= Lbind ";" Lbinds
  syntax Lbinds ::= Lbind ";" Lbind
  syntax Lbind ::= BindNamePats "<-" Name
  syntax Lbind ::= BindNamePat "<-" Name
  syntax IntermediateType ::= TerminalType
  syntax IntermediateType ::= InitialType
  syntax IntermediateType ::= "type[" String ";;" IntermediateType ";;" IntermediateType "]" [strict(2,3)]
  syntax InitialType ::= OrPatOrLeafType
  syntax InitialType ::= "type[" RhoKVPat "]"
  syntax InitialType ::= "type[" RhoKVPairs "]"
  syntax InitialType ::= "type[" MethodArgs "]"
  syntax InitialType ::= "type[" MethodAndArgs "]"
  syntax InitialType ::= "type[" MatchCases "]"
  syntax InitialType ::= "type[" MatchCase "]"
  syntax InitialType ::= "type[" IfThenPat "]"
  syntax InitialType ::= "type[" IfThen "]"
  syntax InitialType ::= "type[" ElsePat "]"
  syntax InitialType ::= "type[" Else "]"
  syntax InitialType ::= "type[" Binds "]"
  syntax InitialType ::= "type[" BindNamePats "]"
  syntax InitialType ::= "type[" BindNamePat "]"
  syntax InitialType ::= "type[" Bind "]"
  syntax IfThenPat ::= "if" "(" BExp ")" "then" ProcPat [strict(1)]
  syntax IfThen ::= "if" "(" BExp ")" "then" Proc [strict(1)]
  syntax Ground ::= Uri
  syntax Ground ::= String
  syntax Ground ::= Int
  syntax Ground ::= Bool
  syntax EvalPat ::= "*" NamePat
  syntax EvalOrPat ::= EvalPat
  syntax EvalOrPat ::= Eval
  syntax Eval ::= "*" Name
  syntax ElsePat ::= IfThenPat "else" ProcPat
  syntax Else ::= IfThen "else" Proc
  syntax ContractPat ::= "contract" Name "(" BindNamePats ")" "=" "{" ProcPat "}"
  syntax ContractPat ::= "contract" Name "(" BindNamePat ")" "=" "{" ProcPat "}"
  syntax Contract ::= "contract" Name "(" BindNamePats ")" "=" "{" Proc "}"
  syntax Contract ::= "contract" Name "(" BindNamePat ")" "=" "{" Proc "}"
  syntax ConditionalPat ::= IfThenPat
  syntax ConditionalPat ::= ElsePat
  syntax Conditional ::= IfThen
  syntax Conditional ::= Else
  syntax CollectionPat ::= RhoTuplePat
  syntax CollectionPat ::= RhoSetPat
  syntax CollectionPat ::= RhoMapPat
  syntax CollectionPat ::= RhoListPat
  syntax CollectionPat ::= PatTuple
  syntax Collection ::= RhoTuple
  syntax Collection ::= RhoSet
  syntax Collection ::= RhoMap
  syntax Collection ::= RhoList
  syntax Bundle ::= "bundle0" "{" Proc "}"
  syntax Bundle ::= "bundle-" "{" Proc "}"
  syntax Bundle ::= "bundle+" "{" Proc "}"
  syntax Bundle ::= "bundle" "{" Proc "}"
  syntax Bool ::= Type "#isin" Type [strict(1,2)]
  syntax Bool ::= Type "#isIn" Type [function()]
  syntax Bool ::= Type "#isIn" ProcOrPat
  syntax Bool ::= Type "#isIn" NameOrPat
  syntax Bool ::= ProcOrPat "#isIn" ProcOrPat
  syntax Bool ::= NameOrPat "#isIn" NameOrPat
  syntax Bool ::= "#isProc" Type [function()]
  syntax Bool ::= "#isPat" Type [function()]
  syntax Bool ::= "#isName" Type [function()]
  syntax Binds ::= Rbinds
  syntax Binds ::= Pbinds
  syntax Binds ::= Lbinds
  syntax BindNamePats ::= Names
  syntax BindNamePats ::= NamePats
  syntax BindNamePat ::= NamePat
  syntax BindNamePat ::= Name
  syntax Bind ::= Rbind
  syntax Bind ::= Pbind
  syntax Bind ::= Lbind
  syntax BExp ::= String
  syntax BExp ::= Eval
  syntax BExp ::= Bool
  syntax BExp ::= BExp "or" BExp [strict()]
  syntax BExp ::= BExp "and" BExp [strict()]
  syntax BExp ::= AExp "<=" AExp [strict()]
  syntax BExp ::= "not" BExp [strict()]
  syntax BExp ::= "(" BExp ")" [bracket()]
  syntax AExp ::= String
  syntax AExp ::= Int
  syntax AExp ::= Eval
  syntax AExp ::= AExp "-" AExp [strict()]
  syntax AExp ::= AExp "+" AExp [strict()]
  syntax AExp ::= AExp "*" AExp [strict()]
  syntax AExp ::= "(" AExp ")" [bracket()]
endmodule


module UNSIGNED-INT-SYNTAX [org.kframework.attributes.Location(Location(362,1,365,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(362,1,365,9)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Int [hook(INT.Int) org.kframework.attributes.Location(Location(363,3,363,28)) org.kframework.attributes.Source(Source(/usr/lib/kframework/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+" [prec(2) prefer() token()]
endmodule
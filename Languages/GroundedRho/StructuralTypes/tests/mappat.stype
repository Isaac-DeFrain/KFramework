// Type - map pattern

 type[ { WildName!(for( WildName <! @chan1 ){ @Nil!(WildProc)}) : WildProc , WildName!(WildProc) | WildProc : WildProc , ... x:y } ]

/*
  Output:
  type[ "mappat" ;; type[ "kvpats" ;; type[ "kvpat" ;; type[ "send" ;; type[ "leaf" ;; "wildcard" ;; "name" ] ;; type[ "pattuple" ;; type[ "receive" ;; type[ "peek" ;; type[ "leaf" ;; "wildcard" ;; "name" ] ;; type[ "quote" ;; type[ "leaf" ;; "procvar" ;; chan1 ] ;; type[ #truncate ] ] ] ;; type[ "send" ;; type[ "quote" ;; type[ "leaf" ;; "nil" ;; "Nil" ] ;; type[ #truncate ] ] ;; type[ "pattuple" ;; type[ "leaf" ;; "wildcard" ;; "proc" ] ;; type[ #truncate ] ] ] ] ;; type[ #truncate ] ] ] ;; type[ "leaf" ;; "wildcard" ;; "proc" ] ] ;; type[ "kvpat" ;; type[ "par" ;; type[ "send" ;; type[ "leaf" ;; "wildcard" ;; "name" ] ;; type[ "pattuple" ;; type[ "leaf" ;; "wildcard" ;; "proc" ] ;; type[ #truncate ] ] ] ;; type[ "leaf" ;; "wildcard" ;; "proc" ] ] ;; type[ "leaf" ;; "wildcard" ;; "proc" ] ] ] ;; type[ "kvpair" ;; type[ "leaf" ;; "procvar" ;; x ] ;; type[ "leaf" ;; "procvar" ;; y ] ] ]
*/